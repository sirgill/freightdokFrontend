{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Desktop/freightdok/client/src/components/layout/Navbar.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport theme from \"./ui/Theme\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\nfunction ElevationScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: { ...theme.mixins.toolbar\n  },\n  tabContainer: {\n    marginLeft: \"auto\"\n  },\n  tab: { ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"15px\"\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawerIcon: {\n    color: \"#1891FC\",\n    height: \"30px\",\n    width: \"30px\"\n  },\n  drawerItem: { ...theme.typography.tab,\n    color: \"#1891FC\",\n    opacity: 0.7\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1\n  }\n}));\n\nconst Navbar = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  const classes = useStyles();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (e, value) => {\n    setValue(value);\n  };\n\n  useEffect(() => {\n    switch (window.location.pathname) {\n      case \"/\":\n        setValue(0);\n        break;\n\n      case \"/about\":\n        setValue(1);\n        break;\n\n      case \"/contact\":\n        setValue(2);\n        break;\n\n      case \"/login\":\n        setValue(3);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n  const tabs = /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    className: classes.tab,\n    component: Link,\n    to: \"/\",\n    label: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    className: classes.tab,\n    component: Link,\n    label: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    className: classes.tab,\n    component: Link,\n    label: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    className: classes.tab,\n    component: Link,\n    to: \"/login\",\n    label: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n  const drawer = /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    disableBackdropTransition: !iOS,\n    disableDiscovery: iOS,\n    open: openDrawer,\n    onClose: () => setOpenDrawer(false),\n    onOpen: () => setOpenDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => {\n      setOpenDrawer(false);\n      setValue(0);\n    },\n    button: true,\n    component: Link,\n    to: \"/\",\n    selected: value === 0,\n    classes: {\n      selected: classes.drawerItemSelected\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"home\")), /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => {\n      setOpenDrawer(false);\n      setValue(1);\n    },\n    button: true,\n    component: Link,\n    selected: value === 1,\n    classes: {\n      selected: classes.drawerItemSelected\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"about\")), /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => {\n      setOpenDrawer(false);\n      setValue(2);\n    },\n    button: true,\n    component: Link,\n    selected: value === 2,\n    classes: {\n      selected: classes.drawerItemSelected\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"contact\")), /*#__PURE__*/React.createElement(ListItem, {\n    onClick: () => {\n      setOpenDrawer(false);\n      setValue(3);\n    },\n    button: true,\n    component: Link,\n    to: \"/login\",\n    selected: value === 3,\n    classes: {\n      selected: classes.drawerItemSelected\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"login\")))), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.drawerIconContainer,\n    onClick: () => setOpenDrawer(!openDrawer),\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    className: classes.drawerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ElevationScroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    color: \"secondary\",\n    className: classes.appbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    disablegutter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.tab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"freightdok.\"), matches ? drawer : tabs))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }));\n};\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(Navbar);","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/components/layout/Navbar.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Link","AppBar","Toolbar","Typography","useScrollTrigger","makeStyles","Tabs","Tab","useMediaQuery","useTheme","SwipeableDrawer","IconButton","MenuIcon","List","ListItem","ListItemText","theme","connect","PropTypes","logout","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","useStyles","toolbarMargin","mixins","toolbar","tabContainer","marginLeft","tab","typography","minWidth","drawerIconContainer","backgroundColor","drawerIcon","color","height","width","drawerItem","opacity","drawerItemSelected","appbar","zIndex","modal","Navbar","auth","isAuthenticated","loading","classes","iOS","process","browser","test","navigator","userAgent","matches","breakpoints","down","openDrawer","setOpenDrawer","value","setValue","handleChange","e","window","location","pathname","tabs","drawer","selected","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport theme from \"./ui/Theme\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar\n  },\n  tabContainer: {\n    marginLeft: \"auto\"\n  },\n\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"15px\"\n  },\n\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawerIcon: {\n    color: \"#1891FC\",\n    height: \"30px\",\n    width: \"30px\"\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"#1891FC\",\n    opacity: 0.7\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n        opacity: 1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n  }\n}));\n\nconst Navbar = ({ auth: { isAuthenticated, loading } }) => {\n  const classes = useStyles();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const [value, setValue] = useState(0);\n\n\n\n  const handleChange = (e, value) => {\n    setValue(value);\n  };\n\n\n  useEffect(() => {\n    switch (window.location.pathname) {\n      case \"/\":\n        setValue(0);\n      break;\n      case \"/about\":\n        setValue(1);\n      break;\n      case \"/contact\":\n        setValue(2);\n      break;\n      case \"/login\":\n        setValue(3);\n      break;\n      default:\n      break;\n    }\n  }, []);\n\n\n\n  const tabs = (\n    <React.Fragment>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        className={classes.tabContainer}\n      >\n        <Tab className={classes.tab} component={Link} to=\"/\" label=\"home\" />\n        <Tab className={classes.tab} component={Link} label=\"about\" />\n        <Tab className={classes.tab} component={Link} label=\"contact\" />\n        <Tab\n          className={classes.tab}\n          component={Link}\n          to=\"/login\"\n          label=\"login\"\n        />\n      </Tabs>\n    </React.Fragment>\n  );\n\n  const drawer = (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n      >\n      <div className={classes.toolbarMargin} />\n        <List disablePadding>\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              setValue(0);\n            }}\n            button\n            component={Link}\n            to=\"/\"\n            selected={value === 0}\n            classes={{selected: classes.drawerItemSelected}}\n          >\n            <ListItemText\n              className={classes.drawerItem}\n              disableTypography\n            >\n              home\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              setValue(1);\n            }}\n            button\n            component={Link}\n            selected={value === 1}\n            classes={{selected: classes.drawerItemSelected}}\n          >\n            <ListItemText className={\n              classes.drawerItem}\n              disableTypography>\n              about\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              setValue(2);\n            }}\n            button\n            component={Link}\n            selected={value === 2}\n            classes={{selected: classes.drawerItemSelected}}\n          >\n            <ListItemText className={\n                classes.drawerItem\n            } disableTypography>\n              contact\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              setValue(3);\n            }}\n            button\n            component={Link}\n            to=\"/login\"\n            selected={value === 3}\n            classes={{selected: classes.drawerItemSelected}}\n          >\n            <ListItemText className={\n                classes.drawerItem\n            } disableTypography>\n              login\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon className={classes.drawerIcon} />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" color=\"secondary\" className={classes.appbar}>\n          <Toolbar disablegutter>\n            <Typography className={classes.tab}>freightdok.</Typography>\n            {matches ? drawer : tabs}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.toolbarMargin} />\n    </React.Fragment>\n  );\n};\n\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n"]},"metadata":{},"sourceType":"module"}