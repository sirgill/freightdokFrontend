{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _colors = _interopRequireDefault(require(\"@react-pdf/stylesheet/lib/transform/colors\"));\n\nvar _layoutText = _interopRequireDefault(require(\"../svg/layoutText\"));\n\nvar _replaceDefs = _interopRequireDefault(require(\"../svg/replaceDefs\"));\n\nvar _getContainer = _interopRequireDefault(require(\"../svg/getContainer\"));\n\nvar _parseViewbox = _interopRequireDefault(require(\"../svg/parseViewbox\"));\n\nvar _inheritProps = _interopRequireDefault(require(\"../svg/inheritProps\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\nvar _parseAspectRatio = _interopRequireDefault(require(\"../svg/parseAspectRatio\"));\n\nvar STYLE_PROPS = ['width', 'height', 'color', 'stroke', 'strokeWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'fill', 'fillRule', 'clipPath', 'offset', 'transform', 'strokeLinejoin', 'strokeLinecap', 'strokeDasharray'];\nvar VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nvar HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n\nvar transformPercent = function transformPercent(container) {\n  return R.mapObjIndexed(function (value, key) {\n    var match = (0, _matchPercent.default)(value);\n\n    if (match && VERTICAL_PROPS.includes(key)) {\n      return match.percent * container.height;\n    }\n\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n      return match.percent * container.width;\n    }\n\n    return value;\n  });\n};\n\nvar parsePercent = function parsePercent(value) {\n  var match = (0, _matchPercent.default)(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nvar parseProps = function parseProps(container) {\n  return R.compose(R.evolve({\n    props: R.o(R.evolve({\n      x: parseFloat,\n      x1: parseFloat,\n      x2: parseFloat,\n      y: parseFloat,\n      y1: parseFloat,\n      y2: parseFloat,\n      r: parseFloat,\n      rx: parseFloat,\n      ry: parseFloat,\n      cx: parseFloat,\n      cy: parseFloat,\n      width: parseFloat,\n      height: parseFloat,\n      offset: parsePercent,\n      fill: _colors.default,\n      opacity: parsePercent,\n      stroke: _colors.default,\n      stopOpacity: parsePercent,\n      stopColor: _colors.default\n    }), transformPercent(container))\n  }));\n};\n\nvar mergeStyles = function mergeStyles(node) {\n  var style = R.propOr({}, 'style', node);\n  return R.evolve({\n    props: R.merge(style)\n  }, node);\n};\n\nvar removeNoneValues = R.evolve({\n  props: R.map(R.when(R.equals('none'), R.always(null)))\n});\n\nvar pickStyleProps = function pickStyleProps(node) {\n  var styleProps = R.o(R.pick(STYLE_PROPS), R.propOr({}, 'props'))(node);\n  return R.evolve({\n    style: R.merge(styleProps)\n  }, node);\n};\n\nvar parseSvgProps = R.evolve({\n  props: R.evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: _parseViewbox.default,\n    preserveAspectRatio: _parseAspectRatio.default\n  })\n});\n\nvar wrapBetweenTspan = function wrapBetweenTspan(node) {\n  return {\n    type: 'TSPAN',\n    props: {},\n    children: [node]\n  };\n};\n\nvar addMissingTspan = R.when(isText, R.evolve({\n  children: R.map(R.when(isTextInstance, wrapBetweenTspan))\n}));\n\nvar resolveSvgNode = function resolveSvgNode(container) {\n  return R.compose(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles);\n};\n\nvar resolveChildren = function resolveChildren(container) {\n  return function (node) {\n    return R.evolve({\n      children: R.map(R.compose(resolveChildren(container), resolveSvgNode(container)))\n    })(node);\n  };\n};\n\nvar parseText = function parseText(fontStore) {\n  return function (node) {\n    return R.ifElse(isText, (0, _layoutText.default)(fontStore), R.evolve({\n      children: R.map(parseText(fontStore))\n    }))(node);\n  };\n};\n\nvar resolveSvgRoot = function resolveSvgRoot(fontStore) {\n  return function (node) {\n    var container = (0, _getContainer.default)(node);\n    return R.compose(_replaceDefs.default, parseText(fontStore), parseSvgProps, pickStyleProps, _inheritProps.default, resolveChildren(container))(node);\n  };\n};\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveSvg = function resolveSvg(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolveSvg(child, fontStore);\n  };\n\n  return R.compose(R.evolve({\n    children: R.map(mapChild)\n  }), R.when(isSvg, resolveSvgRoot(fontStore)))(node);\n};\n\nvar _default = resolveSvg;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/node_modules/@react-pdf/layout/lib/steps/resolveSvg.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_colors","_layoutText","_replaceDefs","_getContainer","_parseViewbox","_inheritProps","_matchPercent","_parseAspectRatio","STYLE_PROPS","VERTICAL_PROPS","HORIZONTAL_PROPS","isType","propEq","isSvg","Svg","isText","Text","isTextInstance","TextInstance","transformPercent","container","mapObjIndexed","value","key","match","includes","percent","height","width","parsePercent","parseFloat","parseProps","compose","evolve","props","o","x","x1","x2","y","y1","y2","r","rx","ry","cx","cy","offset","fill","opacity","stroke","stopOpacity","stopColor","mergeStyles","node","style","propOr","merge","removeNoneValues","map","when","equals","always","pickStyleProps","styleProps","pick","parseSvgProps","viewBox","preserveAspectRatio","wrapBetweenTspan","type","children","addMissingTspan","resolveSvgNode","resolveChildren","parseText","fontStore","ifElse","resolveSvgRoot","resolveSvg","mapChild","child","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _colors = _interopRequireDefault(require(\"@react-pdf/stylesheet/lib/transform/colors\"));\n\nvar _layoutText = _interopRequireDefault(require(\"../svg/layoutText\"));\n\nvar _replaceDefs = _interopRequireDefault(require(\"../svg/replaceDefs\"));\n\nvar _getContainer = _interopRequireDefault(require(\"../svg/getContainer\"));\n\nvar _parseViewbox = _interopRequireDefault(require(\"../svg/parseViewbox\"));\n\nvar _inheritProps = _interopRequireDefault(require(\"../svg/inheritProps\"));\n\nvar _matchPercent = _interopRequireDefault(require(\"../utils/matchPercent\"));\n\nvar _parseAspectRatio = _interopRequireDefault(require(\"../svg/parseAspectRatio\"));\n\nvar STYLE_PROPS = ['width', 'height', 'color', 'stroke', 'strokeWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'fill', 'fillRule', 'clipPath', 'offset', 'transform', 'strokeLinejoin', 'strokeLinecap', 'strokeDasharray'];\nvar VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nvar HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\nvar isType = R.propEq('type');\nvar isSvg = isType(P.Svg);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n\nvar transformPercent = function transformPercent(container) {\n  return R.mapObjIndexed(function (value, key) {\n    var match = (0, _matchPercent.default)(value);\n\n    if (match && VERTICAL_PROPS.includes(key)) {\n      return match.percent * container.height;\n    }\n\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n      return match.percent * container.width;\n    }\n\n    return value;\n  });\n};\n\nvar parsePercent = function parsePercent(value) {\n  var match = (0, _matchPercent.default)(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nvar parseProps = function parseProps(container) {\n  return R.compose(R.evolve({\n    props: R.o(R.evolve({\n      x: parseFloat,\n      x1: parseFloat,\n      x2: parseFloat,\n      y: parseFloat,\n      y1: parseFloat,\n      y2: parseFloat,\n      r: parseFloat,\n      rx: parseFloat,\n      ry: parseFloat,\n      cx: parseFloat,\n      cy: parseFloat,\n      width: parseFloat,\n      height: parseFloat,\n      offset: parsePercent,\n      fill: _colors.default,\n      opacity: parsePercent,\n      stroke: _colors.default,\n      stopOpacity: parsePercent,\n      stopColor: _colors.default\n    }), transformPercent(container))\n  }));\n};\n\nvar mergeStyles = function mergeStyles(node) {\n  var style = R.propOr({}, 'style', node);\n  return R.evolve({\n    props: R.merge(style)\n  }, node);\n};\n\nvar removeNoneValues = R.evolve({\n  props: R.map(R.when(R.equals('none'), R.always(null)))\n});\n\nvar pickStyleProps = function pickStyleProps(node) {\n  var styleProps = R.o(R.pick(STYLE_PROPS), R.propOr({}, 'props'))(node);\n  return R.evolve({\n    style: R.merge(styleProps)\n  }, node);\n};\n\nvar parseSvgProps = R.evolve({\n  props: R.evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: _parseViewbox.default,\n    preserveAspectRatio: _parseAspectRatio.default\n  })\n});\n\nvar wrapBetweenTspan = function wrapBetweenTspan(node) {\n  return {\n    type: 'TSPAN',\n    props: {},\n    children: [node]\n  };\n};\n\nvar addMissingTspan = R.when(isText, R.evolve({\n  children: R.map(R.when(isTextInstance, wrapBetweenTspan))\n}));\n\nvar resolveSvgNode = function resolveSvgNode(container) {\n  return R.compose(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles);\n};\n\nvar resolveChildren = function resolveChildren(container) {\n  return function (node) {\n    return R.evolve({\n      children: R.map(R.compose(resolveChildren(container), resolveSvgNode(container)))\n    })(node);\n  };\n};\n\nvar parseText = function parseText(fontStore) {\n  return function (node) {\n    return R.ifElse(isText, (0, _layoutText.default)(fontStore), R.evolve({\n      children: R.map(parseText(fontStore))\n    }))(node);\n  };\n};\n\nvar resolveSvgRoot = function resolveSvgRoot(fontStore) {\n  return function (node) {\n    var container = (0, _getContainer.default)(node);\n    return R.compose(_replaceDefs.default, parseText(fontStore), parseSvgProps, pickStyleProps, _inheritProps.default, resolveChildren(container))(node);\n  };\n};\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveSvg = function resolveSvg(node, fontStore) {\n  var mapChild = function mapChild(child) {\n    return resolveSvg(child, fontStore);\n  };\n\n  return R.compose(R.evolve({\n    children: R.map(mapChild)\n  }), R.when(isSvg, resolveSvgRoot(fontStore)))(node);\n};\n\nvar _default = resolveSvg;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}