{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_UPDATE, USER_UPDATED, AUTH_UPDATE_FAIL } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  roles: [],\n  error: ''\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload.user,\n        roles: payload.roles\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_UPDATE:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_UPDATED:\n      const updatedUser = payload;\n      if (updatedUser.password) delete updatedUser.password;\n      return { ...state,\n        loading: false,\n        user: { ...state.user,\n          ...updatedUser\n        }\n      };\n\n    case AUTH_UPDATE_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdokFrontend/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_UPDATE","USER_UPDATED","AUTH_UPDATE_FAIL","initialState","token","localStorage","getItem","isAuthenticated","loading","user","roles","error","state","action","type","payload","setItem","updatedUser","password","removeItem"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,WARF,EASEC,YATF,EAUEC,gBAVF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,eAAe,UAASC,KAAK,GAAGT,YAAjB,EAA+BU,MAA/B,EAAuC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAOC,IAAP;AACE,SAAKnB,WAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELL,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAEM,OAAO,CAACN,IAJT;AAKLC,QAAAA,KAAK,EAAEK,OAAO,CAACL;AALV,OAAP;;AAOF,SAAKjB,gBAAL;AACA,SAAKI,aAAL;AACEQ,MAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACX,KAAtC;AACA,aAAO,EACL,GAAGQ,KADE;AAEL,WAAGG,OAFE;AAGLR,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKd,aAAL;AACA,SAAKM,WAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,YAAL;AACE,YAAMgB,WAAW,GAAGF,OAApB;AACA,UAAIE,WAAW,CAACC,QAAhB,EACE,OAAOD,WAAW,CAACC,QAAnB;AACF,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiB,aAAGQ;AAApB;AAHD,OAAP;;AAKF,SAAKf,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEI;AAHF,OAAP;;AAKF,SAAKnB,UAAL;AACA,SAAKE,UAAL;AACA,SAAKC,MAAL;AACEM,MAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGP,KADE;AAELR,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE,KAJJ;AAKLC,QAAAA,IAAI,EAAE;AALD,OAAP;;AAOA;AACE,aAAOG,KAAP;AAnDN;AAqDD","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_UPDATE,\n  USER_UPDATED,\n  AUTH_UPDATE_FAIL\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  roles: [],\n  error: '',\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch(type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload.user,\n        roles: payload.roles\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_UPDATE:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_UPDATED:\n      const updatedUser = payload;\n      if (updatedUser.password)\n        delete updatedUser.password\n      return {\n        ...state,\n        loading: false,\n        user: { ...state.user, ...updatedUser }\n      };\n    case AUTH_UPDATE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n      default:\n        return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}