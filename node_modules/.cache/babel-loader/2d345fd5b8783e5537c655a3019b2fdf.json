{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/loads/LoadDetailModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateLoad } from '../../actions/load';\nimport moment from \"moment\";\nimport { getDrivers } from '../../actions/driver';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst verticalAlignStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)'\n};\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    textAlign: \"center\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  resizeDialog: {\n    fontSize: 14\n  }\n}));\n\nconst getModalStyle = () => {\n  return {\n    top: '50%',\n    left: '50%',\n    width: '80%',\n    transform: 'translate(-50%, -50%)',\n    overflowY: 'auto',\n    height: 'calc(100vh - 50px)'\n  };\n};\n\nconst formInitialState = {\n  status: '',\n  rate: '',\n  assignedTo: null,\n  trailorNumber: '',\n  rateConfirmation: null,\n  proofDelivery: null,\n  accessorials: [],\n  pickup: [],\n  drop: []\n};\n\nconst TextPlaceHolder = ({\n  value\n}) => value ? value : '--';\n\n_c = TextPlaceHolder;\n\nconst LoadDetailModal = ({\n  modalEdit,\n  open,\n  handleClose,\n  load: {\n    _id,\n    brokerage,\n    loadNumber,\n    rate,\n    trailorNumber,\n    rateConfirmation,\n    proofDelivery,\n    pickup,\n    drop,\n    assignedTo = null,\n    status = '',\n    accessorials = []\n  }\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [edit, setEdit] = React.useState(false);\n  const [form, setForm] = React.useState({ ...formInitialState\n  });\n  const rateConfirmationRef = useRef();\n  const proofDeliveryRef = useRef();\n  useEffect(() => {\n    setupDrivers();\n    setForm({\n      status,\n      assignedTo,\n      accessorials,\n      trailorNumber,\n      pickup,\n      drop,\n      rate\n    });\n    resetFileInputs();\n  }, []);\n  useEffect(() => {\n    const drivers = state.driver.drivers;\n\n    if (drivers.length > 0) {\n      for (let driver of drivers) {\n        if (driver.loads.length > 0) {\n          for (let load of driver.loads) {\n            if (load._id === _id) {\n              setForm({ ...form,\n                assignedTo: driver._id\n              });\n            }\n          }\n        }\n      }\n    }\n  }, [state.driver.drivers]);\n  useEffect(() => {\n    const error = state.load.error;\n\n    if (!error.msg) {\n      setEdit(false);\n      handleClose();\n    }\n  }, [state.load.error]);\n  useEffect(() => {\n    if (modalEdit) setEdit(true);\n  }, [modalEdit]);\n  useEffect(() => {\n    if (!state.load.load) {\n      handleClose();\n    }\n  }, [state.load.load]);\n\n  const setupDrivers = () => {\n    dispatch(getDrivers());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(updateLoad({ ...form,\n      _id\n    })); // resetFileInputs();\n  };\n\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handlePickDropChange = ({\n    target: {\n      value\n    }\n  }, keyToUpdate, childKey) => {\n    if (keyToUpdate === 'pickup') setForm({ ...form,\n      pickup: [{ ...form.pickup[0],\n        [childKey]: value\n      }]\n    });else if (keyToUpdate === 'drop') setForm({ ...form,\n      drop: [{ ...form.drop[0],\n        [childKey]: value\n      }]\n    });\n  };\n\n  const handleCancel = () => {\n    setForm({ ...form,\n      assignedTo,\n      status,\n      accessorials,\n      pickup,\n      drop\n    });\n    setEdit(false);\n    resetFileInputs();\n  };\n\n  const handleDateChange = (date, key) => {\n    setForm({ ...form,\n      [key]: [{ ...form[key][0],\n        [`${key}Date`]: date\n      }]\n    });\n  };\n\n  const handleFileChange = ({\n    target: {\n      name,\n      files\n    }\n  }) => {\n    setForm(f => ({ ...f,\n      [name]: files || null\n    }));\n  };\n\n  const resetFileInputs = () => {\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\n  };\n\n  const handleInOutTime = (date, parent_key, child_key) => {\n    // parent_key: drop || pickup\n    // child_key: in_time || out_time\n    setForm(form => ({ ...form,\n      [parent_key]: [{ ...form[parent_key][0],\n        [child_key]: date\n      }]\n    }));\n  };\n\n  const getRole = () => {\n    try {\n      const {\n        auth: {\n          user: {\n            role\n          }\n        }\n      } = state;\n      return role;\n    } catch (e) {\n      return '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"label-status\",\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"label-status\",\n                      id: \"demo-simple-select-outlined\",\n                      value: form.status,\n                      label: \"Status\",\n                      name: \"status\",\n                      disabled: !edit,\n                      onChange: handleOnChange,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Loaded',\n                        children: \"Loaded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Unloaded',\n                        children: \"UnLoaded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Loading',\n                        children: \"Loading\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Cancelled',\n                        children: \"Cancelled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Picked Up',\n                        children: \"Picked up\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Delivered',\n                        children: \"Delivered\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"label-assigned\",\n                      children: \"Assigned\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"label-assigned\",\n                      lable: \"Assigned\",\n                      id: \"demo-simple-select-outlined\",\n                      name: \"assignedTo\",\n                      disabled: !edit,\n                      value: form.assignedTo,\n                      onChange: handleOnChange,\n                      children: state.driver.drivers.map(({\n                        _id,\n                        firstName,\n                        lastName\n                      }) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: _id,\n                        children: [firstName, \" \", lastName]\n                      }, _id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 109\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    className: classes.formControl,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"label-accessorials\",\n                      children: \"Accessorials\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"label-accessorials\",\n                      label: \"Accessorials\",\n                      id: \"demo-simple-select-outlined\",\n                      name: \"accessorials\",\n                      value: form.accessorials,\n                      disabled: !edit,\n                      multiple: true,\n                      onChange: handleOnChange,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'TUNO',\n                        children: \"TUNO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Detention',\n                        children: \"Detention\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Lumper',\n                        children: \"Lumper\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'Layover',\n                        children: \"Layover\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: !edit,\n                    id: \"outlined-basic\",\n                    variant: \"outlined\",\n                    label: \"Trailer #\",\n                    name: \"trailorNumber\",\n                    value: form.trailorNumber,\n                    onChange: handleOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Pickup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  variant: \"outlined\",\n                  label: \"Shipper Name\",\n                  value: form.pickup[0] ? form.pickup[0].shipperName : '',\n                  onChange: event => handlePickDropChange(event, 'pickup', 'shipperName')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: pickup[0] ? pickup[0].shipperName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  variant: \"outlined\",\n                  label: \"Address\",\n                  value: form.pickup[0] ? form.pickup[0].pickupAddress : '',\n                  onChange: event => handlePickDropChange(event, 'pickup', 'pickupAddress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: pickup[0] ? pickup[0].pickupAddress : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  className: classes.root,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"City\",\n                      value: form.pickup[0] ? form.pickup[0].pickupCity : '',\n                      onChange: event => handlePickDropChange(event, 'pickup', 'pickupCity')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"State\",\n                      value: form.pickup[0] ? form.pickup[0].pickupState : '',\n                      onChange: event => handlePickDropChange(event, 'pickup', 'pickupState')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"Zip\",\n                      value: form.pickup[0] ? form.pickup[0].pickupZip : '',\n                      onChange: event => handlePickDropChange(event, 'pickup', 'pickupZip')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: pickup[0] ? pickup[0].pickupCity : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 37\n                  }, this), \",\", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: pickup[0] ? pickup[0].pickupState : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 37\n                  }, this), \",\", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: pickup[0] ? pickup[0].pickupZip : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.pickup[0] ? form.pickup[0].pickupDate : '',\n                        onChange: date => handleDateChange(date, 'pickup')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"date-picker-dialog\",\n                        format: \"MM/dd/yyyy\",\n                        value: form.pickup[0] ? form.pickup[0].pickupDate : '',\n                        onChange: date => handleDateChange(date, 'pickup')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 42\n                }, this) : pickup[0] ? moment(pickup[0].pickupDate).format('LLL') : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: edit ? /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        label: \"In Time\",\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.pickup[0] ? form.pickup[0].in_time : '',\n                        onChange: date => handleInOutTime(date, 'pickup', 'in_time')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 50\n                    }, this) : pickup[0] && pickup[0].in_time ? moment(pickup[0].in_time).format('h:mm A') : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: edit ? /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        label: \"Out Time\",\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.pickup[0] ? form.pickup[0].out_time : '',\n                        onChange: date => handleInOutTime(date, 'pickup', 'out_time')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 50\n                    }, this) : pickup[0] && pickup[0].out_time ? moment(pickup[0].out_time).format('h:mm A') : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  variant: \"outlined\",\n                  label: \"Receiver Name\",\n                  value: form.drop[0] ? form.drop[0].receiverName : '',\n                  onChange: event => handlePickDropChange(event, 'drop', 'receiverName')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: drop[0] ? drop[0].receiverName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-basic\",\n                  variant: \"outlined\",\n                  label: \"Address\",\n                  value: form.drop[0] ? form.drop[0].dropAddress : '',\n                  onChange: event => handlePickDropChange(event, 'drop', 'dropAddress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: drop[0] ? drop[0].dropAddress : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  className: classes.root,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"City\",\n                      value: form.drop[0] ? form.drop[0].dropCity : '',\n                      onChange: event => handlePickDropChange(event, 'drop', 'dropCity')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"State\",\n                      value: form.drop[0] ? form.drop[0].dropState : '',\n                      onChange: event => handlePickDropChange(event, 'drop', 'dropState')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"outlined-basic\",\n                      variant: \"outlined\",\n                      label: \"Zip\",\n                      value: form.drop[0] ? form.drop[0].dropZip : '',\n                      onChange: event => handlePickDropChange(event, 'drop', 'dropZip')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: drop[0] ? drop[0].dropCity : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 37\n                  }, this), \",\", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: drop[0] ? drop[0].dropState : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 37\n                  }, this), \",\", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                    value: drop[0] ? drop[0].dropZip : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: edit ? /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.drop[0] ? form.drop[0].dropDate : '',\n                        onChange: date => handleDateChange(date, 'drop')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"date-picker-dialog\",\n                        format: \"MM/dd/yyyy\",\n                        value: form.drop[0] ? form.drop[0].dropDate : '',\n                        onChange: date => handleDateChange(date, 'drop')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 42\n                }, this) : drop[0] ? moment(drop[0].dropDate).format('LLL') : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: edit ? /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        label: \"In Time\",\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.drop[0] ? form.drop[0].in_time : '',\n                        onChange: date => handleInOutTime(date, 'drop', 'in_time')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 50\n                    }, this) : drop[0] && drop[0].in_time ? moment(drop[0].in_time).format('h:mm A') : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: edit ? /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                      utils: DateFnsUtils,\n                      children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                        label: \"Out Time\",\n                        className: classes.textFieldDialog,\n                        InputProps: {\n                          classes: {\n                            input: classes.resizeDialog\n                          }\n                        },\n                        size: \"small\",\n                        id: \"time-picker\",\n                        value: form.drop[0] ? form.drop[0].out_time : '',\n                        onChange: date => handleInOutTime(date, 'drop', 'out_time')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 50\n                    }, this) : drop[0] && drop[0].out_time ? moment(drop[0].out_time).format('h:mm A') : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Load\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 32\n                }, this), \" \", loadNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 29\n              }, this), !edit ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Rate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 36\n                }, this), \" \", rate ? rate : '--']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 33\n              }, this) : getRole() && (getRole() === 'admin' || getRole() === 'dispatch') ? /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                variant: \"outlined\",\n                label: \"Rate\",\n                name: \"rate\",\n                value: form.rate,\n                onChange: handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 38\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"PO# \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 29\n              }, this), !edit ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Notes: \", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: pickup[0] ? pickup[0].notes : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-static\",\n                label: \"Pickup Notes\",\n                multiline: true,\n                rows: 2,\n                value: form.pickup[0] ? form.pickup[0].notes : '',\n                onChange: event => handlePickDropChange(event, 'pickup', 'notes'),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Deliver# \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 29\n              }, this), !edit ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Notes: \", /*#__PURE__*/_jsxDEV(TextPlaceHolder, {\n                  value: drop[0] ? drop[0].notes : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-static\",\n                label: \"Drop Notes\",\n                multiline: true,\n                rows: 2,\n                value: form.drop[0] ? form.drop[0].notes : '',\n                onChange: event => handlePickDropChange(event, 'drop', 'notes'),\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            className: classes.root,\n            style: {\n              height: '100px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: verticalAlignStyle,\n                children: !edit ? /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                    fontSize: \"large\",\n                    color: \"primary\",\n                    onClick: () => setEdit(true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 43\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(DoneIcon, {\n                      fontSize: \"large\",\n                      color: \"primary\",\n                      onClick: handleSubmit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                      fontSize: \"large\",\n                      color: \"primary\",\n                      onClick: () => handleCancel()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                textAlign: 'center',\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: verticalAlignStyle,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  style: {\n                    margin: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    style: {\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Rate Confirmation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      multiple: true,\n                      name: \"rateConfirmation\",\n                      disabled: !edit,\n                      onChange: handleFileChange,\n                      ref: rateConfirmationRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  style: {\n                    margin: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    style: {\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Proof of Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      multiple: true,\n                      name: \"proofDelivery\",\n                      disabled: !edit,\n                      onChange: handleFileChange,\n                      ref: proofDeliveryRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              style: {\n                position: 'relative'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"load-checklist\",\n                style: verticalAlignStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Rate Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: Array.isArray(rateConfirmation) && rateConfirmation.length > 0 && typeof rateConfirmation[0] !== 'string' ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                      style: {\n                        color: 'green'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 151\n                    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n                      style: {\n                        color: 'red'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Proof of Delivery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: Array.isArray(proofDelivery) && proofDelivery.length > 0 && typeof proofDelivery[0] !== 'string' ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                      style: {\n                        color: 'green'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 142\n                    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n                      style: {\n                        color: 'red'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoadDetailModal, \"wJkVL+EcxP0EI6QiSzc3Er9q92M=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c2 = LoadDetailModal;\nexport default LoadDetailModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextPlaceHolder\");\n$RefreshReg$(_c2, \"LoadDetailModal\");","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/loads/LoadDetailModal.js"],"names":["React","useEffect","useRef","Modal","makeStyles","Grid","FormControl","Select","InputLabel","TextField","MenuItem","IconButton","EditIcon","DoneIcon","CloseIcon","CheckCircleIcon","CancelIcon","useDispatch","useSelector","updateLoad","moment","getDrivers","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","verticalAlignStyle","position","top","left","transform","useStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","flexGrow","flexDirection","textAlign","formControl","margin","minWidth","resizeDialog","fontSize","getModalStyle","width","overflowY","height","formInitialState","status","rate","assignedTo","trailorNumber","rateConfirmation","proofDelivery","accessorials","pickup","drop","TextPlaceHolder","value","LoadDetailModal","modalEdit","open","handleClose","load","_id","brokerage","loadNumber","classes","dispatch","state","modalStyle","useState","edit","setEdit","form","setForm","rateConfirmationRef","proofDeliveryRef","setupDrivers","resetFileInputs","drivers","driver","length","loads","error","msg","handleSubmit","event","preventDefault","handleOnChange","name","target","handlePickDropChange","keyToUpdate","childKey","handleCancel","handleDateChange","date","key","handleFileChange","files","f","current","handleInOutTime","parent_key","child_key","getRole","auth","user","role","e","map","firstName","lastName","shipperName","pickupAddress","pickupCity","pickupState","pickupZip","textFieldDialog","input","pickupDate","format","in_time","out_time","receiverName","dropAddress","dropCity","dropState","dropZip","dropDate","notes","Array","isArray","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateLoad } from '../../actions/load';\nimport moment from \"moment\";\nimport { getDrivers } from '../../actions/driver';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport './style.css';\n\nconst verticalAlignStyle = {position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)'};\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root: {\n        flexGrow: 1,\n        flexDirection: \"row\",\n        textAlign: \"center\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    resizeDialog: {\n        fontSize: 14,\n    },\n}));\n\nconst getModalStyle = () => {\n    return {\n        top: '50%',\n        left: '50%',\n        width: '80%',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n        height: 'calc(100vh - 50px)',\n    };\n}\n\nconst formInitialState = {\n    status: '',\n    rate: '',\n    assignedTo: null,\n    trailorNumber: '',\n    rateConfirmation: null,\n    proofDelivery: null,\n    accessorials: [],\n    pickup: [],\n    drop: []\n};\n\nconst TextPlaceHolder = ({value}) => (value ? value : '--');\n\nconst LoadDetailModal = ({\n    modalEdit,\n    open,\n    handleClose,\n    load: {\n        _id, \n        brokerage, \n        loadNumber, \n        rate,\n        trailorNumber,\n        rateConfirmation,\n        proofDelivery,\n        pickup, \n        drop,\n        assignedTo = null,\n        status = '',\n        accessorials = []\n    }\n}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const state = useSelector(state => state);\n    const [modalStyle] = React.useState(getModalStyle);\n    const [edit, setEdit] = React.useState(false);\n    const [form, setForm] = React.useState({...formInitialState});\n    const rateConfirmationRef = useRef();\n    const proofDeliveryRef = useRef();\n    useEffect(() => {\n        setupDrivers();\n        setForm({ \n            status, assignedTo, accessorials, trailorNumber, pickup, drop, rate\n        });\n        resetFileInputs();\n    }, []);\n    useEffect(() => {\n        const drivers = state.driver.drivers;\n        if (drivers.length > 0) {\n            for (let driver of drivers) {\n                if (driver.loads.length > 0) {\n                    for (let load of driver.loads) {\n                        if (load._id === _id) {\n                            setForm({ ...form, assignedTo: driver._id });\n                        }\n                    }\n                }\n            }\n        }\n    }, [state.driver.drivers]);\n    useEffect(() => {\n        const error = state.load.error;\n        if (!error.msg) {\n            setEdit(false);\n            handleClose();\n        }\n    }, [state.load.error]);\n    useEffect(() => {\n        if (modalEdit)\n            setEdit(true);\n    }, [modalEdit]);\n    useEffect(() => {\n        if (!state.load.load) {\n            handleClose();\n        }\n    }, [state.load.load]);\n    const setupDrivers = () => {\n        dispatch(getDrivers());\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        dispatch(updateLoad({...form, _id}));\n        // resetFileInputs();\n    }\n    const handleOnChange = (event) => {\n        const { name, value } = event.target;\n        setForm({ ...form, [name]: value });\n    }\n    const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\n        if (keyToUpdate === 'pickup')\n            setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }]});\n        else if (keyToUpdate === 'drop')\n            setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\n    }\n    const handleCancel = () => {\n        setForm({ ...form, assignedTo, status, accessorials, pickup, drop });\n        setEdit(false);\n        resetFileInputs();\n    }\n    const handleDateChange = (date, key) => {\n        setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\n    }\n    const handleFileChange = ({ target: { name, files } }) => {\n        setForm(f => ({ ...f, [name]: files || null }));\n    }\n    const resetFileInputs = () => {\n        if (rateConfirmationRef.current) \n            rateConfirmationRef.current.value = \"\";\n        if (proofDeliveryRef.current)\n            proofDeliveryRef.current.value = \"\";\n    }\n    const handleInOutTime = (date, parent_key, child_key) => {\n        // parent_key: drop || pickup\n        // child_key: in_time || out_time\n        setForm(form =>  ({ ...form, [parent_key]: [{ ...form[parent_key][0], [child_key]: date }] }));\n    }\n    const getRole = () => {\n        try {\n            const { auth: { user: { role } } } = state;\n            return role;\n        } catch (e) { \n            return '';\n        }\n    }\n    return <>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item xs={12}>\n                                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                                            <InputLabel id=\"label-status\">Status</InputLabel>\n                                            <Select\n                                                labelId=\"label-status\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={form.status}\n                                                label=\"Status\"\n                                                name=\"status\"\n                                                disabled={!edit}\n                                                onChange={handleOnChange}\n                                                >\n                                                <MenuItem value={'Loaded'}>Loaded</MenuItem>\n                                                <MenuItem value={'Unloaded'}>UnLoaded</MenuItem>\n                                                <MenuItem value={'Loading'}>Loading</MenuItem>\n                                                <MenuItem value={'Cancelled'}>Cancelled</MenuItem>\n                                                <MenuItem value={'Picked Up'}>Picked up</MenuItem>\n                                                <MenuItem value={'Delivered'}>Delivered</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item  xs={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"label-assigned\">Assigned</InputLabel>\n                                        <Select\n                                            labelId=\"label-assigned\"\n                                            lable=\"Assigned\"\n                                            id=\"demo-simple-select-outlined\"\n                                            name=\"assignedTo\"\n                                            disabled={!edit}\n                                            value={form.assignedTo}\n                                            onChange={handleOnChange}\n                                            >\n                                                { state.driver.drivers.map(({_id, firstName, lastName}) => (<MenuItem value={_id} key={_id}>{firstName} {lastName}</MenuItem>)) }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item xs={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"label-accessorials\">Accessorials</InputLabel>\n                                        <Select\n                                            labelId=\"label-accessorials\"\n                                            label=\"Accessorials\"\n                                            id=\"demo-simple-select-outlined\"\n                                            name=\"accessorials\"\n                                            value={form.accessorials}\n                                            disabled={!edit}\n                                            multiple\n                                            onChange={handleOnChange}\n                                            >\n                                            <MenuItem value={'TUNO'}>TUNO</MenuItem>\n                                            <MenuItem value={'Detention'}>Detention</MenuItem>\n                                            <MenuItem value={'Lumper'}>Lumper</MenuItem>\n                                            <MenuItem value={'Layover'}>Layover</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4}>\n                            <Grid container className={classes.root}>\n                                {/* <Grid item xs={6}><p>Trailor #</p></Grid> */}\n                                <Grid item xs={12}>\n                                    <TextField \n                                    disabled={!edit} \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Trailer #\"\n                                    name=\"trailorNumber\"\n                                    value={form.trailorNumber}\n                                    onChange={handleOnChange} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <h4>Pickup</h4>\n                            <p>\n                                { edit ? <TextField  \n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                label=\"Shipper Name\"\n                                value={form.pickup[0] ? form.pickup[0].shipperName : ''} \n                                onChange={(event)=>handlePickDropChange(event, 'pickup', 'shipperName')}/> : \n                                <TextPlaceHolder value={pickup[0] ? pickup[0].shipperName : ''}/> }\n                            </p>\n                            <p>\n                                { edit ? <TextField  \n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                label=\"Address\"\n                                value={form.pickup[0] ? form.pickup[0].pickupAddress : ''} \n                                onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupAddress')}/> : \n                                <TextPlaceHolder value={pickup[0] ? pickup[0].pickupAddress : ''}/> }\n                            </p>\n                            <p>\n                                { edit ? <Grid container spacing={2} className={classes.root}>\n                                    <Grid item xs={4}>\n                                        <TextField  \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"City\"\n                                        value={form.pickup[0] ? form.pickup[0].pickupCity : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupCity')}/>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <TextField      \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"State\"\n                                        value={form.pickup[0] ? form.pickup[0].pickupState : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupState')}/>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <TextField      \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"Zip\"\n                                        value={form.pickup[0] ? form.pickup[0].pickupZip : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupZip')}/>\n                                    </Grid>\n                                </Grid> : <>\n                                    <TextPlaceHolder value={pickup[0] ? pickup[0].pickupCity : ''} />, \n                                    <TextPlaceHolder value={pickup[0] ? pickup[0].pickupState : ''} />, \n                                    <TextPlaceHolder value={pickup[0] ? pickup[0].pickupZip : ''} />\n                                </> }\n                            </p>\n                            <p>\n                                { edit ? <Grid container>\n                                    <Grid item xs={6}>\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.pickup[0] ? form.pickup[0].pickupDate : ''}\n                                            onChange={(date) => handleDateChange(date, 'pickup')}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardDatePicker\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"date-picker-dialog\"\n                                            format=\"MM/dd/yyyy\"\n                                            value={form.pickup[0] ? form.pickup[0].pickupDate : ''}\n                                            onChange={(date) => handleDateChange(date, 'pickup')}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                </Grid> : \n                                pickup[0] ? moment(pickup[0].pickupDate).format('LLL') : ''}\n                            </p>\n                            <p>\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        { edit ? <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            label=\"In Time\"\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.pickup[0] ? form.pickup[0].in_time : ''}\n                                            onChange={(date) => handleInOutTime(date, 'pickup', 'in_time')}\n                                            />\n                                        </MuiPickersUtilsProvider> : \n                                        pickup[0] && pickup[0].in_time ? moment(pickup[0].in_time).format('h:mm A') : '--' }\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        { edit ? <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            label=\"Out Time\"\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.pickup[0] ? form.pickup[0].out_time : ''}\n                                            onChange={(date) => handleInOutTime(date, 'pickup', 'out_time')}\n                                            />\n                                        </MuiPickersUtilsProvider> :\n                                        pickup[0] && pickup[0].out_time ? moment(pickup[0].out_time).format('h:mm A') : '--' }\n                                    </Grid>\n                                </Grid>\n                            </p>\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <h4>Drop</h4>\n                            <p>\n                                { edit ? <TextField  \n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                label=\"Receiver Name\"\n                                value={form.drop[0] ? form.drop[0].receiverName : ''} \n                                onChange={(event)=>handlePickDropChange(event, 'drop', 'receiverName')}/> : \n                                <TextPlaceHolder value={drop[0] ? drop[0].receiverName : ''}/> }\n                            </p>\n                            <p>\n                                { edit ? <TextField  \n                                id=\"outlined-basic\" \n                                variant=\"outlined\" \n                                label=\"Address\"\n                                value={form.drop[0] ? form.drop[0].dropAddress : ''} \n                                onChange={(event)=>handlePickDropChange(event, 'drop', 'dropAddress')}/> : \n                                <TextPlaceHolder value={drop[0] ? drop[0].dropAddress : ''}/> }\n                            </p>\n                            <p>\n                                { edit ? <Grid container spacing={2} className={classes.root}>\n                                    <Grid item xs={4}>\n                                        <TextField  \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"City\"\n                                        value={form.drop[0] ? form.drop[0].dropCity : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'drop', 'dropCity')}/>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <TextField      \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"State\"\n                                        value={form.drop[0] ? form.drop[0].dropState : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'drop', 'dropState')}/>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <TextField      \n                                        id=\"outlined-basic\" \n                                        variant=\"outlined\" \n                                        label=\"Zip\"\n                                        value={form.drop[0] ? form.drop[0].dropZip : ''} \n                                        onChange={(event)=>handlePickDropChange(event, 'drop', 'dropZip')}/>\n                                    </Grid>\n                                </Grid> : <>\n                                    <TextPlaceHolder value={drop[0] ? drop[0].dropCity : ''} />, \n                                    <TextPlaceHolder value={drop[0] ? drop[0].dropState : ''} />, \n                                    <TextPlaceHolder value={drop[0] ? drop[0].dropZip : ''} />\n                                </> }\n                            </p>\n                            <p>\n                                { edit ? <Grid container>\n                                    <Grid item xs={6}>\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.drop[0] ? form.drop[0].dropDate : ''}\n                                            onChange={(date) => handleDateChange(date, 'drop')}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardDatePicker\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"date-picker-dialog\"\n                                            format=\"MM/dd/yyyy\"\n                                            value={form.drop[0] ? form.drop[0].dropDate : ''}\n                                            onChange={(date) => handleDateChange(date, 'drop')}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                </Grid> : \n                                drop[0] ? moment(drop[0].dropDate).format('LLL') : ''}\n                            </p>\n                            <p>\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        { edit ? <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            label=\"In Time\"\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.drop[0] ? form.drop[0].in_time : ''}\n                                            onChange={(date) => handleInOutTime(date, 'drop', 'in_time')}\n                                            />\n                                        </MuiPickersUtilsProvider> : \n                                        drop[0] && drop[0].in_time ? moment(drop[0].in_time).format('h:mm A') : '--' }\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        { edit ? <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardTimePicker\n                                            label=\"Out Time\"\n                                            className={classes.textFieldDialog}\n                                            InputProps={{\n                                                classes: { input: classes.resizeDialog },\n                                            }}\n                                            size=\"small\"\n                                            id=\"time-picker\"\n                                            value={form.drop[0] ? form.drop[0].out_time : ''}\n                                            onChange={(date) => handleInOutTime(date, 'drop', 'out_time')}\n                                            />\n                                        </MuiPickersUtilsProvider> :\n                                        drop[0] && drop[0].out_time ? moment(drop[0].out_time).format('h:mm A') : '--' }\n                                    </Grid>\n                                </Grid>\n                            </p>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <p><b>Load</b> {loadNumber}</p>\n                            { !edit ? \n                                <p><b>Rate</b> { rate ? rate : '--' }</p> :\n                                getRole() && (getRole() === 'admin' || getRole() === 'dispatch') ? \n                                    (<TextField  \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Rate\"\n                                    name=\"rate\"\n                                    value={form.rate}\n                                    onChange={handleOnChange} />) : ''\n                            }\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <p>PO# </p>\n                            { !edit ? <p>Notes: <TextPlaceHolder value={pickup[0] ? pickup[0].notes : ''} /></p> :\n                            <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Pickup Notes\"\n                            multiline\n                            rows={2}\n                            value={form.pickup[0] ? form.pickup[0].notes : ''}\n                            onChange={(event)=>handlePickDropChange(event, 'pickup', 'notes')}\n                            variant=\"outlined\"\n                            /> }\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <p>Deliver# </p>\n                            { !edit ? <p>Notes: <TextPlaceHolder value={drop[0] ? drop[0].notes : ''} /></p> :\n                            <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Drop Notes\"\n                            multiline\n                            rows={2}\n                            value={form.drop[0] ? form.drop[0].notes : ''}\n                            onChange={(event)=>handlePickDropChange(event, 'drop', 'notes')}\n                            variant=\"outlined\"\n                            /> }\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root} style={{height: '100px'}}>\n                        <Grid item xs={4} style={{position: 'relative'}}>\n                            <div style={verticalAlignStyle}>\n                                { !edit ? <IconButton>\n                                    <EditIcon fontSize=\"large\" color=\"primary\" onClick={()=>setEdit(true)} />\n                                </IconButton> : <>\n                                <IconButton>\n                                    <DoneIcon fontSize=\"large\" color=\"primary\" onClick={handleSubmit} />\n                                </IconButton>\n                                <IconButton>\n                                    <CloseIcon fontSize=\"large\" color=\"primary\" onClick={()=>handleCancel()} />\n                                </IconButton>\n                                </> }\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{textAlign:'center', position: 'relative'}}>\n                            <div style={verticalAlignStyle}>\n                                <Grid container style={{margin:'10px'}}>\n                                    <Grid item xs={6} style={{textAlign: 'left'}}>\n                                        <label>Rate Confirmation</label>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <input \n                                        type=\"file\" \n                                        multiple\n                                        name=\"rateConfirmation\" \n                                        disabled={!edit}\n                                        onChange={handleFileChange}\n                                        ref={rateConfirmationRef} />\n                                    </Grid>\n                                </Grid>\n                                <Grid container style={{margin:'10px'}}>\n                                    <Grid item xs={6} style={{textAlign: 'left'}}>\n                                        <label>Proof of Address</label>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <input \n                                        type=\"file\" \n                                        multiple\n                                        name=\"proofDelivery\" \n                                        disabled={!edit}\n                                        onChange={handleFileChange}\n                                        ref={proofDeliveryRef} />\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{position:'relative'}}>\n                            <div className=\"load-checklist\" style={verticalAlignStyle}>\n                                <p>\n                                    <span>Rate Confirmation</span> \n                                    <span>\n                                        { Array.isArray(rateConfirmation) && rateConfirmation.length > 0 && typeof rateConfirmation[0] !== 'string' ? <CheckCircleIcon style={{color: 'green'}} /> : \n                                        <CancelIcon style={{color: 'red'}} /> }\n                                    </span>\n                                </p>\n                                <p>\n                                    <span>Proof of Delivery</span>\n                                    <span>\n                                        { Array.isArray(proofDelivery) && proofDelivery.length > 0 && typeof proofDelivery[0] !== 'string' ? <CheckCircleIcon style={{color: 'green'}} /> : \n                                          <CancelIcon style={{color: 'red'}} /> }\n                                    </span>\n                                </p>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Modal>\n    </>\n}\n\nexport default LoadDetailModal;"]},"metadata":{},"sourceType":"module"}