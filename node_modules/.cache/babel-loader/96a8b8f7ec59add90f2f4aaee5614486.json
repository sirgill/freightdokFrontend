{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loaditem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport LoadPickup from './LoadPickup';\nimport LoadDrop from './LoadDrop';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Badge from '@material-ui/core/Badge'; // <h5>\n// {pickup.length > 0 ? (<Fragment>\n//   {pickup.map(pickup => (\n//     <LoadPickup key={pickup._id} pickup={pickup} />\n//   ))}\n// </Fragment>) : (<h4>No pickups listed</h4>)}\n// </h5>\n// <h5>\n// {drop.length > 0 ? (<Fragment>\n//   {drop.map(drop => (\n//     <LoadDrop key={drop._id} drop={drop} />\n//   ))}\n// </Fragment>) : (<h4>No drops listed</h4>)}\n// </h5>\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 750\n  }\n});\n\nconst LoadItem = ({\n  load: {\n    user: {\n      _id,\n      name\n    },\n    brokerage,\n    loadNumber,\n    pickup,\n    drop\n  }\n}) => {\n  const classes = useStyles();\n  const shipperAddress = pickup.map(pickup => pickup.pickupAddress);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"caption table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"caption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"A basic table example with a caption\"), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Load Number\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Pickup\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Pick Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Drop\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Drop Date\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, loadNumber), pickup.length < 3 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 30\n    }\n  }, pickup.map(pickup => /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, pickup.pickupAddress)), \" \") : /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: \"secondary\",\n    badgeContent: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, shipperAddress)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  })))));\n};\n\nLoadItem.propTypes = {\n  load: PropTypes.object.isRequired\n};\nexport default LoadItem;","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loaditem.js"],"names":["React","Fragment","PropTypes","Moment","LoadPickup","LoadDrop","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Badge","useStyles","table","minWidth","LoadItem","load","user","_id","name","brokerage","loadNumber","pickup","drop","classes","shipperAddress","map","pickupAddress","length","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAC;AAC3BU,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAUA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AACxBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KADkB;AAExBC,IAAAA,SAFwB;AAGxBC,IAAAA,UAHwB;AAIxBC,IAAAA,MAJwB;AAKxBC,IAAAA;AALwB;AAAR,CAAD,KAOX;AACJ,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAMa,cAAc,GAAGH,MAAM,CAACI,GAAP,CAAWJ,MAAM,IAAIA,MAAM,CAACK,aAA5B,CAAvB;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEjB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,kBAAW,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,CAFF,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYW,UAAZ,CADA,EAECC,MAAM,CAACM,MAAP,GAAgB,CAAhB,gBAAsB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACtBN,MAAM,CAACI,GAAP,CAAWJ,MAAM,iBAClB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,MAAM,CAACK,aADR,CADC,CADsB,MAAtB,gBAKC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,WAAb;AAAyB,IAAA,YAAY,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,cADD,CADA,CAPF,eAaA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,CADA,CAXF,CADA,CADF;AAyCD,CArDD;;AAyDAV,QAAQ,CAACc,SAAT,GAAqB;AACnBb,EAAAA,IAAI,EAAElB,SAAS,CAACgC,MAAV,CAAiBC;AADJ,CAArB;AAOA,eAAehB,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport LoadPickup from './LoadPickup';\nimport LoadDrop from './LoadDrop';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Badge from '@material-ui/core/Badge';\n\n\n// <h5>\n// {pickup.length > 0 ? (<Fragment>\n//   {pickup.map(pickup => (\n//     <LoadPickup key={pickup._id} pickup={pickup} />\n//   ))}\n// </Fragment>) : (<h4>No pickups listed</h4>)}\n// </h5>\n\n// <h5>\n// {drop.length > 0 ? (<Fragment>\n//   {drop.map(drop => (\n//     <LoadDrop key={drop._id} drop={drop} />\n//   ))}\n// </Fragment>) : (<h4>No drops listed</h4>)}\n// </h5>\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 750,\n  },\n\n});\n\n\n\n\nconst LoadItem = ({ load: {\n  user: { _id, name},\n  brokerage,\n  loadNumber,\n  pickup,\n  drop\n},\n}) => {\n  const classes = useStyles();\n\n  const shipperAddress = pickup.map(pickup => pickup.pickupAddress);\n\n  return (\n    <TableContainer component={Paper}>\n    <Table aria-label=\"caption table\">\n      <caption>A basic table example with a caption</caption>\n      <TableHead>\n        <TableRow>\n          <TableCell>Load Number</TableCell>\n          <TableCell>Pickup</TableCell>\n          <TableCell>Pick Date</TableCell>\n          <TableCell>Drop</TableCell>\n          <TableCell>Drop Date</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n      <TableRow>\n      <TableCell>{loadNumber}</TableCell>\n      {pickup.length < 3 ? ( <Fragment>\n      {pickup.map(pickup => (\n      <TableCell>\n      {pickup.pickupAddress}\n      </TableCell>))} </Fragment>) : (\n        <TableCell>\n        <Badge color=\"secondary\" badgeContent={1}>\n        {shipperAddress}\n        </Badge>\n        </TableCell>\n      )}\n      <TableCell>{}</TableCell>\n\n      </TableRow>\n      </TableBody>\n\n\n\n\n\n\n  </Table>\n  </TableContainer>\n\n);\n};\n\n\n\nLoadItem.propTypes = {\n  load: PropTypes.object.isRequired,\n};\n\n\n\n\nexport default LoadItem;\n"]},"metadata":{},"sourceType":"module"}