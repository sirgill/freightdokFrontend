{"ast":null,"code":"import { GET_DRIVERS, GET_DRIVER, DRIVER_ERROR, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER_LOAD, DELETE_DRIVER } from \"../actions/types\";\nconst initialState = {\n  drivers: [],\n  all_drivers: [],\n  driver: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_DRIVERS:\n      return { ...state,\n        drivers: payload.drivers,\n        all_drivers: payload.users,\n        loading: false\n      };\n\n    case GET_DRIVER:\n      return { ...state,\n        driver: payload,\n        loading: false\n      };\n\n    case ADD_DRIVER:\n      return { ...state,\n        drivers: [...state.drivers, payload],\n        loading: false\n      };\n\n    case DRIVER_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PATCH_DRIVER:\n      return { ...state,\n        drivers: payload,\n        loading: false\n      };\n\n    case DELETE_DRIVER:\n      return { ...state,\n        drivers: payload,\n        loading: false\n      };\n\n    case DELETE_DRIVER_LOAD:\n      return { ...state,\n        drivers: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdokFrontend/client/src/reducers/driver.js"],"names":["GET_DRIVERS","GET_DRIVER","DRIVER_ERROR","ADD_DRIVER","PATCH_DRIVER","DELETE_DRIVER_LOAD","DELETE_DRIVER","initialState","drivers","all_drivers","driver","loading","error","state","action","type","payload","users"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,UAAhD,EAA4DC,YAA5D,EAA0EC,kBAA1E,EAA8FC,aAA9F,QAAmH,kBAAnH;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,OAAO,EAAEQ,OAAO,CAACR,OAFZ;AAGLC,QAAAA,WAAW,EAAEO,OAAO,CAACC,KAHhB;AAILN,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKV,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,MAAM,EAAEM,OAFH;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,UAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,OAAO,EAAE,CAAC,GAAGK,KAAK,CAACL,OAAV,EAAmBQ,OAAnB,CAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,OAAO,EAAEQ,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELL,QAAAA,OAAO,EAAEQ,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,OAAO,EAAEQ,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOE,KAAP;AA7CJ;AA+CD","sourcesContent":["import { GET_DRIVERS, GET_DRIVER, DRIVER_ERROR, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER_LOAD, DELETE_DRIVER } from \"../actions/types\";\n\nconst initialState = {\n  drivers: [],\n  all_drivers: [],\n  driver: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_DRIVERS:\n      return {\n        ...state,\n        drivers: payload.drivers,\n        all_drivers: payload.users,\n        loading: false,\n      };\n    case GET_DRIVER:\n      return {\n        ...state,\n        driver: payload,\n        loading: false,\n      };\n    case ADD_DRIVER:\n      return {\n        ...state,\n        drivers: [...state.drivers, payload],\n        loading: false,\n      };\n    case DRIVER_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case PATCH_DRIVER:\n      return {\n        ...state,\n        drivers: payload,\n        loading: false,\n      };\n    case DELETE_DRIVER:\n      return {\n        ...state,\n        drivers: payload,\n        loading: false,\n      };\n    case DELETE_DRIVER_LOAD:\n      return {\n        ...state,\n        drivers: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}