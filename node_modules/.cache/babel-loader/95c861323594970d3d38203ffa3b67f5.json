{"ast":null,"code":"import { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, DELETE_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR, UPDATE_LOAD, UPDATE_LOAD_ERROR } from '../actions/types';\nconst initialState = {\n  loads: [],\n  load: null,\n  loading: true,\n  loads_pagination: {},\n  page: 0,\n  rowsPerPage: 5,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_LOADS:\n      return { ...state,\n        allLoads: payload.loads.allLoads,\n        loads: payload.loads.load,\n        loads_pagination: {\n          limit: payload.loads.limit,\n          total: payload.loads.total,\n          totalPages: payload.loads.totalPages,\n          currPage: payload.loads.currentPage\n        },\n        page: payload.page,\n        rowsPerPage: payload.limit,\n        loading: false\n      };\n\n    case GET_LOAD:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case ADD_LOAD:\n      let newLoads = state.loads;\n\n      if (state.loads_pagination.totalPages === state.page + 1 && state.rowsPerPage !== state.loads.length) {\n        newLoads = [...state.loads, payload];\n      }\n\n      return { ...state,\n        loads: newLoads,\n        loads_pagination: { ...state.loads_pagination,\n          total: state.loads_pagination.total + 1\n        },\n        loading: false\n      };\n\n    case UPDATE_LOAD:\n      return { ...state,\n        loads: state.loads.map(l => {\n          if (l._id === payload._id) {\n            return payload;\n          }\n\n          return l;\n        }),\n        loading: false\n      };\n\n    case DELETE_LOAD:\n      return { ...state,\n        loads: state.loads.filter(load => load._id !== payload),\n        loading: false\n      };\n\n    case LOAD_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LOAD_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PATCH_PICKUP:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case PICKUP_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PATCH_DROP:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case DROP_ERROR:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/reducers/load.js"],"names":["GET_LOADS","GET_LOAD","LOAD_ERROR","ADD_LOAD","DELETE_LOAD","PATCH_PICKUP","PICKUP_ERROR","PATCH_DROP","DROP_ERROR","UPDATE_LOAD","UPDATE_LOAD_ERROR","initialState","loads","load","loading","loads_pagination","page","rowsPerPage","error","state","action","type","payload","allLoads","limit","total","totalPages","currPage","currentPage","newLoads","length","map","l","_id","filter"],"mappings":"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","sourcesContent":["import {\n  GET_LOADS,\n  GET_LOAD,\n  LOAD_ERROR,\n  ADD_LOAD,\n  DELETE_LOAD,\n  PATCH_PICKUP,\n  PICKUP_ERROR,\n  PATCH_DROP,\n  DROP_ERROR,\n  UPDATE_LOAD,\n  UPDATE_LOAD_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  loads: [],\n  load: null,\n  loading: true,\n  loads_pagination: {},\n  page: 0,\n  rowsPerPage: 5,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch(type) {\n    case GET_LOADS:\n      return {\n        ...state,\n        allLoads: payload.loads.allLoads,\n        loads: payload.loads.load,\n        loads_pagination: {\n          limit: payload.loads.limit,\n          total: payload.loads.total,\n          totalPages: payload.loads.totalPages,\n          currPage: payload.loads.currentPage\n        },\n        page: payload.page,\n        rowsPerPage: payload.limit,\n        loading: false\n      };\n      case GET_LOAD:\n        return {\n          ...state,\n          load: payload,\n          loading: false\n        };\n      case ADD_LOAD:\n        let newLoads = state.loads;\n        if(state.loads_pagination.totalPages === state.page+1 && state.rowsPerPage !== state.loads.length) {\n          newLoads = [...state.loads, payload];\n        }\n        return {\n          ...state,\n          loads: newLoads,\n          loads_pagination: { ...state.loads_pagination, total: state.loads_pagination.total+1 },\n          loading: false\n        };\n      case UPDATE_LOAD:\n        return {\n          ...state,\n          loads: state.loads.map(l => {\n            if (l._id === payload._id) {\n              return payload;\n            }\n            return l;\n          }),\n          loading: false\n        };\n      case DELETE_LOAD:\n        return {\n          ...state,\n          loads: state.loads.filter(load => load._id !== payload),\n          loading: false\n        }\n      case LOAD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n      };\n      case UPDATE_LOAD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n      };\n      case PATCH_PICKUP:\n        return{\n          ...state,\n          load: payload,\n          loading: false,\n        }\n      case PICKUP_ERROR:\n        return{\n          ...state,\n          error:payload,\n          loading: false,\n        };\n      case PATCH_DROP:\n        return{\n          ...state,\n          load: payload,\n          loading:false,\n        };\n      case DROP_ERROR:\n        return{\n          ...state,\n          load: payload,\n          loading:false,\n        };\n      default:\n        return state;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}