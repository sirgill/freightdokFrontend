{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loaditem.js\";\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteLoad } from \"../../actions/load\"; // import LoadPickup from './LoadPickup';\n// import LoadDrop from './LoadDrop';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell'; // import TableContainer from '@material-ui/core/TableContainer';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow'; // import Paper from '@material-ui/core/Paper';\n\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Collapse from '@material-ui/core/Collapse';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LoadDetailModal from './LoadDetailModal';\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -7,\n    top: 0,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: \"0 4px\"\n  }\n}))(Badge);\n\nconst LoadItem = ({\n  load,\n  deleteLoad\n}) => {\n  // const LoadItem = ({\n  //   deleteLoad,\n  //   load: {\n  //     _id ,\n  //     brokerage,\n  //     loadNumber,\n  //     pickup,\n  //     drop,\n  //   },\n  // }) => {\n  const {\n    _id,\n    brokerage,\n    loadNumber,\n    pickup,\n    drop\n  } = load;\n  const pickupState = pickup.map(pickup => pickup.pickupState);\n  const pickupCity = pickup.map(pickup => pickup.pickupCity);\n  const pickupDate = pickup.map(pickup => pickup.pickupDate);\n  const dropState = drop.map(drop => drop.dropState);\n  const dropCity = drop.map(drop => drop.dropCity);\n  const dropDate = drop.map(drop => drop.dropDate);\n  const pickupStateFirst = pickupState[0];\n  const pickupCityFirst = pickupCity[0];\n  const pickDateFirst = pickupDate[0];\n  const dropStateFirst = dropState[0];\n  const dropCityFirst = dropCity[0];\n  const dropDateFirst = dropDate[0];\n  const [open, setOpen] = useState(false);\n\n  const formatDate = date => {\n    const d = new Date(date);\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    let time = '';\n\n    if (hours > 0 && hours <= 12) {\n      time = \"\" + hours;\n    } else if (hours > 12) {\n      time = \"\" + (hours - 12);\n    } else if (hours === 0) {\n      time = \"12\";\n    }\n\n    time += minutes < 10 ? \":0\" + minutes : \":\" + minutes;\n    time += hours >= 12 ? \" P.M.\" : \" A.M.\";\n    return [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/') + ' ' + time;\n  };\n\n  const handleDeleteLoad = async (load_id, e) => {\n    e.stopPropagation();\n    console.log(\"LOAD IS:         \", load_id);\n    await deleteLoad(load_id);\n  }; // function handleDeleteLoad(load_id){\n  //   console.log('=================       ', load_id);\n  //   deleteLoad(load_id);\n  // }\n\n\n  const handleEditLoad = async load_id => {\n    console.log(\"LOAD IS         \", load_id); // await deleteDriverLoads(driver._id, load_id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    onClick: () => {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, loadNumber), pickup.length <= 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, pickupCityFirst, \", \", pickupStateFirst)) : /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledBadge, {\n    color: \"primary\",\n    max: 10,\n    badgeContent: pickup.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, pickupCityFirst, \", \", pickupStateFirst)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, pickDateFirst)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, dropCityFirst, \", \", dropStateFirst), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, dropDateFirst)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    color: \"primary\",\n    onClick: () => {\n      handleEditLoad(_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: e => {\n      handleDeleteLoad(_id, e);\n    },\n    style: {\n      color: \"rgb(220, 0, 78)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      paddingBottom: 0,\n      paddingTop: 0\n    },\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: false,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"load details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, \"Pickup Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, \"Pickup Address\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, \"Drop Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, \"Drop Address\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, pickup.map((pick, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: pick._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, formatDate(pick.pickupDate)), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, pick.pickupAddress), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, formatDate(drop[index].dropDate)), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, drop[index].dropAddress)))))))))), /*#__PURE__*/React.createElement(LoadDetailModal, {\n    open: open,\n    load: load,\n    handleClose: () => {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }));\n};\n\nLoadItem.propTypes = {\n  load: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  load: state.load\n});\n\nexport default connect(null, {\n  deleteLoad\n})(LoadItem);","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loaditem.js"],"names":["React","Fragment","useState","PropTypes","Moment","connect","deleteLoad","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Badge","IconButton","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Collapse","Box","Typography","DeleteIcon","EditIcon","LoadDetailModal","StyledBadge","theme","badge","right","top","border","palette","background","paper","padding","LoadItem","load","_id","brokerage","loadNumber","pickup","drop","pickupState","map","pickupCity","pickupDate","dropState","dropCity","dropDate","pickupStateFirst","pickupCityFirst","pickDateFirst","dropStateFirst","dropCityFirst","dropDateFirst","open","setOpen","formatDate","date","d","Date","hours","getHours","minutes","getMinutes","time","getMonth","getDate","getFullYear","join","handleDeleteLoad","load_id","e","stopPropagation","console","log","handleEditLoad","length","color","paddingBottom","paddingTop","pick","index","pickupAddress","dropAddress","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteLoad } from \"../../actions/load\";\n// import LoadPickup from './LoadPickup';\n// import LoadDrop from './LoadDrop';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Collapse from '@material-ui/core/Collapse';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport LoadDetailModal from './LoadDetailModal';\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: -7,\n    top: 0,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: \"0 4px\",\n  },\n}))(Badge);\nconst LoadItem = ({ load, deleteLoad}) => {\n// const LoadItem = ({\n//   deleteLoad,\n//   load: {\n//     _id ,\n//     brokerage,\n//     loadNumber,\n//     pickup,\n//     drop,\n//   },\n// }) => {\n  const {_id, brokerage, loadNumber, pickup, drop } = load;\n\n  const pickupState = pickup.map((pickup) => pickup.pickupState);\n  const pickupCity = pickup.map((pickup) => pickup.pickupCity);\n  const pickupDate = pickup.map((pickup) => pickup.pickupDate);\n\n  const dropState = drop.map((drop) => drop.dropState);\n  const dropCity = drop.map((drop) => drop.dropCity);\n  const dropDate = drop.map((drop) => drop.dropDate);\n\n  const pickupStateFirst = pickupState[0];\n  const pickupCityFirst = pickupCity[0];\n  const pickDateFirst = pickupDate[0];\n\n  const dropStateFirst = dropState[0];\n  const dropCityFirst = dropCity[0];\n  const dropDateFirst = dropDate[0];\n\n  const [open,setOpen] = useState(false);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    let time = '';\n\n    if(hours > 0 && hours <= 12){\n      time = \"\" + hours;\n    }else if (hours > 12){\n      time = \"\" + (hours - 12);\n    }else if (hours === 0){\n      time = \"12\";\n    }\n\n    time += (minutes < 10 ) ? \":0\" + minutes : \":\" + minutes;\n    time += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n\n    return [d.getMonth()+1,d.getDate(),d.getFullYear()].join('/')+ ' ' + time;\n  }\n\n  const handleDeleteLoad = async (load_id, e) => {\n    e.stopPropagation();\n    console.log(\"LOAD IS:         \", load_id)\n    await deleteLoad(load_id);\n  };\n\n  // function handleDeleteLoad(load_id){\n  //   console.log('=================       ', load_id);\n  //   deleteLoad(load_id);\n  // }\n\n  const handleEditLoad = async (load_id) => {\n    console.log(\"LOAD IS         \",   load_id)\n    // await deleteDriverLoads(driver._id, load_id);\n  };\n\n  return (\n    <>\n      <TableBody>\n        <TableRow hover={true} onClick={()=>{setOpen(true)}}>\n          {/* <TableCell>\n            {/* TODO: make the collapsable button only work when there is a load }\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={()=> setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon /> }\n            </IconButton>\n          </TableCell> */}\n          \n          <TableCell align=\"center\">{loadNumber}</TableCell>\n          \n          {/* Made this 0 thought it would be nice to see if there is a pickup and drop on the load at all times */}\n          \n          {pickup.length <= 0 ? (\n            <Fragment>\n              <TableCell align=\"center\">{pickupCityFirst}, {pickupStateFirst}</TableCell>\n            </Fragment>\n          ) : (\n            <TableCell align=\"center\">\n              <StyledBadge color=\"primary\" max={10} badgeContent={pickup.length}>\n                {pickupCityFirst}, {pickupStateFirst}\n              </StyledBadge>\n            </TableCell>\n          )}\n          \n          <TableCell align=\"center\">\n            <Moment format='MM/DD'>{pickDateFirst}</Moment>\n          </TableCell>\n          \n          <TableCell>\n            {dropCityFirst}, {dropStateFirst}\n          </TableCell>\n          \n          <TableCell align=\"center\">\n            <Moment format='MM/DD'>{dropDateFirst}</Moment>\n          </TableCell>\n\n          <TableCell>\n            <IconButton>\n              <EditIcon color=\"primary\" onClick={() => { handleEditLoad(_id);}}/>\n            </IconButton>\n          </TableCell>\n\n          <TableCell>\n              <IconButton >\n                <DeleteIcon  onClick={(e) => { handleDeleteLoad(_id, e);}} style={{ color: \"rgb(220, 0, 78)\" }} />\n              </IconButton>\n            </TableCell>\n        </TableRow>\n\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={false} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  Details\n                </Typography>\n                <Table size=\"small\" aria-label=\"load details\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Pickup Date</TableCell>\n                      <TableCell>Pickup Address</TableCell>\n                      <TableCell>Drop Date</TableCell>\n                      <TableCell>Drop Address</TableCell>\n                    </TableRow>\n                  </TableHead>\n\n                  <TableBody>\n                    {/* {pickup.map((pick,index)=>(\n                      <TableRow key={pick.pickupDeliverNumber}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {pick}\n                        </TableCell>\n                      </TableRow>\n                    ))} */}\n                    {pickup.map((pick,index)=>(\n                      <TableRow key={pick._id}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {formatDate(pick.pickupDate)}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {pick.pickupAddress}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {formatDate(drop[index].dropDate)}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {drop[index].dropAddress}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n      <LoadDetailModal \n      open={open}\n      load={load} \n      handleClose={()=>{setOpen(false)}}/>\n    </>\n  );\n};\n\nLoadItem.propTypes = {\n  load: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  load: state.load,\n});\n\nexport default connect(\n  null,\n  { deleteLoad }\n)(LoadItem)"]},"metadata":{},"sourceType":"module"}