{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loads.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLoads } from '../../actions/load';\nimport LoadItem from './Loaditem';\nimport Spinner from '../layout/Spinner';\n\nconst Loads = ({\n  getLoads,\n  load: {\n    loads,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getLoads();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \" loads \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, loads.length > 0 ? loads.map(load => /*#__PURE__*/React.createElement(LoadItem, {\n    key: load._id,\n    load: load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"No Loads found...\"))));\n};\n\nLoads.propTypes = {\n  getLoads: PropTypes.func.isRequired,\n  load: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  load: state.load\n});\n\nexport default connect(mapStateToProps, {\n  getLoads\n})(Loads);","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/components/loads/Loads.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getLoads","LoadItem","Spinner","Loads","load","loads","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACH,EAAAA,QAAD;AAAWI,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAjB,CAAD,KAA2C;AACvDT,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAELM,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAiB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADwB,eAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACE,MAAN,GAAe,CAAf,GACCF,KAAK,CAACG,GAAN,CAAUJ,IAAI,iBACZ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACK,GAApB;AAAyB,IAAA,IAAI,EAAEL,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,gBAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,CAFwB,CAFnB,CAAP;AAgBD,CArBD;;AAuBAD,KAAK,CAACO,SAAN,GAAkB;AAChBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,IAAV,CAAeC,UADT;AAEhBR,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAqCG,KAArC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLoads } from '../../actions/load';\nimport LoadItem from './Loaditem';\nimport Spinner from '../layout/Spinner';\n\nconst Loads = ({getLoads, load: { loads, loading } }) => {\n  useEffect(() => {\n    getLoads();\n  }, []);\n\n  return <Fragment>\n\n  { loading ? <Spinner /> : <Fragment>\n    <h1> loads </h1>\n    <div>\n    {loads.length > 0 ? (\n      loads.map(load => (\n        <LoadItem key={load._id} load={load} />\n      ))\n    ) : <h4>No Loads found...</h4>}\n    </div>\n\n    </Fragment> }\n\n  </Fragment>;\n\n};\n\nLoads.propTypes = {\n  getLoads: PropTypes.func.isRequired,\n  load: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  load: state.load\n});\n\nexport default connect(mapStateToProps, {getLoads})(Loads);\n"]},"metadata":{},"sourceType":"module"}