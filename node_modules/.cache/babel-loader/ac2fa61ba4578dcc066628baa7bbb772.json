{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdokFrontend/client/src/components/loads/LoadsWithStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getLoads, searchLoads } from \"../../actions/load\";\nimport Spinner from \"../layout/Spinner\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport LoadStatusItem from \"./LoadStatusItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadsWithStatus = ({\n  listBarType,\n  getLoads,\n  searchLoads,\n  load: {\n    loads,\n    loading,\n    loads_pagination,\n    page,\n    rowsPerPage,\n    search\n  }\n}) => {\n  _s();\n\n  const {\n    total\n  } = loads_pagination;\n  const {\n    query,\n    loads: sLoads,\n    page: sPage,\n    limit,\n    total: sTotal\n  } = search;\n  useEffect(() => {\n    if (query) searchLoads(sPage, limit, query, listBarType);else getLoads(page, rowsPerPage, listBarType);\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    if (query) searchLoads(newPage, limit, query, listBarType);else getLoads(newPage, rowsPerPage, listBarType);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    const limit = event.target.value;\n    if (query) searchLoads(0, limit, query, listBarType);else getLoads(0, limit, listBarType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [!query && loads.length ? loads.map(l => /*#__PURE__*/_jsxDEV(LoadStatusItem, {\n        load: l,\n        loads: loads,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        listBarType: listBarType\n      }, l._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this)) : query && sLoads.length ? sLoads.map(l => /*#__PURE__*/_jsxDEV(LoadStatusItem, {\n        load: l,\n        loads: loads,\n        page: sPage,\n        rowsPerPage: limit,\n        listBarType: listBarType\n      }, l._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this)) : '', !query && !loads.length || query && !sLoads.length ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No loads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 72\n      }, this) : '', /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: !query && loads.length ? /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15],\n            colSpan: 3,\n            count: total,\n            rowsPerPage: +rowsPerPage,\n            page: page,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 46\n          }, this) : query && sLoads.length ? /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15],\n            colSpan: 3,\n            count: sTotal,\n            rowsPerPage: +limit,\n            page: sPage,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 49\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoadsWithStatus, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = LoadsWithStatus;\nLoadsWithStatus.propTypes = {\n  getLoads: PropTypes.func.isRequired,\n  load: PropTypes.object.isRequired,\n  searchLoads: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  load: state.load,\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, {\n  getLoads,\n  searchLoads\n})(LoadsWithStatus);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadsWithStatus\");","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdokFrontend/client/src/components/loads/LoadsWithStatus.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getLoads","searchLoads","Spinner","TableRow","TableFooter","TablePagination","LoadStatusItem","LoadsWithStatus","listBarType","load","loads","loading","loads_pagination","page","rowsPerPage","search","total","query","sLoads","sPage","limit","sTotal","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","length","map","l","_id","inputProps","native","propTypes","func","isRequired","object","mapStateToProps","state","driver"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getLoads, searchLoads } from \"../../actions/load\";\nimport Spinner from \"../layout/Spinner\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport LoadStatusItem from \"./LoadStatusItem\";\n\nconst LoadsWithStatus = ({ listBarType, getLoads, searchLoads, load: { loads, loading, loads_pagination, page, rowsPerPage, search } }) => {\n  const { total } = loads_pagination;\n  const { query, loads: sLoads, page: sPage, limit, total: sTotal } = search;\n  useEffect(() => {\n    if (query)\n      searchLoads(sPage, limit, query, listBarType);\n    else \n      getLoads(page, rowsPerPage, listBarType);\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    if (query)\n      searchLoads(newPage, limit, query, listBarType);\n    else\n      getLoads(newPage, rowsPerPage, listBarType);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    const limit = event.target.value;\n    if (query)\n      searchLoads(0, limit, query, listBarType);\n    else\n      getLoads(0, limit, listBarType);\n  };\n\n  return (\n    <Fragment>\n      {\" \"}\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n\n            { !query && loads.length ? (\n              loads.map((l) => <LoadStatusItem key={l._id} load={l} loads={loads} page={page} rowsPerPage={rowsPerPage} listBarType={listBarType} />)\n            ) : query && sLoads.length ? (\n              sLoads.map((l) => <LoadStatusItem key={l._id} load={l} loads={loads} page={sPage} rowsPerPage={limit} listBarType={listBarType} />)\n            ) : ''}\n\n            { (!query && !loads.length) || (query && !sLoads.length) ? <h4>No loads</h4> : '' }\n\n            <TableFooter>\n              <TableRow>\n                { (!query && loads.length) ? <TablePagination\n                  rowsPerPageOptions={[5, 10, 15]}\n                  colSpan={3}\n                  count={total}\n                  rowsPerPage={+rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                /> : (query && sLoads.length) ? <TablePagination\n                  rowsPerPageOptions={[5, 10, 15]}\n                  colSpan={3}\n                  count={sTotal}\n                  rowsPerPage={+limit}\n                  page={sPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />: '' }\n              </TableRow>\n            </TableFooter>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nLoadsWithStatus.propTypes = {\n  getLoads: PropTypes.func.isRequired,\n  load: PropTypes.object.isRequired,\n  searchLoads: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  load: state.load,\n  driver: state.driver\n});\n\nexport default connect(mapStateToProps, { getLoads, searchLoads })(LoadsWithStatus);"]},"metadata":{},"sourceType":"module"}