{"ast":null,"code":"import { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, DELETE_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR, UPDATE_LOAD, UPDATE_LOAD_ERROR, RETURNED_SEARCHED_LOADS, RESET_SEARCHED_LOADS, SELECT_LOAD, INVOICE_LOAD_FETCHED } from '../actions/types';\nconst initialState = {\n  loads: [],\n  load: null,\n  loading: true,\n  loads_pagination: {},\n  page: 0,\n  rowsPerPage: 5,\n  error: {},\n  search: {\n    query: '',\n    loads: [],\n    page: 0,\n    limit: 5,\n    total: 0,\n    totalPages: 0\n  },\n  invoices: {\n    search: '',\n    data: [],\n    page: 0,\n    limit: 5,\n    total: 0,\n    totalPages: 0\n  }\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_LOADS:\n      return { ...state,\n        allLoads: payload.loads.allLoads,\n        loads: payload.loads.load,\n        loads_pagination: {\n          limit: payload.loads.limit,\n          total: payload.loads.total,\n          totalPages: payload.loads.totalPages,\n          currPage: payload.loads.currentPage\n        },\n        page: payload.page,\n        rowsPerPage: payload.limit,\n        loading: false,\n        load: null\n      };\n\n    case INVOICE_LOAD_FETCHED:\n      return { ...state,\n        invoices: { ...state.invoices,\n          data: payload.invoices,\n          search: payload.search,\n          page: payload.page,\n          limit: payload.limit,\n          total: payload.total,\n          totalPages: payload.totalPages\n        }\n      };\n\n    case SELECT_LOAD:\n      return { ...state,\n        load: payload\n      };\n\n    case RETURNED_SEARCHED_LOADS:\n      return { ...state,\n        search: {\n          query: payload.search,\n          loads: payload.data.load,\n          page: +payload.page,\n          limit: +payload.data.limit,\n          total: payload.data.total,\n          totalPages: payload.data.totalPages\n        },\n        load: null\n      };\n\n    case RESET_SEARCHED_LOADS:\n      return { ...state,\n        search: {\n          query: '',\n          loads: [],\n          page: 0,\n          limit: 5,\n          total: 0,\n          totalPages: 0\n        }\n      };\n\n    case GET_LOAD:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case ADD_LOAD:\n      let newLoads = state.loads;\n      if (newLoads.length === 5) newLoads.splice(-1, 1);\n      newLoads = [payload, ...newLoads];\n      return { ...state,\n        loads: newLoads,\n        loads_pagination: { ...state.loads_pagination,\n          total: state.loads_pagination.total + 1\n        },\n        loading: false\n      };\n\n    case UPDATE_LOAD:\n      // don't remove if update event triggered from load status view\n      return { ...state,\n        error: {},\n        loads: payload.status !== 'Delivered' ? state.loads.map(l => {\n          if (l._id === payload._id) {\n            return payload;\n          }\n\n          return l;\n        }) : state.loads.filter(l => l._id !== payload._id),\n        loads_pagination: { ...state.loads_pagination,\n          total: payload.status === 'Delivered' ? --state.loads_pagination.total : state.loads_pagination.total\n        },\n        loading: false\n      };\n\n    case DELETE_LOAD:\n      return { ...state,\n        loads: state.loads.filter(load => load._id !== payload),\n        loading: false\n      };\n\n    case LOAD_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LOAD_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PATCH_PICKUP:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case PICKUP_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PATCH_DROP:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    case DROP_ERROR:\n      return { ...state,\n        load: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/reducers/load.js"],"names":["GET_LOADS","GET_LOAD","LOAD_ERROR","ADD_LOAD","DELETE_LOAD","PATCH_PICKUP","PICKUP_ERROR","PATCH_DROP","DROP_ERROR","UPDATE_LOAD","UPDATE_LOAD_ERROR","RETURNED_SEARCHED_LOADS","RESET_SEARCHED_LOADS","SELECT_LOAD","INVOICE_LOAD_FETCHED","initialState","loads","load","loading","loads_pagination","page","rowsPerPage","error","search","query","limit","total","totalPages","invoices","data","state","action","type","payload","allLoads","currPage","currentPage","newLoads","length","splice","status","map","l","_id","filter"],"mappings":"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","sourcesContent":["import {\n  GET_LOADS,\n  GET_LOAD,\n  LOAD_ERROR,\n  ADD_LOAD,\n  DELETE_LOAD,\n  PATCH_PICKUP,\n  PICKUP_ERROR,\n  PATCH_DROP,\n  DROP_ERROR,\n  UPDATE_LOAD,\n  UPDATE_LOAD_ERROR,\n  RETURNED_SEARCHED_LOADS,\n  RESET_SEARCHED_LOADS,\n  SELECT_LOAD,\n  INVOICE_LOAD_FETCHED\n} from '../actions/types';\n\nconst initialState = {\n  loads: [],\n  load: null,\n  loading: true,\n  loads_pagination: {},\n  page: 0,\n  rowsPerPage: 5,\n  error: {},\n  search: {\n    query: '',\n    loads: [],\n    page: 0,\n    limit: 5,\n    total:0,\n    totalPages: 0,\n  },\n  invoices: {\n    search: '',\n    data: [],\n    page: 0,\n    limit: 5,\n    total: 0,\n    totalPages: 0\n  }\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch(type) {\n    case GET_LOADS:\n      return {\n        ...state,\n        allLoads: payload.loads.allLoads,\n        loads: payload.loads.load,\n        loads_pagination: {\n          limit: payload.loads.limit,\n          total: payload.loads.total,\n          totalPages: payload.loads.totalPages,\n          currPage: payload.loads.currentPage\n        },\n        page: payload.page,\n        rowsPerPage: payload.limit,\n        loading: false,\n        load: null\n      };\n    case INVOICE_LOAD_FETCHED:\n      return {\n        ...state,\n        invoices: {\n          ...state.invoices,\n          data: payload.invoices,\n          search: payload.search,\n          page: payload.page,\n          limit: payload.limit,\n          total: payload.total,\n          totalPages: payload.totalPages\n        }\n      }\n    case SELECT_LOAD:\n      return {\n        ...state,\n        load: payload\n      };\n    case RETURNED_SEARCHED_LOADS:\n      return {\n        ...state,\n        search: {\n          query: payload.search,\n          loads: payload.data.load,\n          page: +payload.page,\n          limit: +payload.data.limit,\n          total: payload.data.total,\n          totalPages: payload.data.totalPages\n        },\n        load: null\n      };\n    case RESET_SEARCHED_LOADS:\n      return {\n        ...state,\n        search: {\n          query: '',\n          loads: [],\n          page: 0,\n          limit: 5,\n          total:0,\n          totalPages: 0,\n        }\n      }\n      case GET_LOAD:\n        return {\n          ...state,\n          load: payload,\n          loading: false\n        };\n      case ADD_LOAD:\n        let newLoads = state.loads;\n        if (newLoads.length === 5)\n          newLoads.splice(-1, 1);\n        newLoads = [payload, ...newLoads];\n        return {\n          ...state,\n          loads: newLoads,\n          loads_pagination: { ...state.loads_pagination, total: state.loads_pagination.total+1 },\n          loading: false\n        };\n      case UPDATE_LOAD:\n        // don't remove if update event triggered from load status view\n        return {\n          ...state,\n          error: {},\n          loads: payload.status !== 'Delivered' ? state.loads.map(l => {\n            if (l._id === payload._id) {\n              return payload;\n            }\n            return l;\n          }) : state.loads.filter(l => l._id !== payload._id),\n          loads_pagination: {\n            ...state.loads_pagination,\n            total: payload.status === 'Delivered' ? --state.loads_pagination.total : state.loads_pagination.total \n          },\n          loading: false\n        };\n      case DELETE_LOAD:\n        return {\n          ...state,\n          loads: state.loads.filter(load => load._id !== payload),\n          loading: false\n        }\n      case LOAD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n      };\n      case UPDATE_LOAD_ERROR:\n        return {\n          ...state,\n          error: payload,\n          loading: false\n      };\n      case PATCH_PICKUP:\n        return{\n          ...state,\n          load: payload,\n          loading: false,\n        }\n      case PICKUP_ERROR:\n        return{\n          ...state,\n          error:payload,\n          loading: false,\n        };\n      case PATCH_DROP:\n        return{\n          ...state,\n          load: payload,\n          loading:false,\n        };\n      case DROP_ERROR:\n        return{\n          ...state,\n          load: payload,\n          loading:false,\n        };\n      default:\n        return state;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}