{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR } from \"./types\"; // Get current users loads\n\nexport const getLoads = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/load/me\");\n    dispatch({\n      type: GET_LOADS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getLoad = id => async dispatch => {\n  try {\n    const res = await axios.get(`/loads/${id}`);\n    dispatch({\n      type: GET_LOAD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add load\n\nexport const addLoad = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/load\", formData, config);\n    dispatch({\n      type: ADD_LOAD,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Load Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add pickup\n//patch pickup\n\nexport const patchPickup = (load_id, pickup) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/load/pickup?load_id=${load_id}`, pickup);\n    dispatch({\n      type: PATCH_PICKUP,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PICKUP_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //patch drop\n\nexport const patchDrop = (load_id, drop) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\n    dispatch({\n      type: PATCH_DROP,\n      payload: res.date\n    });\n  } catch (err) {\n    dispatch({\n      type: DROP_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/actions/load.js"],"names":["axios","setAlert","GET_LOADS","GET_LOAD","LOAD_ERROR","ADD_LOAD","PATCH_PICKUP","PICKUP_ERROR","PATCH_DROP","DROP_ERROR","getLoads","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getLoad","id","addLoad","formData","config","headers","post","patchPickup","load_id","pickup","patch","patchDrop","drop","date"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR } from \"./types\";\n\n// Get current users loads\nexport const getLoads = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/load/me\");\n    dispatch({\n      type: GET_LOADS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getLoad = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/loads/${id}`);\n\n    dispatch({\n      type: GET_LOAD,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//add load\nexport const addLoad = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/load\", formData, config);\n\n    dispatch({\n      type: ADD_LOAD,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Load Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//add pickup\n\n//patch pickup\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/load/pickup?load_id=${load_id}`, pickup);\n    dispatch({\n      type: PATCH_PICKUP,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PICKUP_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//patch drop\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\n    dispatch({\n      type: PATCH_DROP,\n      payload: res.date,\n    });\n  } catch (err) {\n    dispatch({\n      type: DROP_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}