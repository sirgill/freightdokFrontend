{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Background from \"./ProfileBackground.svg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Loadcard } from '../loadcard/Loadcard.js';\nimport AddLoadForm from '../load-forms/AddLoad.js';\nimport { Loadlistbar } from '../loadbar/Loadlistbar.js';\nimport { Driverlistbar } from '../driverbar/Driverlistbar.js';\nimport AddDriverForm from '../driver-forms/AddDriver.js';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { CircularIndeterminate } from '../layout/Spinner.js';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport theme from \"../layout/ui/Theme\";\nimport setAuthToken from '../../utils/setAuthToken';\nimport UsersList from '../users/UsersList';\nimport UserForm from '../users/UserForm';\nimport Alert from '../layout/Alert';\nimport LoadsStatus from '../loads/LoadsStatus';\nimport { getLoads } from '../../actions/load';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchLoads, resetLoadsSearch } from '../../actions/load.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  profile: {\n    height: \"19.82em\",\n    backgroundImage: `url(${Background})`,\n    backgroundRepeat: 'no-repeat'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      color: \"#1891FC\"\n    }\n  },\n  tab: { ...theme.typography.tab\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  loadSearchbar: {\n    width: '100%',\n    textAlign: 'right',\n    padding: '10px 0'\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: \"hidden\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: theme.spacing(3)\n  },\n  contentLoadList: {\n    flex: '1 0 auto',\n    padding: '10px',\n    marginTop: 10\n  },\n  logout: {\n    marginLeft: \"15px\"\n  },\n  loads: {\n    backgroundColor: \"FFFFFF\"\n  },\n  loadboard: {\n    backgroundColor: \"#808080\"\n  },\n  loadcard: {},\n  accountcircle: {\n    backgroundColor: \"black\"\n  },\n  avatar: {\n    marginTop: 10,\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  username: {\n    marginTop: 5,\n    color: \"#FFFFFF\"\n  },\n  dashboardContainer: {\n    height: '100%'\n  },\n  fab: {\n    position: \"absolute\",\n    right: 20,\n    bottom: 20\n  }\n})); // Checking if the current user is logged in.\n\nconst Dashboard = ({\n  auth: {\n    isAuthenticated,\n    user = {}\n  },\n  logout,\n  container,\n  getLoads,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  const [spacing, setSpacing] = React.useState(2);\n  const [listBarType, setListBarType] = React.useState('loads');\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const {\n    page,\n    limit\n  } = useSelector(state => state.load.search);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const [in_progress, setInProgress] = useState(false);\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!in_progress) dispatch(searchLoads(+page, +limit, search, listBarType));\n  };\n\n  useEffect(() => {\n    if (!in_progress) {\n      setInProgress(true);\n      setTimeout(() => {\n        setInProgress(false);\n      }, 1000);\n    }\n  }, [search]);\n  useEffect(() => {\n    if (!in_progress && search !== '') dispatch(searchLoads(+page, +limit, search, listBarType));\n    if (!search) dispatch(resetLoadsSearch(listBarType));\n  }, [in_progress]);\n\n  const resetSearchField = () => setSearch('');\n\n  const drawer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.profile,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 24,\n        justify: \"center\",\n        style: {\n          minHeight: '100vh',\n          maxWidth: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            component: Link,\n            to: \"/profile\",\n            children: \"H\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.username,\n            gutterBottom: true,\n            children: user ? user.name : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => {\n          setListBarType('loads');\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Loads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => {\n          setListBarType('loadsStatus');\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Load Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => {\n          setListBarType('drivers');\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Drivers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(DraftsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          onClick: logout,\n          primary: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        component: Link,\n        to: \"/edit-profile\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(DraftsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), user && user.role === 'user' || /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => {\n          setListBarType('users');\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(DraftsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      elevation: 0,\n      color: \"secondary\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.tab,\n          children: \"freightdok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loadSearchbar,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                backgroundColor: '#fff'\n              },\n              id: \"outlined-basic\",\n              label: \"Search\",\n              variant: \"outlined\",\n              value: search,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setSearch(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"mailbox folders\",\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          container: container,\n          variant: \"temporary\",\n          anchor: theme.direction === 'rtl' ? 'right' : 'left',\n          open: mobileOpen,\n          onClose: handleDrawerToggle,\n          classes: {\n            paper: classes.drawerPaper\n          },\n          ModalProps: {\n            keepMounted: true // Better open performance on mobile.\n\n          },\n          children: drawer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          classes: {\n            paper: classes.drawerPaper\n          },\n          variant: \"permanent\",\n          open: true,\n          children: drawer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.dashboardContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [listBarType === \"loads\" && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.contentLoadList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Loadlistbar, {\n            resetSearchField: resetSearchField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.fab,\n            children: /*#__PURE__*/_jsxDEV(AddLoadForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this), listBarType === \"loadsStatus\" && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.contentLoadList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LoadsStatus, {\n            resetSearchField: resetSearchField,\n            listBarType: listBarType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this), listBarType === \"drivers\" && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.contentLoadList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Driverlistbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.fab,\n            children: /*#__PURE__*/_jsxDEV(AddDriverForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), listBarType === \"users\" && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.contentLoadList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.fab,\n            children: /*#__PURE__*/_jsxDEV(UserForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: listBarType === \"loads\" && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.contentLoadList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Loadcard, {\n            className: classes.loadcard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Dashboard, \"NjuZvZnaQ7d5DlTtdbxVVIJGjcg=\", false, function () {\n  return [useStyles, useTheme, useSelector, useDispatch];\n});\n\n_c = Dashboard;\nDashboard.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  getCurrentProfile,\n  getLoads\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","useState","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","InboxIcon","List","ListItem","ListItemIcon","ListItemText","MailIcon","MenuIcon","Toolbar","Typography","Button","makeStyles","useTheme","Grid","Loadcard","AddLoadForm","Loadlistbar","Driverlistbar","AddDriverForm","DraftsIcon","Link","AddIcon","AccountCircle","Switch","FormControlLabel","FormGroup","MenuItem","Menu","CircularIndeterminate","Avatar","connect","logout","getCurrentProfile","theme","setAuthToken","UsersList","UserForm","Alert","LoadsStatus","getLoads","TextField","useDispatch","useSelector","searchLoads","resetLoadsSearch","drawerWidth","useStyles","root","display","profile","height","backgroundImage","Background","backgroundRepeat","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","down","color","tab","typography","menuButton","marginRight","spacing","loadSearchbar","textAlign","padding","toolbar","mixins","drawerPaper","overflow","content","flex","contentLoadList","marginTop","loads","backgroundColor","loadboard","loadcard","accountcircle","avatar","username","dashboardContainer","fab","position","right","bottom","Dashboard","auth","isAuthenticated","user","container","loading","match","setSpacing","listBarType","setListBarType","classes","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","open","Boolean","page","limit","state","load","search","dispatch","setSearch","in_progress","setInProgress","handleMenu","event","currentTarget","handleClose","handleDrawerToggle","handleSubmit","e","preventDefault","setTimeout","resetSearchField","minHeight","maxWidth","name","role","target","value","direction","paper","keepMounted","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Background from './ProfileBackground.svg';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Loadcard } from '../loadcard/Loadcard.js';\nimport AddLoadForm  from '../load-forms/AddLoad.js';\nimport { Loadlistbar } from '../loadbar/Loadlistbar.js';\nimport { Driverlistbar } from '../driverbar/Driverlistbar.js';\nimport AddDriverForm from '../driver-forms/AddDriver.js';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { CircularIndeterminate } from  '../layout/Spinner.js';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport theme from \"../layout/ui/Theme\";\nimport setAuthToken from '../../utils/setAuthToken';\nimport UsersList from '../users/UsersList';\nimport UserForm from '../users/UserForm';\nimport Alert from '../layout/Alert';\nimport LoadsStatus from '../loads/LoadsStatus';\nimport { getLoads } from '../../actions/load';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchLoads, resetLoadsSearch } from '../../actions/load.js';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  profile: {\n    height: \"19.82em\",\n    backgroundImage: `url(${Background})`,\n    backgroundRepeat: 'no-repeat',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      color:\"#1891FC\"\n    },\n    },\n  tab: {\n    ...theme.typography.tab,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  loadSearchbar: {\n    width: '100%',\n    textAlign: 'right',\n    padding: '10px 0'\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: \"hidden\"\n  },\n  content: {\n    flex: '1 0 auto',\n    padding: theme.spacing(3),\n  },\n  contentLoadList: {\n    flex: '1 0 auto',\n    padding: '10px',\n    marginTop: 10\n  },\n  logout: {\n    marginLeft: \"15px\"\n  },\n\n  loads: {\n    backgroundColor: \"FFFFFF\"\n  },\n  loadboard: {\n    backgroundColor: \"#808080\",\n  },\n  loadcard: {\n\n  },\n  accountcircle: {\n    backgroundColor: \"black\",\n\n  },\n  avatar: {\n    marginTop: 10,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  username: {\n    marginTop: 5,\n    color: \"#FFFFFF\"\n  },\n  dashboardContainer: {\n    height: '100%'\n  },\n  fab: {\n    position: \"absolute\",\n    right:    20,\n    bottom:   20\n  }\n\n}));\n// Checking if the current user is logged in.\nconst Dashboard = ({\n  auth: { isAuthenticated, user = {} },\n  logout,\n  container,\n  getLoads,\n  getCurrentProfile, profile: { profile, loading },\n  match\n}) => {\n\n  const [spacing, setSpacing] = React.useState(2);\n  const [listBarType, setListBarType] = React.useState('loads');\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const { page, limit } = useSelector(state => state.load.search);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const [in_progress, setInProgress] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!in_progress)\n      dispatch(searchLoads(+page, +limit, search, listBarType));\n  }\n  useEffect(() => {\n    if (!in_progress) {\n      setInProgress(true);\n      setTimeout(() => {\n        setInProgress(false);\n      }, 1000);\n    }\n  }, [search])\n  useEffect(() => {\n    if (!in_progress && search !== '')\n      dispatch(searchLoads(+page, +limit, search, listBarType));\n    if (!search)\n      dispatch(resetLoadsSearch(listBarType));\n  }, [in_progress]);\n\n  const resetSearchField = () => setSearch('');\n  const drawer = (   \n    <div>\n      <div className={classes.profile}>\n        <div className={classes.toolbar} />\n        <Grid container spacing={24} justify=\"center\" style={{ minHeight: '100vh', maxWidth: '100%' }}>\n          <Grid item align=\"center\">\n            {/* Setting the Avatar for Username. */}\n            <Avatar \n            className={classes.avatar}\n            component={Link} \n            to=\"/profile\"\n            >H</Avatar>\n            <Typography className={classes.username} gutterBottom>\n              { user ? user.name : '' }\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n      {/* Setting the Left Sidebar */}\n      <List>\n        <ListItem button onClick={()=>{setListBarType('loads')}} >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Loads\" />\n        </ListItem>\n\n        <ListItem button  onClick={()=>{setListBarType('loadsStatus')}}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Load Status\" />\n        </ListItem>\n\n        <ListItem button onClick={()=>{setListBarType('drivers')}}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Drivers\" />\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText onClick={logout} primary=\"Logout\" />\n        </ListItem>\n\n        <ListItem button component={Link} to=\"/edit-profile\">\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Account\" />\n        </ListItem>\n\n        { (user && user.role === 'user') || <ListItem button onClick={()=>{setListBarType('users')}}>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Users\" />\n        </ListItem> }\n      </List>\n    </div>\n  );\n\n  return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" elevation={0} color=\"secondary\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.tab}>\n              freightdok\n            </Typography>\n            <div className={classes.loadSearchbar}>\n              <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                style={{backgroundColor: '#fff'}} \n                id=\"outlined-basic\" \n                label=\"Search\" \n                variant=\"outlined\"\n                value={search}\n                onChange={({ target: { value } }) => setSearch(value)} />\n              </form>  \n            </div>\n          </Toolbar>\n        </AppBar>\n\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n\n        <Grid container className={classes.dashboardContainer}>\n          <Grid item>\n            <Alert />\n          </Grid>\n          <Grid item>\n            {\n              listBarType === \"loads\" &&       \n              <main className={classes.contentLoadList}>\n                <div className={classes.toolbar} />\n                <Loadlistbar resetSearchField={resetSearchField} />\n                <div className={classes.fab}>\n                  <AddLoadForm></AddLoadForm>\n                </div>\n              </main>\n            }\n            {\n              listBarType === \"loadsStatus\" &&       \n              <main className={classes.contentLoadList}>\n                <div className={classes.toolbar} />\n                <LoadsStatus resetSearchField={resetSearchField} listBarType={listBarType} />\n              </main>\n            }\n            {\n              listBarType === \"drivers\" &&       \n              <main className={classes.contentLoadList}>\n                <div className={classes.toolbar} />\n                <Driverlistbar />\n                <div className={classes.fab}>\n                  <AddDriverForm></AddDriverForm>\n                </div>\n              </main> \n            }\n            {\n              listBarType === \"users\" &&       \n              <main className={classes.contentLoadList}>\n                <div className={classes.toolbar} />\n                <UsersList />\n                <div className={classes.fab}>\n                  <UserForm />\n                </div>\n              </main> \n            }\n          </Grid>\n\n          <Grid item>\n            {\n              listBarType === \"loads\" && \n              <main className={classes.contentLoadList}>\n                <div className={classes.toolbar} />\n                <Loadcard className={classes.loadcard} />\n              </main>\n            }\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\nDashboard.propTypes ={\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n\n});\n\nexport default connect(mapStateToProps, {logout, getCurrentProfile, getLoads} )(Dashboard);\n"]},"metadata":{},"sourceType":"module"}