{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_USERS_SUCCEED, FETCH_USERS_FAILED, FETCH_USERS, ADMIN_REG_USER, ADMIN_REG_USER_SUCCEED, ADMIN_REG_USER_FAILED, SELECT_USER_TO_EDIT, RESET_SELECTED_USER, INIT_ADMIN_UPDATE_USER, ADMIN_UPDATE_USER_SUCCEED, ADMIN_UPDATE_USER_FAILED, INIT_ADMIN_DELETE_USER, ADMIN_DELETE_USER_SUCCEED, ADMIN_DELETE_USER_FAILED, OPEN_USER_MODAL, CLOSE_USER_MODAL } from './types';\nexport const callApi = () => ({\n  type: FETCH_USERS\n});\nexport const fetchUsers = (page = 0, limit = 5) => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_USERS\n    });\n    const res = await axios.get(`/api/users?page=${page + 1}&limit=${limit}`);\n    dispatch({\n      type: FETCH_USERS_SUCCEED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_USERS_FAILED\n    });\n  }\n};\nexport const registerUser = ({\n  email,\n  password,\n  role\n}) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADMIN_REG_USER\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password,\n      role\n    });\n    await axios.post('/api/users', body, config);\n    const {\n      limit\n    } = getState().users;\n    dispatch(fetchUsers(0, +limit));\n  } catch (err) {\n    let errorToSend = err.message;\n\n    if (err.response && err.response.data) {\n      errorToSend = err.response.data.errors[0].msg;\n    }\n\n    dispatch({\n      type: ADMIN_REG_USER_FAILED,\n      payload: errorToSend\n    });\n  }\n};\nexport const selectUserToEdit = user => ({\n  type: SELECT_USER_TO_EDIT,\n  payload: user\n});\nexport const updateUser = (user, id) => async dispatch => {\n  try {\n    dispatch({\n      type: INIT_ADMIN_UPDATE_USER\n    });\n    const res = await axios.put(`/api/users/${id}`, user);\n    dispatch({\n      type: ADMIN_UPDATE_USER_SUCCEED,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: ADMIN_UPDATE_USER_FAILED,\n      payload: e.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: INIT_ADMIN_DELETE_USER\n    });\n    await axios.delete(`/api/users/${id}`);\n    const {\n      page,\n      limit\n    } = getState().users;\n    dispatch(fetchUsers(+page, +limit));\n  } catch (e) {\n    dispatch({\n      type: ADMIN_DELETE_USER_FAILED,\n      payload: e.message\n    });\n  }\n};\nexport const resetUserSelected = () => ({\n  type: RESET_SELECTED_USER\n});\nexport const openModal = () => ({\n  type: OPEN_USER_MODAL\n});\nexport const closeModal = () => ({\n  type: CLOSE_USER_MODAL\n});","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdokFrontend/client/src/actions/users.js"],"names":["axios","FETCH_USERS_SUCCEED","FETCH_USERS_FAILED","FETCH_USERS","ADMIN_REG_USER","ADMIN_REG_USER_SUCCEED","ADMIN_REG_USER_FAILED","SELECT_USER_TO_EDIT","RESET_SELECTED_USER","INIT_ADMIN_UPDATE_USER","ADMIN_UPDATE_USER_SUCCEED","ADMIN_UPDATE_USER_FAILED","INIT_ADMIN_DELETE_USER","ADMIN_DELETE_USER_SUCCEED","ADMIN_DELETE_USER_FAILED","OPEN_USER_MODAL","CLOSE_USER_MODAL","callApi","type","fetchUsers","page","limit","dispatch","res","get","payload","data","err","registerUser","email","password","role","getState","config","headers","body","JSON","stringify","post","users","errorToSend","message","response","errors","msg","selectUserToEdit","user","updateUser","id","put","e","deleteUser","delete","resetUserSelected","openModal","closeModal"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  FETCH_USERS_SUCCEED,\n  FETCH_USERS_FAILED,\n  FETCH_USERS,\n  ADMIN_REG_USER,\n  ADMIN_REG_USER_SUCCEED,\n  ADMIN_REG_USER_FAILED,\n  SELECT_USER_TO_EDIT,\n  RESET_SELECTED_USER,\n  INIT_ADMIN_UPDATE_USER,\n  ADMIN_UPDATE_USER_SUCCEED,\n  ADMIN_UPDATE_USER_FAILED,\n  INIT_ADMIN_DELETE_USER,\n  ADMIN_DELETE_USER_SUCCEED,\n  ADMIN_DELETE_USER_FAILED,\n  OPEN_USER_MODAL,\n  CLOSE_USER_MODAL\n} from './types';\n\nexport const callApi = () => ({\n    type: FETCH_USERS\n});\n\nexport const fetchUsers = (page = 0, limit = 5) => async dispatch => { \n    try {\n        dispatch({type: FETCH_USERS});\n        const res = await axios.get(`/api/users?page=${page+1}&limit=${limit}`);\n        dispatch({\n            type: FETCH_USERS_SUCCEED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: FETCH_USERS_FAILED\n        });\n    }\n};\n\nexport const registerUser = ({ email, password, role }) => async (dispatch, getState) => {\n    try {\n        dispatch({type: ADMIN_REG_USER});\n        const config = {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        };\n        const body = JSON.stringify({ email, password, role });\n        await axios.post('/api/users', body, config);\n        const { limit } = getState().users;\n        dispatch(fetchUsers(0, +limit));\n    } catch (err) {\n        let errorToSend = err.message;\n        if (err.response && err.response.data) {\n            errorToSend = err.response.data.errors[0].msg\n        }\n        dispatch({\n            type: ADMIN_REG_USER_FAILED,\n            payload: errorToSend\n        });\n    }  \n};\n\nexport const selectUserToEdit = (user) => ({\n    type: SELECT_USER_TO_EDIT,\n    payload: user\n});\n\nexport const updateUser = (user, id) => async dispatch => {\n    try {\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\n        const res = await axios.put(`/api/users/${id}`, user);\n        dispatch({\n            type: ADMIN_UPDATE_USER_SUCCEED,\n            payload: res.data\n        });\n    } catch (e) {\n        dispatch({\n            type: ADMIN_UPDATE_USER_FAILED,\n            payload: e.message\n        });\n    }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({type: INIT_ADMIN_DELETE_USER});\n        await axios.delete(`/api/users/${id}`);\n        const { page, limit } = getState().users;\n        dispatch(fetchUsers(+page, +limit));\n    } catch (e) {\n        dispatch({\n            type: ADMIN_DELETE_USER_FAILED,\n            payload: e.message\n        });\n    }\n}\n\nexport const resetUserSelected = () => ({ type: RESET_SELECTED_USER });\n\nexport const openModal = () => ({ type: OPEN_USER_MODAL });\nexport const closeModal = () => ({ type: CLOSE_USER_MODAL });\n"]},"metadata":{},"sourceType":"module"}