{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert.js';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE, USER_UPDATED, AUTH_UPDATE_FAIL, AUTH_UPDATE } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //Load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register user\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login user\n\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(\"ERROR:         \", err);\n    const errors = err;\n\n    if (errors && Array.isArray(errors)) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Update user\n\nexport const updateUser = data => async dispatch => {\n  dispatch({\n    type: AUTH_UPDATE\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify(data);\n\n  try {\n    const res = await axios.patch('/api/auth', body, config);\n    dispatch({\n      type: USER_UPDATED,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_UPDATE_FAIL,\n      payload: err.message\n    });\n  }\n}; //Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","USER_UPDATED","AUTH_UPDATE_FAIL","AUTH_UPDATE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","console","log","Array","isArray","updateUser","patch","message","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert.js';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n  USER_UPDATED,\n  AUTH_UPDATE_FAIL,\n  AUTH_UPDATE,\n} from './types';\n\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n\n};\n\n// Register user\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n\n};\n\n// Login user\nexport const login = ({ email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(\"ERROR:         \", err);\n    const errors = err;\n\n    if(errors && Array.isArray(errors)) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n\n};\n\n// Update user\nexport const updateUser = (data) => async dispatch => {\n  dispatch({type: AUTH_UPDATE});\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify(data);\n  try {\n    const res = await axios.patch('/api/auth', body, config);\n    dispatch({\n      type: USER_UPDATED,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_UPDATE_FAIL,\n      payload: err.message\n    });\n  }\n}\n\n//Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE});\n  dispatch({ type: LOGOUT});\n};"]},"metadata":{},"sourceType":"module"}