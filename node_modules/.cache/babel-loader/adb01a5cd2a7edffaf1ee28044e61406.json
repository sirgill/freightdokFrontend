{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR, DELETE_LOAD, DELETE_LOAD_ERROR, UPDATE_LOAD, UPDATE_LOAD_ERROR } from \"./types\"; // Get current users loads\n\nexport const getLoads = (page, limit) => async dispatch => {\n  try {\n    axios.defaults.headers.common['x-auth-token'] = localStorage.token;\n    const url = `/api/load/me?page=${page + 1}&limit=${limit}`;\n    const res = await axios.get(url);\n    dispatch({\n      type: GET_LOADS,\n      payload: {\n        loads: res.data,\n        page,\n        limit\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err,\n        status: err\n      }\n    });\n  }\n}; // Get post\n\nexport const getLoad = id => async dispatch => {\n  try {\n    const res = await axios.get(`/loads/${id}`);\n    dispatch({\n      type: GET_LOAD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add load\n\nexport const addLoad = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    console.log('=========================  LOADINF...............');\n    const res = await axios.post(\"/api/load\", formData, config);\n    dispatch({\n      type: ADD_LOAD,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Load Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const updateLoad = formData => async dispatch => {\n  try {\n    const res = await axios.patch(\"/api/load/modify\", formData);\n    dispatch({\n      type: UPDATE_LOAD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_LOAD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add pickup\n//patch pickup\n\nexport const patchPickup = (load_id, pickup) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/load/pickup?load_id=${load_id}`, pickup);\n    dispatch({\n      type: PATCH_PICKUP,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PICKUP_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //patch drop\n\nexport const patchDrop = (load_id, drop) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\n    dispatch({\n      type: PATCH_DROP,\n      payload: res.date\n    });\n  } catch (err) {\n    dispatch({\n      type: DROP_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete a load\n\nexport const deleteLoad = load_id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/load`, {\n      data: {\n        load_id: load_id\n      }\n    });\n    console.log(\"RES:                 \", res);\n    dispatch({\n      type: DELETE_LOAD,\n      payload: load_id\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_LOAD_ERROR,\n      payload: {\n        msg: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/actions/load.js"],"names":["axios","setAlert","GET_LOADS","GET_LOAD","LOAD_ERROR","ADD_LOAD","PATCH_PICKUP","PICKUP_ERROR","PATCH_DROP","DROP_ERROR","DELETE_LOAD","DELETE_LOAD_ERROR","UPDATE_LOAD","UPDATE_LOAD_ERROR","getLoads","page","limit","dispatch","defaults","headers","common","localStorage","token","url","res","get","type","payload","loads","data","err","msg","status","getLoad","id","response","statusText","addLoad","formData","config","console","log","post","updateLoad","patch","patchPickup","load_id","pickup","patchDrop","drop","date","deleteLoad","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,YAApD,EAAkEC,YAAlE,EAAgFC,UAAhF,EAA4FC,UAA5F,EAAwGC,WAAxG,EAAqHC,iBAArH,EAAwIC,WAAxI,EAAqJC,iBAArJ,QAA8K,SAA9K,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAOC,QAAP,IAAoB;AAC3D,MAAI;AACFjB,IAAAA,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDC,YAAY,CAACC,KAA7D;AACA,UAAMC,GAAG,GAAI,qBAAoBR,IAAI,GAAC,CAAE,UAASC,KAAM,EAAvD;AACA,UAAMQ,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAUF,GAAV,CAAlB;AACAN,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAExB,SADC;AAEPyB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAb;AAAmBd,QAAAA,IAAnB;AAAyBC,QAAAA;AAAzB;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOc,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEtB,UADC;AAEPuB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAP;AAAYE,QAAAA,MAAM,EAAEF;AAApB;AAFF,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMG,OAAO,GAAIC,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,UAASS,EAAG,EAAvB,CAAlB;AAEAjB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEvB,QADC;AAEPwB,MAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEtB,UADC;AAEPuB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCJ,QAAAA,MAAM,EAAEF,GAAG,CAACK,QAAJ,CAAaH;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMK,OAAO,GAAIC,QAAD,IAAc,MAAOrB,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMsB,MAAM,GAAG;AACbpB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACA,UAAMjB,GAAG,GAAG,MAAMxB,KAAK,CAAC0C,IAAN,CAAW,WAAX,EAAwBJ,QAAxB,EAAkCC,MAAlC,CAAlB;AAEAtB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAErB,QADC;AAEPsB,MAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,KAAD,CAAR;AAKAZ,IAAAA,QAAQ,CAAChB,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACD,GAfD,CAeE,OAAO6B,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEtB,UADC;AAEPuB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCJ,QAAAA,MAAM,EAAEF,GAAG,CAACK,QAAJ,CAAaH;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAtBM;AAwBP,OAAO,MAAMW,UAAU,GAAIL,QAAD,IAAc,MAAOrB,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMxB,KAAK,CAAC4C,KAAN,CAAY,kBAAZ,EAAgCN,QAAhC,CAAlB;AACArB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,WADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,iBADC;AAEPc,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCJ,QAAAA,MAAM,EAAEF,GAAG,CAACK,QAAJ,CAAaH;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;AAEA;;AACA,OAAO,MAAMa,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB,MAAO9B,QAAP,IAAoB;AAClE,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMxB,KAAK,CAAC4C,KAAN,CAAa,4BAA2BE,OAAQ,EAAhD,EAAmDC,MAAnD,CAAlB;AACA9B,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEpB,YADC;AAEPqB,MAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEnB,YADC;AAEPoB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCJ,QAAAA,MAAM,EAAEF,GAAG,CAACK,QAAJ,CAAaH;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMgB,SAAS,GAAG,CAACF,OAAD,EAAUG,IAAV,KAAmB,MAAOhC,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMxB,KAAK,CAAC4C,KAAN,CAAa,0BAAyBE,OAAQ,EAA9C,EAAiDG,IAAjD,CAAlB;AACAhC,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAElB,UADC;AAEPmB,MAAAA,OAAO,EAAEH,GAAG,CAAC0B;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOpB,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEjB,UADC;AAEPkB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCJ,QAAAA,MAAM,EAAEF,GAAG,CAACK,QAAJ,CAAaH;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMmB,UAAU,GAAIL,OAAD,IAAa,MAAO7B,QAAP,IAAoB;AACzD,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMxB,KAAK,CAACoD,MAAN,CAAc,WAAd,EAA0B;AAAEvB,MAAAA,IAAI,EAAE;AAAEiB,QAAAA,OAAO,EAAEA;AAAX;AAAR,KAA1B,CAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCjB,GAArC;AACAP,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEhB,WADC;AAEPiB,MAAAA,OAAO,EAAEmB;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOhB,GAAP,EAAY;AACZb,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEf,iBADC;AAEPgB,MAAAA,OAAO,EAAE;AAAEI,QAAAA,GAAG,EAAED;AAAP;AAFF,KAAD,CAAR;AAID;AACF,CAdM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport { GET_LOADS, GET_LOAD, LOAD_ERROR, ADD_LOAD, PATCH_PICKUP, PICKUP_ERROR, PATCH_DROP, DROP_ERROR, DELETE_LOAD, DELETE_LOAD_ERROR, UPDATE_LOAD, UPDATE_LOAD_ERROR } from \"./types\";\n\n// Get current users loads\nexport const getLoads = (page, limit) => async (dispatch) => {\n  try {\n    axios.defaults.headers.common['x-auth-token'] = localStorage.token;\n    const url = `/api/load/me?page=${page+1}&limit=${limit}`;\n    const res = await axios.get(url);\n    dispatch({\n      type: GET_LOADS,\n      payload: { loads: res.data, page, limit },\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err, status: err },\n    });\n  }\n};\n\n// Get post\nexport const getLoad = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/loads/${id}`);\n\n    dispatch({\n      type: GET_LOAD,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//add load\nexport const addLoad = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    console.log('=========================  LOADINF...............');\n    const res = await axios.post(\"/api/load\", formData, config);\n\n    dispatch({\n      type: ADD_LOAD,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Load Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const updateLoad = (formData) => async (dispatch) => {\n  try {\n    const res = await axios.patch(\"/api/load/modify\", formData);\n    dispatch({\n      type: UPDATE_LOAD,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_LOAD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n}\n\n//add pickup\n\n//patch pickup\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/load/pickup?load_id=${load_id}`, pickup);\n    dispatch({\n      type: PATCH_PICKUP,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PICKUP_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//patch drop\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\n    dispatch({\n      type: PATCH_DROP,\n      payload: res.date,\n    });\n  } catch (err) {\n    dispatch({\n      type: DROP_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete a load\nexport const deleteLoad = (load_id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/load`, { data: { load_id: load_id } });\n    console.log(\"RES:                 \", res);\n    dispatch({\n      type: DELETE_LOAD,\n      payload: load_id,\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_LOAD_ERROR,\n      payload: { msg: err },\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}