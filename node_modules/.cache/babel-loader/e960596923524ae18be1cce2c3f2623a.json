{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport './authcss/LoginRegister.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login({\n      email,\n      password\n    });\n  }; //Redirect if logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"auth-inner\",\n          onSubmit: e => onSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Enter email\",\n              name: \"email\",\n              value: email,\n              onChange: e => onChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Enter password\",\n              name: \"password\",\n              value: password,\n              onChange: e => onChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-block\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot-password text-right\",\n            children: [\"Forgot \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ieKgwtilYWyLtnoFdXMveTDpKHQ=\");\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sunnygill/Dropbox/My Mac (Surinders-MacBook-Pro.local)/Desktop/freightdok/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","Redirect","connect","PropTypes","login","Login","isAuthenticated","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport './authcss/LoginRegister.css';\n\n\n\n\nconst Login = ({ login, isAuthenticated }) => {\n\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n   setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   const onSubmit = async e => {\n    e.preventDefault();\n      login({email, password});\n  };\n\n  //Redirect if logged in\n  if(isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n    <section className=\"login\">\n    <div className=\"auth-wrapper\">\n    <form className=\"auth-inner\" onSubmit={e => onSubmit(e)}>\n        <h3>Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Enter email\"\n                    name='email'\n                    value={email}\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter password\"\n                    name='password'\n                    value={password}\n                    onChange={e => onChange(e)}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" >Submit</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n            </div>\n            </section>\n    </Fragment>\n  );\n\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n"]},"metadata":{},"sourceType":"module"}