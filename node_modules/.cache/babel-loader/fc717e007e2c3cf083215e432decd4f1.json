{"ast":null,"code":"var _jsxFileName = \"/Users/sunnygill/Desktop/freightdok/client/src/components/loads/LoadDetailModal.js\";\nimport React, { useEffect } from 'react';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateLoad } from '../../actions/load';\nimport moment from \"moment\";\nimport { getDrivers } from '../../actions/driver';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    flexGrow: 1,\n    flexDirection: \"row\",\n    textAlign: \"center\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  resizeDialog: {\n    fontSize: 14\n  }\n}));\n\nconst getModalStyle = () => {\n  return {\n    top: '50%',\n    left: '50%',\n    width: '80%',\n    transform: 'translate(-50%, -50%)',\n    overflowY: 'scroll',\n    height: '100%'\n  };\n};\n\nconst formInitialState = {\n  status: '',\n  assignedTo: null,\n  accessorials: [],\n  pickup: [],\n  drop: []\n};\n\nconst TextPlaceHolder = ({\n  value\n}) => value ? value : '--';\n\nconst LoadDetailModal = ({\n  open,\n  handleClose,\n  load: {\n    _id,\n    brokerage,\n    loadNumber,\n    pickup,\n    drop,\n    assignedTo = null,\n    status = '',\n    accessorials = []\n  }\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [edit, setEdit] = React.useState(false);\n  const [form, setForm] = React.useState({ ...formInitialState\n  });\n  useEffect(() => {\n    setupDrivers();\n    setForm({\n      status,\n      assignedTo,\n      accessorials,\n      pickup,\n      drop\n    });\n  }, []);\n  useEffect(() => {\n    const drivers = state.driver.drivers;\n\n    if (drivers.length > 0) {\n      for (let driver of drivers) {\n        if (driver.loads.length > 0) {\n          for (let load of driver.loads) {\n            if (load._id === _id) {\n              setForm({ ...form,\n                assignedTo: driver._id\n              });\n            }\n          }\n        }\n      }\n    }\n  }, [state.driver.drivers]);\n\n  const setupDrivers = () => {\n    dispatch(getDrivers());\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await dispatch(updateLoad({ ...form,\n      _id\n    }));\n    setEdit(false);\n    handleClose();\n  };\n\n  const handleOnChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handlePickDropChange = ({\n    target: {\n      value\n    }\n  }, keyToUpdate, childKey) => {\n    if (keyToUpdate === 'pickup') setForm({ ...form,\n      pickup: [{ ...form.pickup[0],\n        [childKey]: value\n      }]\n    });else if (keyToUpdate === 'drop') setForm({ ...form,\n      drop: [{ ...form.drop[0],\n        [childKey]: value\n      }]\n    });\n  };\n\n  const handleCancel = () => {\n    setForm({ ...form,\n      assignedTo,\n      status,\n      accessorials,\n      pickup,\n      drop\n    });\n    setEdit(false);\n  };\n\n  const handleDateChange = (date, key) => {\n    setForm({ ...form,\n      [key]: [{ ...form[key][0],\n        [`${key}Date`]: date\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"label-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 45\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"label-status\",\n    id: \"demo-simple-select-outlined\",\n    value: form.status,\n    label: \"Status\",\n    name: \"status\",\n    disabled: !edit,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'loaded',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 49\n    }\n  }, \"Loaded\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'unloaded',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 49\n    }\n  }, \"UnLoaded\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'loading',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 49\n    }\n  }, \"Loading\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'cancelled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }\n  }, \"Cancelled\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'pickedup',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 49\n    }\n  }, \"Picked up\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'delivered',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }, \"Delivered\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"label-assigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 41\n    }\n  }, \"Assigned\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"label-assigne\",\n    lable: \"Assigned\",\n    id: \"demo-simple-select-outlined\",\n    name: \"assignedTo\",\n    disabled: !edit,\n    value: form.assignedTo,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 41\n    }\n  }, state.driver.drivers.map(({\n    _id,\n    firstName,\n    lastName\n  }) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 109\n    }\n  }, firstName, \" \", lastName))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"label-accessorials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 41\n    }\n  }, \"Accessorials\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"label-accessorials\",\n    label: \"Accessorials\",\n    id: \"demo-simple-select-outlined\",\n    name: \"accessorials\",\n    value: form.accessorials,\n    disabled: !edit,\n    multiple: true,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'tuno',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 45\n    }\n  }, \"TUNO\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'detention',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 45\n    }\n  }, \"Detention\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'lumper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 45\n    }\n  }, \"Lumper\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 'layover',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  }, \"Layover\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: !edit,\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Trailer #\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, \"Pickup\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Shipper Name\",\n    value: form.pickup[0].shipperName,\n    onChange: event => handlePickDropChange(event, 'pickup', 'shipperName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].shipperName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Address\",\n    value: form.pickup[0].pickupAddress,\n    onChange: event => handlePickDropChange(event, 'pickup', 'pickupAddress'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].pickupAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"City\",\n    value: form.pickup[0].pickupCity,\n    onChange: event => handlePickDropChange(event, 'pickup', 'pickupCity'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"State\",\n    value: form.pickup[0].pickupState,\n    onChange: event => handlePickDropChange(event, 'pickup', 'pickupState'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Zip\",\n    value: form.pickup[0].pickupZip,\n    onChange: event => handlePickDropChange(event, 'pickup', 'pickupZip'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].pickupCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }), \",\", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].pickupState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 41\n    }\n  }), \",\", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].pickupZip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    className: classes.textFieldDialog,\n    InputProps: {\n      classes: {\n        input: classes.resizeDialog\n      }\n    },\n    size: \"small\",\n    id: \"time-picker\",\n    value: form.pickup[0] ? form.pickup[0].pickupDate : '',\n    onChange: date => handleDateChange(date, 'pickup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: classes.textFieldDialog,\n    InputProps: {\n      classes: {\n        input: classes.resizeDialog\n      }\n    },\n    size: \"small\",\n    id: \"date-picker-dialog\",\n    format: \"MM/dd/yyyy\",\n    value: form.pickup[0] ? form.pickup[0].pickupDate : '',\n    onChange: date => handleDateChange(date, 'pickup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 49\n    }\n  })))) : moment(pickup[0].pickupDate).format('LLL'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, \"Drop\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Receiver Name\",\n    value: form.drop[0].receiverName,\n    onChange: event => handlePickDropChange(event, 'drop', 'receiverName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].receiverName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Address\",\n    value: form.drop[0].dropAddress,\n    onChange: event => handlePickDropChange(event, 'drop', 'dropAddress'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].dropAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"City\",\n    value: form.drop[0].dropCity,\n    onChange: event => handlePickDropChange(event, 'drop', 'dropCity'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"State\",\n    value: form.drop[0].dropState,\n    onChange: event => handlePickDropChange(event, 'drop', 'dropState'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    label: \"Zip\",\n    value: form.drop[0].dropZip,\n    onChange: event => handlePickDropChange(event, 'drop', 'dropZip'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].dropCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 41\n    }\n  }), \",\", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].dropState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 41\n    }\n  }), \",\", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].dropZip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 33\n    }\n  }, edit ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n    className: classes.textFieldDialog,\n    InputProps: {\n      classes: {\n        input: classes.resizeDialog\n      }\n    },\n    size: \"small\",\n    id: \"time-picker\",\n    value: form.drop[0] ? form.drop[0].dropDate : '',\n    onChange: date => handleDateChange(date, 'drop'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: classes.textFieldDialog,\n    InputProps: {\n      classes: {\n        input: classes.resizeDialog\n      }\n    },\n    size: \"small\",\n    id: \"date-picker-dialog\",\n    format: \"MM/dd/yyyy\",\n    value: form.drop[0] ? form.drop[0].dropDate : '',\n    onChange: date => handleDateChange(date, 'drop'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 49\n    }\n  })))) : moment(drop[0].dropDate).format('LLL')))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, \"Load \", loadNumber), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, \"PO# \"), !edit ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 39\n    }\n  }, \"Notes: \", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: pickup[0].notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 49\n    }\n  })) : /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Pickup Notes\",\n    multiline: true,\n    rows: 2,\n    value: form.pickup[0].notes,\n    onChange: event => handlePickDropChange(event, 'pickup', 'notes'),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, \"Deliver# \"), !edit ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 39\n    }\n  }, \"Notes: \", /*#__PURE__*/React.createElement(TextPlaceHolder, {\n    value: drop[0].notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 49\n    }\n  })) : /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Drop Notes\",\n    multiline: true,\n    rows: 2,\n    value: form.drop[0].notes,\n    onChange: event => handlePickDropChange(event, 'drop', 'notes'),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  }, !edit ? /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    fontSize: \"large\",\n    color: \"primary\",\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DoneIcon, {\n    fontSize: \"large\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    fontSize: \"large\",\n    color: \"primary\",\n    onClick: () => handleCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, \"Rate Confirmation \", /*#__PURE__*/React.createElement(CheckCircleIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, \"Proof of Delivery \", /*#__PURE__*/React.createElement(CheckCircleIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 51\n    }\n  })))))))));\n};\n\nexport default LoadDetailModal;","map":{"version":3,"sources":["/Users/sunnygill/Desktop/freightdok/client/src/components/loads/LoadDetailModal.js"],"names":["React","useEffect","Modal","makeStyles","Grid","FormControl","Select","InputLabel","TextField","MenuItem","IconButton","EditIcon","DoneIcon","CloseIcon","CheckCircleIcon","useDispatch","useSelector","updateLoad","moment","getDrivers","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","flexGrow","flexDirection","textAlign","formControl","margin","minWidth","resizeDialog","fontSize","getModalStyle","top","left","width","transform","overflowY","height","formInitialState","status","assignedTo","accessorials","pickup","drop","TextPlaceHolder","value","LoadDetailModal","open","handleClose","load","_id","brokerage","loadNumber","classes","dispatch","state","modalStyle","useState","edit","setEdit","form","setForm","setupDrivers","drivers","driver","length","loads","handleSubmit","event","preventDefault","handleOnChange","name","target","handlePickDropChange","keyToUpdate","childKey","handleCancel","handleDateChange","date","key","map","firstName","lastName","shipperName","pickupAddress","pickupCity","pickupState","pickupZip","textFieldDialog","input","pickupDate","format","receiverName","dropAddress","dropCity","dropState","dropZip","dropDate","notes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateLoad } from '../../actions/load';\nimport moment from \"moment\";\nimport { getDrivers } from '../../actions/driver';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root: {\n        flexGrow: 1,\n        flexDirection: \"row\",\n        textAlign: \"center\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    resizeDialog: {\n        fontSize: 14,\n    },\n}));\n\nconst getModalStyle = () => {\n    return {\n        top: '50%',\n        left: '50%',\n        width: '80%',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'scroll',\n        height: '100%'\n    };\n}\n\nconst formInitialState = {\n    status: '',\n    assignedTo: null,\n    accessorials: [],\n    pickup: [],\n    drop: []\n};\n\nconst TextPlaceHolder = ({value}) => (value ? value : '--');\n\nconst LoadDetailModal = ({\n    open,\n    handleClose,\n    load: {\n        _id, \n        brokerage, \n        loadNumber, \n        pickup, \n        drop,\n        assignedTo = null,\n        status = '',\n        accessorials = []\n    }\n}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const state = useSelector(state => state);\n    const [modalStyle] = React.useState(getModalStyle);\n    const [edit, setEdit] = React.useState(false);\n    const [form, setForm] = React.useState({...formInitialState});\n    useEffect(() => {\n        setupDrivers();\n        setForm({ \n            status, assignedTo, accessorials, pickup, drop \n        });\n    }, []);\n    useEffect(() => {\n        const drivers = state.driver.drivers;\n        if (drivers.length > 0) {\n            for (let driver of drivers) {\n                if (driver.loads.length > 0) {\n                    for (let load of driver.loads) {\n                        if (load._id === _id) {\n                            setForm({ ...form, assignedTo: driver._id });\n                        }\n                    }\n                }\n            }\n        }\n    }, [state.driver.drivers])\n    const setupDrivers = () => {\n        dispatch(getDrivers());\n    }\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        await dispatch(updateLoad({...form, _id}));\n        setEdit(false);\n        handleClose();\n    }\n    const handleOnChange = (event) => {\n        const { name, value } = event.target;\n        setForm({ ...form, [name]: value });\n    }\n    const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\n        if (keyToUpdate === 'pickup')\n            setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }]});\n        else if (keyToUpdate === 'drop')\n            setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\n    }\n    const handleCancel = () => {\n        setForm({ ...form, assignedTo, status, accessorials, pickup, drop });\n        setEdit(false);\n    }\n    const handleDateChange = (date, key) => {\n        setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\n    }\n    return <>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        >\n            <div style={modalStyle} className={classes.paper}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                                {/* <Grid item xs={6}><p>Status:</p></Grid> */}\n                                <Grid item xs={12}>\n                                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                                            <InputLabel id=\"label-status\">Status</InputLabel>\n                                            <Select\n                                                labelId=\"label-status\"\n                                                id=\"demo-simple-select-outlined\"\n                                                value={form.status}\n                                                label=\"Status\"\n                                                name=\"status\"\n                                                disabled={!edit}\n                                                onChange={handleOnChange}\n                                                >\n                                                <MenuItem value={'loaded'}>Loaded</MenuItem>\n                                                <MenuItem value={'unloaded'}>UnLoaded</MenuItem>\n                                                <MenuItem value={'loading'}>Loading</MenuItem>\n                                                <MenuItem value={'cancelled'}>Cancelled</MenuItem>\n                                                <MenuItem value={'pickedup'}>Picked up</MenuItem>\n                                                <MenuItem value={'delivered'}>Delivered</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                            {/* <Grid item xs={6}><p>Assigned:</p></Grid> */}\n                                <Grid item  xs={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"label-assigned\">Assigned</InputLabel>\n                                        <Select\n                                            labelId=\"label-assigne\"\n                                            lable=\"Assigned\"\n                                            id=\"demo-simple-select-outlined\"\n                                            name=\"assignedTo\"\n                                            disabled={!edit}\n                                            value={form.assignedTo}\n                                            onChange={handleOnChange}\n                                            >\n                                                { state.driver.drivers.map(({_id, firstName, lastName}) => (<MenuItem value={_id}>{firstName} {lastName}</MenuItem>)) }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Grid container spacing={2} className={classes.root}>\n                                {/* <Grid item xs={6}><p>Accessorials:</p></Grid> */}\n                                <Grid item xs={12}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"label-accessorials\">Accessorials</InputLabel>\n                                        <Select\n                                            labelId=\"label-accessorials\"\n                                            label=\"Accessorials\"\n                                            id=\"demo-simple-select-outlined\"\n                                            name=\"accessorials\"\n                                            value={form.accessorials}\n                                            disabled={!edit}\n                                            multiple\n                                            onChange={handleOnChange}\n                                            >\n                                            <MenuItem value={'tuno'}>TUNO</MenuItem>\n                                            <MenuItem value={'detention'}>Detention</MenuItem>\n                                            <MenuItem value={'lumper'}>Lumper</MenuItem>\n                                            <MenuItem value={'layover'}>Layover</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4}>\n                            <Grid container className={classes.root}>\n                                {/* <Grid item xs={6}><p>Trailor #</p></Grid> */}\n                                <Grid item xs={12}>\n                                    <TextField disabled={!edit} id=\"outlined-basic\" variant=\"outlined\" label=\"Trailer #\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                            <Grid item xs={4} style={{textAlign:'center'}}>\n                                <h4>Pickup</h4>\n                                <p>\n                                    { edit ? <TextField  \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Shipper Name\"\n                                    value={form.pickup[0].shipperName} \n                                    onChange={(event)=>handlePickDropChange(event, 'pickup', 'shipperName')}/> : \n                                    <TextPlaceHolder value={pickup[0].shipperName}/> }\n                                </p>\n                                <p>\n                                    { edit ? <TextField  \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Address\"\n                                    value={form.pickup[0].pickupAddress} \n                                    onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupAddress')}/> : \n                                    <TextPlaceHolder value={pickup[0].pickupAddress}/> }\n                                </p>\n                                <p>\n                                    { edit ? <Grid container spacing={2} className={classes.root}>\n                                        <Grid item xs={4}>\n                                            <TextField  \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"City\"\n                                            value={form.pickup[0].pickupCity} \n                                            onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupCity')}/>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <TextField      \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"State\"\n                                            value={form.pickup[0].pickupState} \n                                            onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupState')}/>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <TextField      \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"Zip\"\n                                            value={form.pickup[0].pickupZip} \n                                            onChange={(event)=>handlePickDropChange(event, 'pickup', 'pickupZip')}/>\n                                        </Grid>\n                                    </Grid> : <>\n                                        <TextPlaceHolder value={pickup[0].pickupCity} />, \n                                        <TextPlaceHolder value={pickup[0].pickupState} />, \n                                        <TextPlaceHolder value={pickup[0].pickupZip} />\n                                    </> }\n                                </p>\n                                <p>\n                                    { edit ? <Grid container>\n                                        <Grid item xs={6}>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <KeyboardTimePicker\n                                                className={classes.textFieldDialog}\n                                                InputProps={{\n                                                    classes: { input: classes.resizeDialog },\n                                                }}\n                                                size=\"small\"\n                                                id=\"time-picker\"\n                                                value={form.pickup[0] ? form.pickup[0].pickupDate : ''}\n                                                onChange={(date) => handleDateChange(date, 'pickup')}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <KeyboardDatePicker\n                                                className={classes.textFieldDialog}\n                                                InputProps={{\n                                                    classes: { input: classes.resizeDialog },\n                                                }}\n                                                size=\"small\"\n                                                id=\"date-picker-dialog\"\n                                                format=\"MM/dd/yyyy\"\n                                                value={form.pickup[0] ? form.pickup[0].pickupDate : ''}\n                                                onChange={(date) => handleDateChange(date, 'pickup')}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                    </Grid> : \n                                    moment(pickup[0].pickupDate).format('LLL')}\n                                </p>\n                            </Grid>\n                            <Grid item xs={4}></Grid>\n                            <Grid item xs={4} style={{textAlign:'center'}}>\n                                <h4>Drop</h4>\n                                <p>\n                                    { edit ? <TextField  \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Receiver Name\"\n                                    value={form.drop[0].receiverName} \n                                    onChange={(event)=>handlePickDropChange(event, 'drop', 'receiverName')}/> : \n                                    <TextPlaceHolder value={drop[0].receiverName}/> }\n                                </p>\n                                <p>\n                                    { edit ? <TextField  \n                                    id=\"outlined-basic\" \n                                    variant=\"outlined\" \n                                    label=\"Address\"\n                                    value={form.drop[0].dropAddress} \n                                    onChange={(event)=>handlePickDropChange(event, 'drop', 'dropAddress')}/> : \n                                    <TextPlaceHolder value={drop[0].dropAddress}/> }\n                                </p>\n                                <p>\n                                    { edit ? <Grid container spacing={2} className={classes.root}>\n                                        <Grid item xs={4}>\n                                            <TextField  \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"City\"\n                                            value={form.drop[0].dropCity} \n                                            onChange={(event)=>handlePickDropChange(event, 'drop', 'dropCity')}/>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <TextField      \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"State\"\n                                            value={form.drop[0].dropState} \n                                            onChange={(event)=>handlePickDropChange(event, 'drop', 'dropState')}/>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <TextField      \n                                            id=\"outlined-basic\" \n                                            variant=\"outlined\" \n                                            label=\"Zip\"\n                                            value={form.drop[0].dropZip} \n                                            onChange={(event)=>handlePickDropChange(event, 'drop', 'dropZip')}/>\n                                        </Grid>\n                                    </Grid> : <>\n                                        <TextPlaceHolder value={drop[0].dropCity} />, \n                                        <TextPlaceHolder value={drop[0].dropState} />, \n                                        <TextPlaceHolder value={drop[0].dropZip} />\n                                    </> }\n                                </p>\n                                <p>\n                                    { edit ? <Grid container>\n                                        <Grid item xs={6}>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <KeyboardTimePicker\n                                                className={classes.textFieldDialog}\n                                                InputProps={{\n                                                    classes: { input: classes.resizeDialog },\n                                                }}\n                                                size=\"small\"\n                                                id=\"time-picker\"\n                                                value={form.drop[0] ? form.drop[0].dropDate : ''}\n                                                onChange={(date) => handleDateChange(date, 'drop')}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <KeyboardDatePicker\n                                                className={classes.textFieldDialog}\n                                                InputProps={{\n                                                    classes: { input: classes.resizeDialog },\n                                                }}\n                                                size=\"small\"\n                                                id=\"date-picker-dialog\"\n                                                format=\"MM/dd/yyyy\"\n                                                value={form.drop[0] ? form.drop[0].dropDate : ''}\n                                                onChange={(date) => handleDateChange(date, 'drop')}\n                                                />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                    </Grid> : \n                                    moment(drop[0].dropDate).format('LLL') }\n                                </p>\n                            </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>Load {loadNumber}</Grid>\n                        <Grid item xs={4}></Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <p>PO# </p>\n                            { !edit ? <p>Notes: <TextPlaceHolder value={pickup[0].notes} /></p> :\n                            <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Pickup Notes\"\n                            multiline\n                            rows={2}\n                            value={form.pickup[0].notes}\n                            onChange={(event)=>handlePickDropChange(event, 'pickup', 'notes')}\n                            variant=\"outlined\"\n                            /> }\n                        </Grid>\n                        <Grid item xs={4}></Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            <p>Deliver# </p>\n                            { !edit ? <p>Notes: <TextPlaceHolder value={drop[0].notes} /></p> :\n                            <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Drop Notes\"\n                            multiline\n                            rows={2}\n                            value={form.drop[0].notes}\n                            onChange={(event)=>handlePickDropChange(event, 'drop', 'notes')}\n                            variant=\"outlined\"\n                            /> }\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2} className={classes.root}>\n                        <Grid item xs={4}>\n                            <div>\n                                { !edit ? <IconButton>\n                                    <EditIcon fontSize=\"large\" color=\"primary\" onClick={()=>setEdit(true)} />\n                                </IconButton> : <>\n                                <IconButton>\n                                    <DoneIcon fontSize=\"large\" color=\"primary\" onClick={handleSubmit} />\n                                </IconButton>\n                                <IconButton>\n                                    <CloseIcon fontSize=\"large\" color=\"primary\" onClick={()=>handleCancel()} />\n                                </IconButton>\n                                </> }\n                            </div>\n                        </Grid>\n                        <Grid item xs={4} style={{textAlign:'center'}}>\n                            {/* <p>Some text</p>    \n                            <p>Some text</p>    \n                            <p>Some text</p>\n                            <p>Some text</p>     */}\n                        </Grid>\n                        <Grid item xs={4} style={{position:'relative'}}>\n                        <div>\n                            <p>\n                                Rate Confirmation <CheckCircleIcon color=\"primary\"/>\n                            </p>\n                            <p>\n                                Proof of Delivery <CheckCircleIcon color=\"primary\"/>\n                            </p>\n                        </div>\n                    </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Modal>\n    </>\n}\n\nexport default LoadDetailModal;"]},"metadata":{},"sourceType":"module"}