{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/MoveToMyLoads.js","components/invoices/InvoicesList.js","hooks/useMutation.js","components/Atoms/Modal.js","components/Atoms/Dialog.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","actions/load.js","components/Atoms/form/InputField.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","_e$target","_e$target2","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref2","handleClose","anchorEl","onAddNewService","list","setList","useState","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref3","services","setAnchorEl","React","servicesComp","useMemo","s","event","currentTarget","Title","variant","_Typography","fontWeight","DialogComponent","transition","pdf","setPdf","getTotal","addService","notes","setNotes","ref","useRef","brokerage","loadNumber","pickup","drop","rate","accessorials","proofDelivery","rateConfirmation","bucketFiles","PdfViewer","pdfUrl","pdfFileName","pages","setPages","useEffect","script","document","createElement","src","async","onload","blob","fetch","then","response","headers","get","equalsIgnoreCase","reader","FileReader","result","pdfjsLib","window","GlobalWorkerOptions","workerSrc","version","getDocument","promise","pdfDocument","numPages","promises","i","push","getPage","Promise","all","pagePromises","page","viewport","getViewport","scale","canvas","context","getContext","height","renderContext","canvasContext","render","toDataURL","pageImages","readAsArrayBuffer","body","appendChild","style","position","minHeight","alt","top","left","docFileViewer","doc","fileLocation","fileName","reactToPrintContent","useCallback","current","reactToPrintTrigger","_Dialog","PaperProps","TransitionComponent","maxWidth","_DialogContent","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","alignItems","gap","htmlFor","background","borderRadius","cursor","accept","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","pageStyle","Invoice","_ref4","match","params","history","setOpen","invoices","useSelector","state","load","setServices","find","invoice","_id","Transition","forwardRef","props","useHistory","_Zoom","onExited","goBack","total","reduce","acc","service","Intl","NumberFormat","currency","format","obj","_ref5","row","clone","splice","config","title","preventBackdropClick","Container","styled","theme","breakpoints","down","up","MoveToMyLoads","onCloseUrl","getInvoices","setValue","mutation","loading","useMutation","statuses","LOAD_STATUSES","status","disabled","Modal","component","onSubmit","preventDefault","replace","Select","options","showNone","LoadingButton","fullWidth","isLoading","loadingText","InvoicesList","listBarType","edit","UserSettings","getUserPermissionsByDashboardId","dispatch","useDispatch","path","useRouteMatch","limit","loads","resetLoadsSearch","getInvoiceLoads","rowCellPadding","headerCellSx","pt","pb","emptyMessage","showRefresh","columns","renderer","pickupCity","pickupState","pickupDate","moment","dropCity","dropState","dropDate","_ref6","modesString","standard","getParsedLoadEquipment","_ref7","weight","pounds","_ref8","emptyState","valueFormatter","visible","_ref9","Link","to","DescriptionIcon","_ref10","ReplayIcon","_Box","mt","EnhancedTable","onRefetch","Route","exact","url","callback","arguments","undefined","showTriggers","setLoading","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","res","catch","err","finally","BootstrapDialog","Dialog","padding","BootstrapDialogTitle","showClose","titleStyles","other","DialogTitle","m","IconButton","palette","grey","CloseIcon","closeCallback","closeUrl","paperProps","useTheme","fullScreen","_useMediaQuery","addEvent","removeEvent","ENHANCED_DASHBOARD","DialogContent","dividers","borderTop","Slide","preventBackdropClose","onOk","okText","onCancel","MuiDialog","DialogActions","Button","CircularIndeterminate","marginLeft","CircularProgress","StyledPagination","Pagination","StyledStack","Stack","flexWrap","TablePagination","onPageChange","count","onPageSizeChange","setLength","Array","isArray","Typography","fontSize","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","hasDelete","column","_","isFunction","bgcolor","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","Tooltip","placement","cell","hover","getTableCell","isRefetching","actions","isPaginationLoading","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","Actions","isValidElement","_Fragment","stopPropagation","ErrorOutlineIcon","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","_TableBody","_ref$current","table","calculatedHeight","offsetHeight","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","getLoads","module","success","requestGet","GET_LOADS","payload","notification","message","setAlert","search","INVOICE_LOAD_FETCHED","axios","totalPages","searchLoads","RETURNED_SEARCHED_LOADS","getState","RESET_SEARCHED_LOADS","rowsPerPage","selectLoad","input","SELECT_LOAD","addLoad","formData","post","ADD_LOAD","updateLoad","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","query","deleteLoad","load_id","DELETE_LOAD","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","cloneDeep","console","error","opts","opt","unshift","Input","multiple","labelStyle","formGrpStyle","errorText","FormGroup","marginRight","values","l"],"mappings":"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","file":"static/js/21.e3b824b6.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const value = parseInt(e.target?.value || 0)\r\n        const name = e.target?.name\r\n        if (value < 1) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) * value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)} className='deleteService'>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />} aria-describedby={'jugal'}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","// import jsPDF from \"jspdf\";\r\n// import  'jspdf-autotable'\r\nimport { Button, Dialog, DialogContent, Divider, Grid, Stack, Typography, Zoom, } from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {blue, PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport { getCheckStatusIcon } from \"../../utils/utils\";\r\n\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst config = {\r\n    rowCellPadding: \"inherit\",\r\n    columns: [\r\n        {\r\n            id: 'serviceName',\r\n            label: 'Service'\r\n        },\r\n        {\r\n            id: 'quantity',\r\n            label: 'Quanity'\r\n        },\r\n        {\r\n            id: 'price',\r\n            label: 'Price'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            label: 'Amount'\r\n        },\r\n    ]\r\n}\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    setPdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService,\r\n    notes,\r\n    setNotes\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {};\r\n\r\n\r\n    const PdfViewer = ({ pdfUrl, pdfFileName }) => {\r\n        const [pages, setPages] = useState([]);\r\n        useEffect(() => {\r\n\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js';\r\n            script.async = true;\r\n            script.onload = async () => {\r\n                // Once PDF.js script is loaded, fetch and render PDF\r\n\r\n\r\n                const blob = await fetch(`https://cors.freightdok.io/${pdfUrl}`)\r\n                    .then(response => {\r\n                        const contentType = response.headers.get('content-type');\r\n                        if (contentType.equalsIgnoreCase('application/pdf'))\r\n                            return response.blob();\r\n                        else\r\n                            return null;\r\n                    })\r\n\r\n                if (blob) {\r\n                    {\r\n                        const reader = new FileReader();\r\n                        reader.onload = () => {\r\n                            const pdf = reader.result;\r\n                            // Initialize PDF.js library\r\n                            const pdfjsLib = window['pdfjs-dist/build/pdf'];\r\n                            pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.js`;\r\n\r\n                            // Load PDF document\r\n                            pdfjsLib.getDocument({ data: pdf }).promise.then(pdfDocument => {\r\n                                const numPages = pdfDocument.numPages;\r\n                                const promises = [];\r\n                                for (let i = 1; i <= numPages; i++) {\r\n                                    promises.push(pdfDocument.getPage(i));\r\n                                }\r\n                                Promise.all(promises).then(pages => {\r\n                                    const pagePromises = pages.map(page => {\r\n                                        const viewport = page.getViewport({ scale: 2 });\r\n                                        const canvas = document.createElement('canvas');\r\n                                        const context = canvas.getContext('2d');\r\n                                        canvas.height = viewport.height;\r\n                                        canvas.width = viewport.width;\r\n\r\n                                        const renderContext = {\r\n                                            canvasContext: context,\r\n                                            viewport: viewport\r\n                                        };\r\n                                        return page.render(renderContext).promise.then(() => {\r\n                                            return canvas.toDataURL();\r\n                                        });\r\n                                    });\r\n                                    Promise.all(pagePromises).then(pageImages => {\r\n                                        setPages(pageImages);\r\n                                    });\r\n                                });\r\n                            });\r\n                        };\r\n                        reader.readAsArrayBuffer(blob);\r\n                    }\r\n                }\r\n                else {\r\n                    setPages(false)\r\n                }\r\n            };\r\n            document.body.appendChild(script);\r\n        }, [pdfUrl]);\r\n\r\n        if (pages) {\r\n            return (\r\n                <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n                    {pages.map((page, index) => (\r\n                        <img\r\n                            key={index}\r\n                            src={page}\r\n                            alt={`Page ${index + 1}`}\r\n                            style={{ position: 'absolute', top: `${index * 100}%`, left: 0, width: '100%' }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (<img className=\"printThisFull\" src={pdfUrl} alt={pdfFileName} style={{width: '100%'}} />)\r\n        }\r\n    };\r\n\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <PdfViewer pdfUrl={doc.fileLocation} pdfFileName={doc.fileName} />\r\n                    {/* <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} /> */}\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return ref.current;\r\n    }, [ref.current]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            className=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <div ref={ref} className=\"printArea\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n                    >\r\n                        <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: portrait;\\ }\\\r\n          \"}</style>\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Stack spacing={1}>\r\n                                        <Stack>\r\n                                            <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                                {'Sunny Freight'}\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack>\r\n                                        <Stack>\r\n                                            <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                                Invoice\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                        <Stack className='notesStack'>\r\n                                            <InputField label=\"Notes\" type=\"textarea\" onChange={(e) => setNotes(e.target.value)} />\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n                        <Grid xs={12} item>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item>\r\n                                    <Stack spacing={1} sx={{ p: 3 }}>\r\n                                        <Stack>\r\n                                            <Typography>Bill To:</Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                                        <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                            <Title>Load Number: </Title>\r\n                                            <Title>{loadNumber}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n                        <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                            <Stack sx={{ textAlign: \"right\" }}>\r\n                                <Title>Total: {getTotal() || '- -'}</Title>\r\n                            </Stack>\r\n                            <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                                <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                                    <InvoiceServiceWrapper\r\n                                        onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                                        deleteService={deleteService}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid xs={3} item>\r\n                                    <Typography className='notesPrintBlock'>Notes: {notes}</Typography>\r\n                                </Grid>\r\n                                <Grid xs={6} item>\r\n                                    <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'rateCon'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>\r\n                                                    Rate Con\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'pod'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>\r\n                                                    Proof Of Delivery\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'accessorials'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>Accessorials</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!accessorials.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                                    <ReactToPrint\r\n                                        content={reactToPrintContent}\r\n                                        documentTitle=\"Invoice\"\r\n                                        // onBeforeGetContent={handleOnBeforeGetContent}\r\n                                        // onBeforePrint={handleBeforePrint}\r\n                                        removeAfterPrint\r\n                                        trigger={reactToPrintTrigger}\r\n                                        pageStyle={'portrait'}\r\n                                    />\r\n                                    {/*<Button variant='contained' onClick={createPdf}>Print Invoice</Button>*/}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {docFileViewer}\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {}, history }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const invoices = useSelector((state) => state.load.invoices.data) || [],\r\n        [services, setServices] = useState([]),\r\n        [notes, setNotes] = useState(''),\r\n        data = invoices.find((invoice) => invoice._id === id);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.price) + acc, 0)\r\n        let USDollar = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        });\r\n        return USDollar.format(total.toFixed(2))\r\n    }, [services])\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                setPdf={setPdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n                notes={notes}\r\n                setNotes={setNotes}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst Container = styled(Grid)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 'auto'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveToMyLoads'),\r\n        statuses = LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={config}>\r\n        <Container container component='form' spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    showNone={true}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Container>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;","import React, {useEffect, Fragment} from 'react';\r\nimport {Box, Button} from \"@mui/material\";\r\nimport {resetLoadsSearch} from '../../actions/load.js';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getInvoiceLoads} from \"../../actions/load\";\r\nimport {Link, Route, useRouteMatch} from \"react-router-dom\";\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport {getParsedLoadEquipment} from \"../../views/openBoard/constants\";\r\nimport MoveToMyLoads from \"./MoveToMyLoads\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\n\r\n\r\nexport default function InvoicesList({listBarType}) {\r\n    const {edit = false} = UserSettings.getUserPermissionsByDashboardId('invoices') || {};\r\n    const dispatch = useDispatch();\r\n    const {path} = useRouteMatch();\r\n    const {data = [], page, limit, loading} = useSelector(state => state.load.invoices);\r\n    const loads = useSelector(state => state.load.loads);\r\n\r\n    useEffect(() => {\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        getInvoices();\r\n        // dispatch(getCHLoads(true));\r\n        return () => {\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        }\r\n    }, []);\r\n\r\n    const getInvoices = () => {\r\n        dispatch(getInvoiceLoads());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInvoices();\r\n    }, [loads]);\r\n\r\n    const config = {\r\n        rowCellPadding: \"normal\",\r\n        headerCellSx: {pt: 1, pb: 1},\r\n        emptyMessage: 'No Invoices found',\r\n        showRefresh: true,\r\n        page,\r\n        limit,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({row: {pickup = []} = {}}) => {\r\n                    const [{pickupDate = ''}] = pickup;\r\n                    return moment(pickupDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({row: {drop = []} = {}}) => {\r\n                    const [{dropDate = ''}] = drop;\r\n                    return moment(dropDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({row}) => {\r\n                    const {modesString = '', standard = ''} = getParsedLoadEquipment(row) || {}\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"weight\",\r\n                label: \"Weight\",\r\n                renderer: ({row}) => {\r\n                    let {weight: {pounds = \"\"} = {}} = row || {};\r\n                    if (pounds) pounds = pounds + \" lbs\";\r\n                    return <Fragment>{pounds}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({row}) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--',\r\n                valueFormatter: (value) => value ? '$' + value : ''\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<DescriptionIcon/>}\r\n                    >\r\n                        Create Invoice\r\n                    </Button>\r\n                }\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/moveToMyLoads/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<ReplayIcon/>}\r\n                    >\r\n                        My loads\r\n                    </Button>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <Fragment>\r\n                <EnhancedTable config={config} data={data} loading={loading} onRefetch={getInvoices}/>\r\n                {edit && <Route path={path + '/moveToMyLoads/:id'}\r\n                                render={(props) => <MoveToMyLoads onCloseUrl={path}\r\n                                                                  getInvoices={getInvoices} {...props} />}/>}\r\n                {edit && <Route path={path + '/:id'} exact component={Invoice} onCloseUrl={path}/>}\r\n            </Fragment>\r\n        </Box>\r\n    )\r\n}","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport { requestDelete, requestGet, requestPatch } from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 10, module = \"\") =>\r\n    async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1\r\n            }&limit=${limit}&module=${module}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n    async (dispatch) => {\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { data: [], loading: true },\r\n      });\r\n\r\n      try {\r\n        const url = `/api/load/invoice_loads?page=${page + 1\r\n          }&limit=${limit}&search=${search}`;\r\n        const response = await axios.get(url);\r\n        const { loads, total, totalPages } = response.data;\r\n        dispatch({\r\n          type: INVOICE_LOAD_FETCHED,\r\n          payload: { data: loads, page, limit, search, total, totalPages, loading: false },\r\n        });\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/load\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_LOAD,\r\n      payload: res.data,\r\n    });\r\n\r\n    notification(\"Load Created\")\r\n    if (callback) {\r\n      callback(res.status === 200, res.data)\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;"],"sourceRoot":""}