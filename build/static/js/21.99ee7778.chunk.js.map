{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/InvoicesList.js","components/Atoms/Modal.js","hooks/useMutation.js","components/Atoms/Dialog.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","hooks/useFetch.js","hooks/useFetchWithSearchPagination.js","components/invoices/MoveToMyLoads.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","_e$target","_e$target2","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref2","handleClose","anchorEl","onAddNewService","list","setList","useState","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref3","services","setAnchorEl","React","servicesComp","useMemo","s","event","currentTarget","Title","variant","_Typography","fontWeight","Temporray","forwardRef","props","ref","pdf","setNotes","brokerage","loadNumber","getTotal","addService","notes","rateConfirmation","proofDelivery","accessorials","reactToPrintContent","reactToPrintTrigger","docFileViewer","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","height","alignItems","gap","htmlFor","background","borderRadius","cursor","accept","style","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","pageStyle","onPrintError","console","error","onBeforePrint","Promise","resolve","setTimeout","log","fonts","family","source","DialogComponent","transition","useRef","pickup","drop","rate","bucketFiles","PdfViewer","pdfUrl","pdfFileName","pages","setPages","useEffect","script","document","createElement","src","async","onload","blob","fetch","then","response","headers","get","equalsIgnoreCase","reader","FileReader","result","pdfjsLib","window","GlobalWorkerOptions","workerSrc","version","getDocument","promise","pdfDocument","numPages","promises","i","push","getPage","all","pagePromises","page","viewport","getViewport","scale","canvas","context","getContext","renderContext","canvasContext","render","toDataURL","pageImages","readAsArrayBuffer","body","appendChild","_Fragment","position","minHeight","alt","_Box","objectFit","doc","fileLocation","fileName","useCallback","current","_Dialog","PaperProps","TransitionComponent","maxWidth","_DialogContent","Invoice","_ref4","match","params","setOpen","setPdf","setServices","useSelector","state","load","invoices","useFetch","GET_LOAD_HISTORY","Transition","history","useHistory","_Zoom","onExited","goBack","total","reduce","acc","service","Intl","NumberFormat","currency","format","obj","_ref5","row","clone","splice","modalConfig","title","InvoicesList","edit","UserSettings","getUserPermissionsByDashboardId","path","useRouteMatch","_data","loading","limit","onPageChange","onLimitChange","refetch","isPaginationLoading","isRefetching","useFetchWithSearchPagination","loads","config","rowCellPadding","headerCellSx","pt","pb","emptyMessage","showRefresh","count","columns","renderer","pickupCity","pickupState","pickupDate","moment","dropCity","dropState","dropDate","user","firstName","lastName","valueFormatter","join","_ref6","emptyState","getDollarPrefixedPrice","visible","_ref7","component","Link","to","_id","DescriptionIcon","_ref8","ReplayIcon","EnhancedTable","onRefetch","Route","MoveToMyLoads","onCloseUrl","getInvoices","exact","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","showClose","titleStyles","other","DialogTitle","m","IconButton","left","top","palette","grey","CloseIcon","Modal","closeCallback","closeUrl","paperProps","preventBackdropClick","useTheme","fullScreen","_useMediaQuery","breakpoints","down","arguments","undefined","addEvent","removeEvent","ENHANCED_DASHBOARD","DialogContent","dividers","borderTop","useMutation","url","callback","showTriggers","options","setLoading","mutation","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","res","catch","err","finally","Slide","preventBackdropClose","onOk","okText","onCancel","MuiDialog","DialogActions","Button","StyledPagination","Pagination","StyledStack","Stack","flexWrap","TablePagination","isLoading","setLength","Array","isArray","Typography","fontSize","Select","disabled","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","hasDelete","column","_","isFunction","bgcolor","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","Tooltip","placement","cell","hover","preventDefault","getTableCell","actions","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onPageSizeChange","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","Actions","isValidElement","stopPropagation","ErrorOutlineIcon","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","_TableBody","_ref$current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","getLoader","innerHeight","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","cloneDeep","opts","opt","unshift","Input","multiple","labelStyle","formGrpStyle","errorText","FormGroup","marginRight","values","l","setData","setError","setIsRefetching","requestCall","requestGet","debounceTime","setPage","setLimit","searchQuery","setSearchQuery","setIsPaginationLoading","isSearching","setIsSearching","isInitialLoad","fetchData","debouncedSearch","debounce","cancel","message","handleSearch","Container","up","getLoadStatuses","setValue","statuses","LOAD_STATUSES","status","onSubmit","replace","showNone","LoadingButton","fullWidth","loadingText"],"mappings":"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","file":"static/js/21.99ee7778.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const value = parseInt(e.target?.value || 0)\r\n        const name = e.target?.name\r\n        if (value < 1) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) * value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)} className='deleteService'>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService key={index} {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />} aria-describedby={'jugal'}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","// import jsPDF from \"jspdf\";\r\n// import  'jspdf-autotable'\r\nimport {Box, Button, Dialog, DialogContent, Divider, Grid, Stack, Typography, Zoom,} from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {blue} from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport { getCheckStatusIcon } from \"../../utils/utils\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {GET_LOAD_HISTORY} from \"../../config/requestEndpoints\";\r\n\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst config = {\r\n    rowCellPadding: \"inherit\",\r\n    columns: [\r\n        {\r\n            id: 'serviceName',\r\n            label: 'Service'\r\n        },\r\n        {\r\n            id: 'quantity',\r\n            label: 'Quanity'\r\n        },\r\n        {\r\n            id: 'price',\r\n            label: 'Price'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            label: 'Amount'\r\n        },\r\n    ]\r\n}\r\n\r\nconst Temporray = React.forwardRef((props, ref) => {\r\n    const {pdf,\r\n        setNotes,\r\n        brokerage,\r\n        loadNumber,\r\n        getTotal,\r\n        onChangeService,\r\n        services,\r\n        addService,\r\n        deleteService,\r\n        notes,\r\n        rateConfirmation,\r\n        proofDelivery,\r\n        accessorials,\r\n        reactToPrintContent,\r\n        reactToPrintTrigger,\r\n        docFileViewer} = props\r\n    return <div ref={ref} className=\"printArea\">\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n        >\r\n            <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: portrait;\\ }\\\r\n          \"}</style>\r\n            <Grid item xs={12} sx={{ p: 3 }}>\r\n                <Grid container justifyContent={\"space-between\"}>\r\n                    <Grid item sx={{ flexGrow: 1 }}>\r\n                        <Stack spacing={1}>\r\n                            <Stack>\r\n                                <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                    {'Sunny Freight'}\r\n                                </Typography>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack>\r\n                            <Stack>\r\n                                <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                    Invoice\r\n                                </Typography>\r\n                            </Stack>\r\n                            <Stack className='notesStack'>\r\n                                <InputField label=\"Notes\" type=\"textarea\" onChange={(e) => setNotes(e.target.value)} />\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n            <Grid xs={12} item>\r\n                <Grid container justifyContent={\"space-between\"}>\r\n                    <Grid item>\r\n                        <Stack spacing={1} sx={{ p: 3 }}>\r\n                            <Stack>\r\n                                <Typography>Bill To:</Typography>\r\n                            </Stack>\r\n                            <Stack>\r\n                                <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                            <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                <Title>Load Number: </Title>\r\n                                <Title>{loadNumber}</Title>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n            <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                <Stack sx={{ textAlign: \"right\" }}>\r\n                    <Title>Total: {getTotal() || '- -'}</Title>\r\n                </Stack>\r\n                <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                    <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                        <InvoiceServiceWrapper\r\n                            onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                            deleteService={deleteService}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={3} item>\r\n                        <Typography className='notesPrintBlock'>Notes: {notes || 'N.A'}</Typography>\r\n                    </Grid>\r\n                    <Grid xs={6} item>\r\n                        <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'rateCon'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>\r\n                                        Rate Con\r\n                                    </Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                </div>\r\n                            </Stack>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'pod'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>\r\n                                        Proof Of Delivery\r\n                                    </Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                </div>\r\n                            </Stack>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'accessorials'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>Accessorials</Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!accessorials.length)}\r\n                                </div>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                        <ReactToPrint\r\n                            content={reactToPrintContent}\r\n                            documentTitle=\"Invoice\"\r\n                            removeAfterPrint\r\n                            trigger={reactToPrintTrigger}\r\n                            pageStyle={'portrait'}\r\n                            onPrintError={(e) => console.error(\"React to print error\", e)}\r\n                            onBeforePrint={() => new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    console.log('waiting for print')\r\n                                    resolve(\"\")\r\n                                }, 1000)\r\n                            })}\r\n                            fonts={[{family: \"Open Sans\", source:\"\"}]}\r\n                        />\r\n                        {/*<Button variant='contained' onClick={createPdf}>Print Invoice</Button>*/}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        {docFileViewer}\r\n    </div>\r\n})\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService,\r\n    notes,\r\n    setNotes\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {};\r\n\r\n\r\n    const PdfViewer = ({ pdfUrl, pdfFileName }) => {\r\n        const [pages, setPages] = useState([]);\r\n        useEffect(() => {\r\n\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js';\r\n            script.async = true;\r\n            script.onload = async () => {\r\n                // Once PDF.js script is loaded, fetch and render PDF\r\n\r\n\r\n                const blob = await fetch(`https://cors.freightdok.io/${pdfUrl}`)\r\n                    .then(response => {\r\n                        const contentType = response.headers.get('content-type');\r\n                        if (contentType.equalsIgnoreCase('application/pdf'))\r\n                            return response.blob();\r\n                        else\r\n                            return null;\r\n                    })\r\n\r\n                if (blob) {\r\n                    {\r\n                        const reader = new FileReader();\r\n                        reader.onload = () => {\r\n                            const pdf = reader.result;\r\n                            // Initialize PDF.js library\r\n                            const pdfjsLib = window['pdfjs-dist/build/pdf'];\r\n                            pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.js`;\r\n\r\n                            // Load PDF document\r\n                            pdfjsLib.getDocument({ data: pdf }).promise.then(pdfDocument => {\r\n                                const numPages = pdfDocument.numPages;\r\n                                const promises = [];\r\n                                for (let i = 1; i <= numPages; i++) {\r\n                                    promises.push(pdfDocument.getPage(i));\r\n                                }\r\n                                Promise.all(promises).then(pages => {\r\n                                    const pagePromises = pages.map(page => {\r\n                                        const viewport = page.getViewport({ scale: 2 });\r\n                                        const canvas = document.createElement('canvas');\r\n                                        const context = canvas.getContext('2d');\r\n                                        canvas.height = viewport.height;\r\n                                        canvas.width = viewport.width;\r\n\r\n                                        const renderContext = {\r\n                                            canvasContext: context,\r\n                                            viewport: viewport\r\n                                        };\r\n                                        return page.render(renderContext).promise.then(() => {\r\n                                            return canvas.toDataURL();\r\n                                        });\r\n                                    });\r\n                                    Promise.all(pagePromises).then(pageImages => {\r\n                                        setPages(pageImages);\r\n                                    });\r\n                                });\r\n                            });\r\n                        };\r\n                        reader.readAsArrayBuffer(blob);\r\n                    }\r\n                }\r\n                else {\r\n                    setPages(false)\r\n                }\r\n            };\r\n            document.body.appendChild(script);\r\n        }, [pdfUrl]);\r\n\r\n        if (pages) {\r\n            return (\r\n                <>\r\n                    <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n                        {pages.map((page, index) => (\r\n                            <img\r\n                                key={index}\r\n                                src={page}\r\n                                alt={`Page ${index + 1}`}\r\n                                style={{ width: '100%', /* position: 'absolute', top: `${index * 100}%`, left: 0,*/ }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return (<>\r\n                <Box sx={{ position: 'relative', minHeight: '100vh', display: 'flex', justifyContent: 'center' }}>\r\n                    <img className=\"printThisFull\" src={pdfUrl} alt={pdfFileName} style={{width: '1100px', height: '1200px', objectFit: 'contain'}} />\r\n                </Box>\r\n            </>)\r\n        }\r\n    };\r\n\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <PdfViewer pdfUrl={doc.fileLocation} pdfFileName={doc.fileName} />\r\n                    {/* <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} /> */}\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return ref.current;\r\n    }, [ref.current]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            className=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <Temporray\r\n                    ref={ref}\r\n                    pdf={pdf}\r\n                    setNotes={setNotes}\r\n                    brokerage={brokerage}\r\n                    loadNumber={loadNumber}\r\n                    getTotal={getTotal}\r\n                    onChangeService={onChangeService}\r\n                    services={services}\r\n                    addService={addService}\r\n                    deleteService={deleteService}\r\n                    notes={notes}\r\n                    rateConfirmation={rateConfirmation}\r\n                    proofDelivery={proofDelivery}\r\n                    accessorials={accessorials}\r\n                    reactToPrintContent={reactToPrintContent}\r\n                    docFileViewer={docFileViewer}\r\n                    reactToPrintTrigger={reactToPrintTrigger}\r\n                />\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {} }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const invoices = useSelector((state) => state.load.invoices.data) || [],\r\n        [services, setServices] = useState([]),\r\n        [notes, setNotes] = useState(''),\r\n        {data: {data = {}} = {}} = useFetch(GET_LOAD_HISTORY + `/${id}`);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.price) + acc, 0)\r\n        let USDollar = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        });\r\n        return USDollar.format(total.toFixed(2))\r\n    }, [services])\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    // const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n                notes={notes}\r\n                setNotes={setNotes}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import React, {Fragment} from 'react';\r\nimport {Box, Button, IconButton} from \"@mui/material\";\r\nimport {Link, Route, useRouteMatch} from \"react-router-dom\";\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport MoveToMyLoads from \"./MoveToMyLoads\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\nimport {getDollarPrefixedPrice} from \"../../utils/utils\";\r\nimport useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\n\r\nconst modalConfig = {\r\n    title: 'Move invoice'\r\n}\r\nexport default function InvoicesList() {\r\n    const {edit = false} = UserSettings.getUserPermissionsByDashboardId('invoices') || {};\r\n    const {path} = useRouteMatch();\r\n    const {\r\n            data: _data, loading, page, limit, onPageChange, onLimitChange, refetch,\r\n            isPaginationLoading, isRefetching\r\n        } = useFetchWithSearchPagination('/api/load/invoice_loads'),\r\n        {loads, total} = _data || {};\r\n\r\n\r\n    const config = {\r\n        rowCellPadding: \"normal\",\r\n        headerCellSx: {pt: 1, pb: 1},\r\n        emptyMessage: 'No Invoices found',\r\n        showRefresh: true,\r\n        page,\r\n        limit,\r\n        count: total,\r\n        onPageChange,\r\n        onLimitChange,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({row: {pickup = []} = {}}) => {\r\n                    const [{pickupDate = ''}] = pickup;\r\n                    return moment(pickupDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({row: {drop = []} = {}}) => {\r\n                    const [{dropDate = ''}] = drop;\r\n                    return moment(dropDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"assigned\",\r\n                label: \"Assigned To\",\r\n                renderer: ({row}) => {\r\n                    const {user = {}} = {} = row || {},\r\n                        {name = '', firstName, lastName} = user || {};\r\n                    return name || `${firstName || '--'} ${lastName || ''}`\r\n                }\r\n            },\r\n            {\r\n                id: \"accessorials\",\r\n                label: \"Accessorials\",\r\n                valueFormatter: (value) => (value || []).join(', ')\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({row}) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--',\r\n                valueFormatter: (value) => value ? getDollarPrefixedPrice(value) : ''\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<DescriptionIcon/>}\r\n                    >\r\n                        Create Invoice\r\n                    </Button>\r\n                }\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <IconButton\r\n                        component={Link}\r\n                        to={path + '/moveToMyLoads/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <ReplayIcon/>\r\n                    </IconButton>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Box sx={{height: 'inherit'}}>\r\n            <Fragment>\r\n                <EnhancedTable config={config} data={loads} loading={loading} onRefetch={refetch}\r\n                               isRefetching={isRefetching}\r\n                               isPaginationLoading={isPaginationLoading}\r\n                />\r\n                {edit && <Route path={path + '/moveToMyLoads/:id'}\r\n                                render={(props) => <MoveToMyLoads onCloseUrl={path}\r\n                                                                  getInvoices={refetch}\r\n                                                                  modalConfig={modalConfig} {...props} />}/>}\r\n                {edit && <Route path={path + '/:id'} exact component={Invoice} onCloseUrl={path}/>}\r\n            </Fragment>\r\n        </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onLimitChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onLimitChange === 'function'){\r\n            onLimitChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            onLimitChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onLimitChange={onLimitChange || onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport _ from 'lodash'\r\nimport {requestGet} from \"../utils/request\";\r\n\r\nconst useFetchWithSearchPagination = (url, debounceTime = 500) => {\r\n    const [data, setData] = useState([]),\r\n        [loading, setLoading] = useState(false),\r\n        [page, setPage] = useState(1),\r\n        [limit, setLimit] = useState(100),\r\n        [searchQuery, setSearchQuery] = useState(''),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false),\r\n        [isSearching, setIsSearching] = useState(false),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        isInitialLoad = useRef(true);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url, page, limit]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const debouncedSearch = _.debounce(() => {\r\n            if (!isInitialLoad.current) {\r\n                setIsSearching(true);\r\n                fetchData();\r\n            }\r\n        }, debounceTime);\r\n\r\n        debouncedSearch();\r\n\r\n        return debouncedSearch.cancel;\r\n    }, [searchQuery, debounceTime]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        requestGet({uri: `${url}?page=${page}&search=${searchQuery}&limit=${limit}`})\r\n            .then(res => {\r\n                const {data} = res;\r\n                setData(data);\r\n            })\r\n            .catch(e => {\r\n                console.error(e.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsPaginationLoading(false);\r\n                setIsSearching(false);\r\n                setIsRefetching(false);\r\n                if (isInitialLoad.current) {\r\n                    isInitialLoad.current = false;\r\n                }\r\n            })\r\n    }, [url, page, limit, searchQuery]);\r\n\r\n    const onPageChange = useCallback((e, pgNum) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(pgNum);\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(({value}) => {\r\n        setSearchQuery(value);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const onLimitChange = useCallback(({value}) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n        setLimit(value);\r\n    }, [])\r\n\r\n    const refetch = () => {\r\n        setPage(1);\r\n        setIsRefetching(true);\r\n        fetchData();\r\n    };\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        handleSearch,\r\n        refetch,\r\n        onLimitChange,\r\n        searchQuery,\r\n        isPaginationLoading,\r\n        isSearching,\r\n        isRefetching\r\n    };\r\n};\r\n\r\nexport default useFetchWithSearchPagination","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst Container = styled(Grid)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 'auto'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, refetch, getLoadStatuses = undefined, modalConfig, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveToMyLoads'),\r\n        statuses = getLoadStatuses ? getLoadStatuses(LOAD_STATUSES) : LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices && getInvoices();\r\n            refetch && refetch();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={modalConfig || config}>\r\n        <Container container component='form' spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    showNone={true}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Container>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;"],"sourceRoot":""}