{"version":3,"sources":["actions/users.js","components/users/UserForm.js","components/users/UsersList.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx"],"names":["fetchUsers","page","arguments","length","undefined","limit","async","dispatch","type","FETCH_USERS","success","data","requestGet","uri","concat","notification","message","FETCH_USERS_SUCCEED","payload","err","FETCH_USERS_FAILED","openModal","OPEN_USER_MODAL","initialState","email","password","role","UserForm","mutation","loading","isSaving","useMutation","form","setForm","useState","open","error","user","useSelector","state","users","updateUser","isSavingUpdate","_id","auth","allRoles","roles","useDispatch","userRoles","setUserRoles","add","UserSettings","getUserPermissionsByDashboardId","useEffect","equalsIgnoreCase","ROLES","superadmin","newRoles","filter","item","handleClose","rolePermissionId","f","handleChange","_ref","name","value","RESET_SELECTED_USER","afterSubmit","_ref2","_jsxs","_Fragment","children","_jsx","Button","color","variant","onClick","handleClickOpen","disabled","Dialog","fullWidth","maxWidth","onClose","PaperProps","sx","width","DialogTitle","id","textAlign","PRIMARY_BLUE","style","DialogContent","p","overflow","className","noValidate","onSubmit","e","preventDefault","roleName","find","_role","dataToUpdate","getDiff","local","actual","diffWithVal","localKeys","Object","keys","key","alert","isEmailValid","Grid","container","spacing","direction","Input","label","onChange","autoFocus","Password","Select","options","labelKey","valueKey","xs","justifyContent","display","LoadingButton","isLoading","delete","hasDeletePermission","edit","UsersList","list","total","afterDelete","config","emptyMessage","count","onPageChange","handleChangePage","event","newPage","rowCellPadding","showRefresh","onPageSizeChange","columns","emptyState","renderer","_ref3","row","firstName","lastName","valueFormatter","getRoleNameString","_ref4","Fragment","_Button","mr","SELECT_USER_TO_EDIT","showDelete","afterSuccessCb","Actions","_Box","EnhancedTable","onRefetch","actions","CircularIndeterminate","props","height","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","Typography","fontSize","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","bind","cell","i","get","hover","cursor","getTableCell","_ref6","history","isRefetching","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","ref","React","useRef","isValidElement","url","push","stopPropagation","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","current","table","calculatedHeight","offsetHeight","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","window","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo"],"mappings":"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","file":"static/js/30.2a671a8f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    FETCH_USERS_SUCCEED,\r\n    FETCH_USERS_FAILED,\r\n    FETCH_USERS,\r\n    ADMIN_REG_USER,\r\n    ADMIN_REG_USER_FAILED,\r\n    SELECT_USER_TO_EDIT,\r\n    RESET_SELECTED_USER,\r\n    INIT_ADMIN_UPDATE_USER,\r\n    ADMIN_UPDATE_USER_SUCCEED,\r\n    ADMIN_UPDATE_USER_FAILED,\r\n    ADMIN_DELETE_USER_FAILED,\r\n    OPEN_USER_MODAL,\r\n    CLOSE_USER_MODAL\r\n} from './types';\r\nimport {notification} from \"./alert\";\r\nimport {requestDelete, requestGet} from \"../utils/request\";\r\n\r\nexport const callApi = () => ({\r\n    type: FETCH_USERS\r\n});\r\n\r\nexport const fetchUsers = (page = 1, limit = 5) => async dispatch => {\r\n    try {\r\n        dispatch({type: FETCH_USERS});\r\n        const {success, data} = await requestGet({uri: `/api/users?page=${page}&limit=${limit}`});\r\n        if(!success){\r\n            notification(data.message, 'error');\r\n        }\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCEED,\r\n            payload: data || []\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FETCH_USERS_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = ({email, password, role}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_REG_USER});\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password, role});\r\n        const api = await axios.post('/api/users', body, config);\r\n        if (api.status === 200) {\r\n            notification(\"User Added\")\r\n            const {limit} = getState().users;\r\n            dispatch(fetchUsers(0, +limit));\r\n        }\r\n    } catch (err) {\r\n        let errorToSend = err.message;\r\n        if (err.response && err.response.data) {\r\n            errorToSend = err.response.data.errors[0].msg\r\n        }\r\n        dispatch({\r\n            type: ADMIN_REG_USER_FAILED,\r\n            payload: errorToSend\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUserToEdit = (user) => ({\r\n    type: SELECT_USER_TO_EDIT,\r\n    payload: user\r\n});\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n    try {\r\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\r\n        const res = await axios.put(`/api/users/${id}`, user);\r\n        if(res.status === 200){\r\n            notification('User Updated')\r\n            dispatch({\r\n                type: ADMIN_UPDATE_USER_SUCCEED,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_UPDATE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, callback) => async (dispatch, getState) => {\r\n    try {\r\n        const {data: data = '', success} = await requestDelete({uri: `/api/users/${id}`});\r\n        if(success) {\r\n            const {page, limit} = getState().users;\r\n            notification(data);\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n        else {\r\n            notification(data.message, 'error')\r\n        }\r\n        if(callback) callback({success, data});\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_DELETE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetUserSelected = () => ({type: RESET_SELECTED_USER});\r\n\r\nexport const openModal = () => ({type: OPEN_USER_MODAL});\r\nexport const closeModal = () => ({type: CLOSE_USER_MODAL});\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetUserSelected,\r\n    fetchUsers,\r\n    openModal,\r\n} from \"../../actions/users\";\r\nimport {PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid} from \"../../utils/utils\";\r\nimport {ROLES} from \"../constants\";\r\nimport {Input, LoadingButton, Password, Select} from \"../Atoms\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"dispatch\",\r\n};\r\n\r\n// const ADD_USERS_ROLES_PERMITTED = [ROLES.superadmin, ROLES.admin, ROLES.dispatch];\r\n\r\nconst UserForm = () => {\r\n    const {mutation, loading: isSaving} = useMutation('/api/users')\r\n    const [form, setForm] = useState({...initialState});\r\n    const {loading, open, error, user, page, limit} = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const {mutation: updateUser, loading: isSavingUpdate} = useMutation(`/api/users/${user?._id}`)\r\n    const {user: auth = {}, allRoles} = useSelector((state) => state.auth);\r\n    const {roles = []} = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [userRoles, setUserRoles] = useState();\r\n    const {add = false} = UserSettings.getUserPermissionsByDashboardId('users');\r\n\r\n    useEffect(() => {\r\n        if(auth?.role.equalsIgnoreCase(ROLES.superadmin)) {\r\n            setUserRoles(roles)\r\n        } else {\r\n            const newRoles = roles.filter(\r\n                (item) =>\r\n                    item === \"driver\" ||\r\n                    item === \"afterhours\" ||\r\n                    item === \"load planner\" ||\r\n                    item === \"support\" ||\r\n                    item === 'dispatch' ||\r\n                    item === 'ownerOperator'\r\n            );\r\n            setUserRoles(newRoles);\r\n        }\r\n    }, [roles]);\r\n\r\n    useEffect(() => {\r\n        if (!open) handleClose();\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (+page === 0 && open) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const {email, rolePermissionId} = user;\r\n            setForm((f) => ({...f, email, role: rolePermissionId}));\r\n            dispatch(openModal());\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChange = ({name, value}) => {\r\n        setForm((f) => ({...f, [name]: value}));\r\n    };\r\n    const handleClose = () => {\r\n        setForm({...initialState});\r\n        dispatch(resetUserSelected());\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const getDiff = (local, actual) => {\r\n        const diffWithVal = {};\r\n        const localKeys = Object.keys(local);\r\n        for (let key of localKeys) {\r\n            if (key !== \"password\" && actual[key] !== local[key])\r\n                diffWithVal[key] = local[key];\r\n            if (key === \"password\" && local[key]) diffWithVal[key] = local[key];\r\n        }\r\n        return diffWithVal;\r\n    };\r\n\r\n    function afterSubmit({success, data}) {\r\n        if (success) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n            notification((user._id ? 'Updated ' : 'Saved ') + 'Successfully');\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {email, password, role} = form;\r\n        const {_id, roleName} = allRoles.find(_role => _role._id === role) || {};\r\n        if (!loading) {\r\n            if (!user) {\r\n                if (!email || !password || !role)\r\n                    return alert(\"All fields are required\");\r\n                else if (!isEmailValid(email)) {\r\n                    return alert('Email is not valid');\r\n                } else if (password.length < 6) {\r\n                    return alert('Please enter password with 6 or more characters');\r\n                }\r\n\r\n                await mutation({...form, rolePermissionId: _id, role: roleName}, '', afterSubmit);\r\n            } else {\r\n                const dataToUpdate = getDiff(form, user);\r\n                await updateUser({...dataToUpdate, rolePermissionId: role, role: roleName}, 'put', afterSubmit);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"primary\"\r\n                variant={'contained'}\r\n                onClick={handleClickOpen}\r\n                disabled={!add}\r\n            >\r\n                Add User\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={false}\r\n                maxWidth={\"md\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 400\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\" sx={{textAlign: 'center', color: PRIMARY_BLUE}}>\r\n                    {user ? \"Update\" : \"Add\"} User\r\n                </DialogTitle>\r\n                {error ? <p style={{textAlign: \"center\"}}>{error}</p> : \"\"}\r\n                <DialogContent sx={{p: 0, overflow: 'hidden'}}>\r\n                    <div className=\"\">\r\n                        <form noValidate onSubmit={onSubmit}>\r\n                            <Grid container spacing={2} direction={'column'} sx={{p: 3}}>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.email}\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Password\r\n                                        name={\"password\"}\r\n                                        label={\"Password\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.password}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Select\r\n                                        onChange={handleChange}\r\n                                        label={\"Role\"}\r\n                                        name=\"role\"\r\n                                        value={form.role}\r\n                                        options={allRoles}\r\n                                        labelKey='roleName'\r\n                                        valueKey='_id'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} justifyContent='center' display={'flex'}>\r\n                                    <LoadingButton\r\n                                        isLoading={isSaving || isSavingUpdate}\r\n                                        className=\"\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsers, selectUserToEdit} from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\n\r\nconst {delete: hasDeletePermission, edit} = UserSettings.getUserPermissionsByDashboardId('users');\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page = 1, limit = 10, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage, +limit));\r\n    };\r\n\r\n    const onPageSizeChange = ({value}) => {\r\n        dispatch(fetchUsers(1, value));\r\n    };\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users found',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        showRefresh: true,\r\n        onPageSizeChange,\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '', firstName, lastName } }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role',\r\n                valueFormatter: getRoleNameString\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role, rolePermissionId } = {} }) => {\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        <Button variant='contained' sx={{mr: 1}} disabled={!edit} onClick={() => {\r\n                            dispatch(selectUserToEdit({ _id, email, role, rolePermissionId }))\r\n                        }}>\r\n                            Update\r\n                        </Button>\r\n                        <Button variant='contained' disabled={!hasDeletePermission} color='error' onClick={showDelete({\r\n                            message: 'Are you sure you want to delete '+ email + '?',\r\n                            uri: `/api/users/${_id}`,\r\n                            afterSuccessCb: afterDelete\r\n                        })}>\r\n                            Delete\r\n                        </Button>\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    const Actions = () => {\r\n        return <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n            <UserForm />\r\n        </Box>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} onRefetch={() => dispatch(fetchUsers(+page, +limit))} actions={<Actions />}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, []);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n"],"sourceRoot":""}