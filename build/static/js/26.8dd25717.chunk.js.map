{"version":3,"sources":["components/auth/signUpWithFMCSA/Support.js","components/Atoms/form/Input.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","components/auth/signUpWithFMCSA/FMCSASignup.js"],"names":["Support","formData","setFormData","useState","errors","setErrors","isSuccess","setIsSuccess","onChange","_ref2","name","value","_jsx","className","children","_jsxs","_Box","style","verticalAlignStyle","CompanyText","mb","cursor","_Grid","container","component","gap","onSubmit","e","preventDefault","email","dot","phoneNumber","isEmailValid","isPhoneValid","Number","signupSupport","then","_ref","success","data","notification","message","sx","flex","width","SuccessComponent","_Fragment","item","xs","Input","label","fullWidth","InputProps","startAdornment","_InputAdornment","position","multiline","rows","textAlign","_Button","type","variant","Link","to","LOGIN_LINK","InputFieldPure","errorText","handleBlur","handleChange","hasError","readOnly","inputProps","helperText","rest","_FormControl","_TextField","error","onBlur","size","InputField","memo","props","classNameRoot","isCapitalize","trimValue","target","capitalize","trim","max","min","_","isFunction","styled","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","classes","composeClasses","generateUtilityClass","as","clsx","createStack","icon","getCheckStatusIcon","_Stack","justifyContent","_Typography","align","fontWeight","FMCSASignup","form","setForm","setError","location","state","content","carrier","legalName","allowedToOperate","dotNumber","phyCity","phyState","phyZipcode","phyCountry","telephone","Redirect","FEDERAL_SIGNUP_LINK","color","fontSize","textFormatter","async","body","fmcsaDetails","requestPost","uri","placeholder","SIGNUP_SUPPORT"],"mappings":"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","file":"static/js/26.8dd25717.chunk.js","sourcesContent":["import CompanyText from \"../../Atoms/CompanyText\";\r\nimport React, { useState } from \"react\";\r\nimport { Box, Button, Grid, InputAdornment } from \"@mui/material\";\r\nimport Input from \"../../Atoms/form/Input\";\r\nimport { isEmailValid, isPhoneValid, verticalAlignStyle } from \"../../../utils/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN_LINK } from \"../../constants\";\r\nimport { signupSupport } from \"../../../actions/auth\";\r\nimport { notification } from \"../../../actions/alert\";\r\nimport { SuccessComponent } from \"./FMCSASignup\";\r\n\r\nconst Support = () => {\r\n    const [formData, setFormData] = useState({})\r\n    const [errors, setErrors] = useState({})\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const { email, dot = '', phoneNumber = '' } = formData;\r\n        if (!isEmailValid(email)) {\r\n            setErrors({ ...errors, email: 'Invalid Email' })\r\n        }\r\n        if (!isPhoneValid(phoneNumber)) {\r\n            setErrors({ ...errors, phoneNumber: 'Invalid Phone Number' })\r\n        }\r\n        if (!Number(dot)) {\r\n            setErrors({ ...errors, dot: 'Invalid DOT#' })\r\n        } else {\r\n            signupSupport(formData)\r\n                .then(({ success, data }) => {\r\n                    if (success) {\r\n                        setIsSuccess(true);\r\n                    } else {\r\n                        notification(data.message || 'Something went wrong', 'error')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    function onChange({ name, value }) {\r\n        setFormData({ ...formData, [name]: value });\r\n        setErrors({ ...errors, [name]: '' })\r\n    }\r\n\r\n    return <section className='login'>\r\n        <Box className='auth-wrapper auth-inner' style={verticalAlignStyle}>\r\n            <CompanyText style={{ mb: 3, cursor: 'default' }} />\r\n            <Grid container component='form' gap={2} onSubmit={onSubmit} sx={{\r\n                flex: 1,\r\n                '.MuiFormControl-root': { width: '100%' }\r\n            }}>\r\n                {isSuccess ? <SuccessComponent /> : <>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={'email'}\r\n                            label={'Email'}\r\n                            onChange={onChange}\r\n                            fullWidth\r\n                            errors={errors}\r\n                            value={formData['email']}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={'phoneNumber'}\r\n                            label={'Phone Number'}\r\n                            fullWidth\r\n                            errors={errors}\r\n                            // type='number'\r\n                            value={formData['phoneNumber']}\r\n                            onChange={onChange}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">+1</InputAdornment>\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={'dot'}\r\n                            label={'DOT#'}\r\n                            fullWidth\r\n                            errors={errors}\r\n                            value={formData['dot']}\r\n                            onChange={onChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={'message'}\r\n                            label={'Message'}\r\n                            fullWidth\r\n                            errors={errors}\r\n                            multiline\r\n                            rows={4}\r\n                            value={formData['message']}\r\n                            onChange={onChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item textAlign={'center'} xs={12}>\r\n                        <Button type={'submit'} variant='contained'>Submit</Button>\r\n                    </Grid>\r\n                </>}\r\n\r\n                <Grid item textAlign={'center'} xs={12}>\r\n                    <p className=\"forgot-password text-center\">\r\n                        <Link to={LOGIN_LINK}>Sign In</Link>\r\n                    </p>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </section>\r\n}\r\n\r\nexport default Support;","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import CompanyText from \"../../Atoms/CompanyText\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {FEDERAL_SIGNUP_LINK, LOGIN_LINK, SIGNUP_SUPPORT} from \"../../constants\";\r\nimport { Box, Button, Grid, InputAdornment, Stack, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Input from \"../../Atoms/form/Input\";\r\nimport { getCheckStatusIcon, isEmailValid, isPhoneValid, textFormatter, verticalAlignStyle } from \"../../../utils/utils\";\r\nimport { requestPost } from \"../../../utils/request\";\r\nimport { notification } from \"../../../actions/alert\";\r\n\r\nexport const SuccessComponent = () => {\r\n    const icon = getCheckStatusIcon(true);\r\n    return <Stack justifyContent='center' gap={1} flex={1}>\r\n        <Typography align='center'>{icon}</Typography>\r\n        <Typography align={'center'} sx={{ fontWeight: 550 }}>Thanks for Signing up!</Typography>\r\n        <Typography align={'center'} variant='subtitle2'>Our team will review and contact you :)</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst FMCSASignup = (props) => {\r\n    const [form, setForm] = useState({})\r\n    const [error, setError] = useState();\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const { location: { state = {} } = {} } = props,\r\n        { content: { carrier = {} } = {} } = state,\r\n        { legalName, allowedToOperate, dotNumber, phyCity, phyState, phyZipcode, phyCountry, telephone } = carrier || {};\r\n\r\n    if (!state) {\r\n        return <Redirect to={FEDERAL_SIGNUP_LINK} />\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const { email, phoneNumber } = form;\r\n        if (!isPhoneValid(phoneNumber)) {\r\n            setError(error => ({ ...error, phoneNumber: 'Invalid Phone Number' }))\r\n        }\r\n        else if (!isEmailValid(email)) {\r\n            setError(error => ({ ...error, email: \"Invalid Email\" }));\r\n        } else {\r\n            const body = { email, phoneNumber: '+1' + phoneNumber, dot: dotNumber, fmcsaDetails: state.content }\r\n            const { success, data } = await requestPost({ uri: '/api/onBoarding', body })\r\n            if (success) {\r\n                setIsSuccess(true);\r\n            } else {\r\n                notification(data.message || 'Network Error', 'error')\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange({ name, value }) {\r\n        setForm({ ...form, [name]: value });\r\n        setError((error) => ({ ...error, [name]: '' }))\r\n    }\r\n\r\n    return (\r\n        <div className={'auth-wrapper auth-inner'} style={verticalAlignStyle}>\r\n            <CompanyText style={{ mb: 3, cursor: 'default' }} />\r\n            {isSuccess ? <SuccessComponent /> : <Grid container spacing={2} sx={{\r\n                flex: 1,\r\n                '& p': {\r\n                    color: '#868686',\r\n                    fontSize: 14\r\n                }\r\n            }}>\r\n                <Grid item xs={12}>\r\n                    <Typography>Company: {textFormatter(legalName)}</Typography>\r\n                    <Typography>DOT#: {textFormatter(dotNumber)}</Typography>\r\n                    <Typography>Active Authority: {textFormatter(allowedToOperate)}</Typography>\r\n                    <Typography>City: {textFormatter(phyCity)}</Typography>\r\n                    <Typography>State: {textFormatter(phyState)}</Typography>\r\n                    <Typography>Zip: {textFormatter(phyZipcode)}</Typography>\r\n                    <Typography>Country: {textFormatter(phyCountry)}</Typography>\r\n                    <Typography>Telephone: {textFormatter(telephone)}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Stack component='form' justifyContent='center' onSubmit={onSubmit} gap={2}>\r\n                        <Input label='Phone Number' value={form['phoneNumber']} name='phoneNumber' onChange={onChange}\r\n                            errors={error} placeholder='Please enter the Phone number'\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">+1</InputAdornment>\r\n                            }}\r\n                        />\r\n                        <Input label='Email' value={form['email']} name='email' errors={error} onChange={onChange}\r\n                            placeholder='Please enter the Email' />\r\n                        <Box textAlign='center'>\r\n                            <Button type='submit' variant='contained'>Submit</Button>\r\n                        </Box>\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>}\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography className=\"forgot-password text-center\">\r\n                        <Link to={SIGNUP_SUPPORT}>Contact Support</Link>\r\n                    </Typography>\r\n                    <Typography className=\"forgot-password text-center\">\r\n                        <Link to={LOGIN_LINK}>Sign In</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FMCSASignup"],"sourceRoot":""}