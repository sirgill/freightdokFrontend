{"version":3,"sources":["components/Atoms/form/Input.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","components/auth/signUpWithFMCSA/FMCSASignup.js"],"names":["InputFieldPure","_ref","errorText","handleBlur","handleChange","hasError","className","name","value","InputProps","readOnly","inputProps","helperText","fullWidth","rest","_jsx","_FormControl","component","children","_TextField","error","onChange","onBlur","size","InputField","memo","Input","props","label","errors","classNameRoot","isCapitalize","type","trimValue","e","target","capitalize","trim","max","min","_","isFunction","styled","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","classes","composeClasses","generateUtilityClass","as","clsx","createStack","SuccessComponent","icon","getCheckStatusIcon","_jsxs","_Stack","justifyContent","flex","_Typography","align","sx","fontWeight","variant","FMCSASignup","form","setForm","useState","setError","isSuccess","setIsSuccess","location","state","content","carrier","legalName","allowedToOperate","dotNumber","phyCity","phyState","phyZipcode","phyCountry","telephone","Redirect","to","FEDERAL_SIGNUP_LINK","verticalAlignStyle","CompanyText","mb","cursor","_Grid","container","color","fontSize","item","xs","textFormatter","onSubmit","async","preventDefault","email","phoneNumber","isPhoneValid","isEmailValid","body","dot","fmcsaDetails","success","data","requestPost","uri","notification","message","placeholder","startAdornment","_InputAdornment","position","_Box","textAlign","_Button","Link","SIGNUP_SUPPORT","LOGIN_LINK"],"mappings":"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","file":"static/js/29.09656df1.chunk.js","sourcesContent":["import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import CompanyText from \"../../Atoms/CompanyText\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {FEDERAL_SIGNUP_LINK, LOGIN_LINK, SIGNUP_SUPPORT} from \"../../constants\";\r\nimport { Box, Button, Grid, InputAdornment, Stack, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Input from \"../../Atoms/form/Input\";\r\nimport { getCheckStatusIcon, isEmailValid, isPhoneValid, textFormatter, verticalAlignStyle } from \"../../../utils/utils\";\r\nimport { requestPost } from \"../../../utils/request\";\r\nimport { notification } from \"../../../actions/alert\";\r\n\r\nexport const SuccessComponent = () => {\r\n    const icon = getCheckStatusIcon(true);\r\n    return <Stack justifyContent='center' gap={1} flex={1}>\r\n        <Typography align='center'>{icon}</Typography>\r\n        <Typography align={'center'} sx={{ fontWeight: 550 }}>Thanks for Signing up!</Typography>\r\n        <Typography align={'center'} variant='subtitle2'>Our team will review and contact you :)</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst FMCSASignup = (props) => {\r\n    const [form, setForm] = useState({})\r\n    const [error, setError] = useState();\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const { location: { state = {} } = {} } = props,\r\n        { content: { carrier = {} } = {} } = state,\r\n        { legalName, allowedToOperate, dotNumber, phyCity, phyState, phyZipcode, phyCountry, telephone } = carrier || {};\r\n\r\n    if (!state) {\r\n        return <Redirect to={FEDERAL_SIGNUP_LINK} />\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const { email, phoneNumber } = form;\r\n        if (!isPhoneValid(phoneNumber)) {\r\n            setError(error => ({ ...error, phoneNumber: 'Invalid Phone Number' }))\r\n        }\r\n        else if (!isEmailValid(email)) {\r\n            setError(error => ({ ...error, email: \"Invalid Email\" }));\r\n        } else {\r\n            const body = { email, phoneNumber: '+1' + phoneNumber, dot: dotNumber, fmcsaDetails: state.content }\r\n            const { success, data } = await requestPost({ uri: '/api/onBoarding', body })\r\n            if (success) {\r\n                setIsSuccess(true);\r\n            } else {\r\n                notification(data.message || 'Network Error', 'error')\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange({ name, value }) {\r\n        setForm({ ...form, [name]: value });\r\n        setError((error) => ({ ...error, [name]: '' }))\r\n    }\r\n\r\n    return (\r\n        <div className={'auth-wrapper auth-inner'} style={verticalAlignStyle}>\r\n            <CompanyText style={{ mb: 3, cursor: 'default' }} />\r\n            {isSuccess ? <SuccessComponent /> : <Grid container spacing={2} sx={{\r\n                flex: 1,\r\n                '& p': {\r\n                    color: '#868686',\r\n                    fontSize: 14\r\n                }\r\n            }}>\r\n                <Grid item xs={12}>\r\n                    <Typography>Company: {textFormatter(legalName)}</Typography>\r\n                    <Typography>DOT#: {textFormatter(dotNumber)}</Typography>\r\n                    <Typography>Active Authority: {textFormatter(allowedToOperate)}</Typography>\r\n                    <Typography>City: {textFormatter(phyCity)}</Typography>\r\n                    <Typography>State: {textFormatter(phyState)}</Typography>\r\n                    <Typography>Zip: {textFormatter(phyZipcode)}</Typography>\r\n                    <Typography>Country: {textFormatter(phyCountry)}</Typography>\r\n                    <Typography>Telephone: {textFormatter(telephone)}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Stack component='form' justifyContent='center' onSubmit={onSubmit} gap={2}>\r\n                        <Input label='Phone Number' value={form['phoneNumber']} name='phoneNumber' onChange={onChange}\r\n                            errors={error} placeholder='Please enter the Phone number'\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">+1</InputAdornment>\r\n                            }}\r\n                        />\r\n                        <Input label='Email' value={form['email']} name='email' errors={error} onChange={onChange}\r\n                            placeholder='Please enter the Email' />\r\n                        <Box textAlign='center'>\r\n                            <Button type='submit' variant='contained'>Submit</Button>\r\n                        </Box>\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid>}\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography className=\"forgot-password text-center\">\r\n                        <Link to={SIGNUP_SUPPORT}>Contact Support</Link>\r\n                    </Typography>\r\n                    <Typography className=\"forgot-password text-center\">\r\n                        <Link to={LOGIN_LINK}>Sign In</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FMCSASignup"],"sourceRoot":""}