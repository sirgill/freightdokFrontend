{"version":3,"sources":["components/loads/LoadsStatus.js","components/Atoms/Modal.js","components/Atoms/Dialog.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","actions/load.js","components/Atoms/form/InputField.js","actions/driver.js","utils/helper.js","components/loads/styles.js","components/loads/components/LoadDetailsUploadComponent.js","components/loads/LoadDetailModal.js"],"names":["useStyles","makeStyles","TableContainer","borderBottom","loadSearchbar","textAlign","paddingBottom","LoadsStatus","_ref","resetSearchField","listBarType","dispatch","useDispatch","loads","loads_pagination","limit","total","currPage","rowsPerPage","search","query","sLoads","page","sPage","sLimit","sTotal","useSelector","state","load","modal","setModal","useState","open","data","loading","setLoading","useEffect","getLoads","setTimeout","resetLoadsSearch","tableConfig","onPageChange","handleChangePage","event","newPage","searchLoads","rowCellPadding","parseInt","count","hover","onRowClick","row","columns","id","label","renderer","_ref2","pickup","pickupData","pickupCity","_ref3","date","moment","pickUpByDate","isValid","format","_jsx","Fragment","children","_ref4","drop","dropData","dropCity","_ref5","deliverBy","_ref6","modesString","standard","getParsedLoadEquipment","_jsxs","emptyState","EnhancedTable","config","LoadDetailModal","modalEdit","handleClose","selectLoad","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","onClose","showClose","titleStyles","other","DialogTitle","sx","m","p","IconButton","onClick","position","left","top","color","palette","grey","CloseIcon","Modal","closeCallback","title","closeUrl","paperProps","preventBackdropClick","setOpen","React","useTheme","fullScreen","_useMediaQuery","breakpoints","down","e","arguments","length","undefined","equalsIgnoreCase","addEvent","window","removeEvent","Transition","useMemo","forwardRef","ref","history","useHistory","_Zoom","onExited","push","ENHANCED_DASHBOARD","goBack","maxWidth","TransitionComponent","PaperProps","DialogContent","dividers","borderTop","Slide","direction","preventBackdropClose","className","onOk","okText","content","onCancel","MuiDialog","fontWeight","DialogActions","Button","variant","CircularIndeterminate","_Box","height","display","justifyContent","alignItems","marginLeft","CircularProgress","StyledPagination","Pagination","width","StyledStack","Stack","flexWrap","TablePagination","onPageSizeChange","isLoading","setLength","Array","isArray","Typography","fontSize","Select","disabled","name","value","options","onChange","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","map","column","index","visible","_","isFunction","bgcolor","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","rowStyleCb","rowStyle","deleteCell","component","scope","Tooltip","placement","_IconButton","bind","_id","cell","i","valueFormatter","get","preventDefault","cursor","getTableCell","onRefetch","isRefetching","actions","isPaginationLoading","tableState","setTableState","dialog","setDialog","hasOnClickUrl","emptyMessage","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","useRef","Actions","isValidElement","_Fragment","url","stopPropagation","_Grid","container","gap","ErrorOutlineIcon","_Typography","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","_TableBody","style","_ref$current","current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","_Stack","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","getLoader","innerHeight","item","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","module","async","success","requestGet","uri","concat","type","GET_LOADS","payload","notification","message","err","setAlert","getInvoiceLoads","INVOICE_LOAD_FETCHED","response","axios","totalPages","res","RETURNED_SEARCHED_LOADS","getState","RESET_SEARCHED_LOADS","input","SELECT_LOAD","addLoad","formData","callback","requestPost","body","ADD_LOAD","console","log","updateLoad","bucketFiles","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","requestPatch","deleteLoad","load_id","requestDelete","DELETE_LOAD","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","toLowerCase","error","opts","opt","unshift","Input","InputField","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","target","values","l","selected","getDrivers","assign","timestamp","Date","GET_DRIVERS","_err$response","_err$response2","DRIVER_ERROR","msg","statusText","status","addDriver","isEdit","post","errors","patchDriverLoads","driver_id","drivers","driver","patch","find","o","PATCH_DRIVER","deleteDriver","cb","delete","splice","DELETE_DRIVER","deleteDriverLoads","DELETE_DRIVER_LOAD","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","root","minWidth","marginBottom","borderRadius","borderWidth","borderStyle","borderColor","cardcontent","flexDirection","wrap","paddingLeft","paddingTop","h4","margin","loadp","playIcon","textField","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","background","shadows","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","FileContainer","overflow","FileViewer","onRemoveAll","Files","elevation","DescriptionIcon","PRIMARY_BLUE","align","textOverflow","Alert","severity","_Button","float","gridTemplateColumns","LoadDetailsUploadComponent","fileViewConfig","setFileViewConfig","edit","rateConfirmation","proofDelivery","accessorialsFiles","handleFileChange","rateConfirmationRef","proofDeliveryRef","accessorialsRef","rateConFile","podFile","formAccessorialsFiles","viewClickHandler","onFileViewClose","roc","idx","href","startIcon","OpenInNewIcon","auth","getCheckStatusIcon","pod","acc","formInitialState","rate","assignedTo","trailorNumber","accessorials","invoice_created","MenuProps","ITEM_HEIGHT","DATE_PICKER_SLOT_PROPS","helperText","fullWidth","TIME_PICKET_SLOT_PROPS","TextPlaceHolder","canUpdate","brokerage","loadNumber","bktFiles","classes","setEdit","setForm","isProcessingAsyncRequest","setIsProcessingAsyncRequest","SelectElement","OutlinedInput","FilledInput","assignees","assignedToOptions","firstName","lastName","assigneeRole","assigneeId","getRoleNameString","setupDrivers","resetFileInputs","afterSubmit","isSuccess","handleSubmit","handleOnChange","handlePickDropChange","keyToUpdate","childKey","handleDateChange","handleInOutTime","parent_key","child_key","getRole","alpha","forEach","fileType","fileLocation","StaticDataShow","heading","sxObject","pt","_Modal","LocalizationProvider","dateAdapter","AdapterMoment","_Close","onSubmit","xs","pl","pr","sm","FormControl","InputLabel","_Select","notched","LOAD_STATUSES","_MenuItem","_ref7","assignee","labelId","_ref8","split","_Divider","_Done","_CircularProgress","green","_Edit","handleCancel","createCopy","_FileCopyOutlined","mr","placeholder","shipperName","pickupAddress","pickupState","pickupZip","DateTimePicker","pickupDate","slotProps","TimePicker","in_time","out_time","mt","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropState","dropZip","dropDate","dropPo","dropReference","dropDeliverNumber","f"],"mappings":"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","file":"static/js/19.5ad1f5ad.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { resetLoadsSearch } from \"../../actions/load.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoads, searchLoads, selectLoad } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport LoadDetailModal from \"./LoadDetailModal\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n    TableContainer: {\r\n        borderBottom: \"none\",\r\n    },\r\n    loadSearchbar: {\r\n        textAlign: \"right\",\r\n        paddingBottom: 10,\r\n    },\r\n});\r\n\r\nexport default function LoadsStatus({ resetSearchField, listBarType }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(),\r\n        { loads = [], loads_pagination: { limit = 15, total, currPage } = {}, rowsPerPage = 15,\r\n            search: { query, loads: sLoads, page: sPage, limit: sLimit, total: sTotal } = {} } = useSelector(state => state.load),\r\n        [modal, setModal] = useState({ open: false, data: {} });\r\n    // const { query, loads: sLoads, page: sPage, limit, total: sTotal } = search;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getLoads())\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        if (query)\r\n            dispatch(searchLoads(newPage - 1, limit, query, listBarType));\r\n        else\r\n            dispatch(getLoads(newPage - 1, rowsPerPage, listBarType));\r\n    };\r\n\r\n    const tableConfig = {\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'inherit',\r\n        page: parseInt(currPage) - 1,\r\n        count: total,\r\n        limit,\r\n        hover: true,\r\n        onRowClick: (row) => {\r\n            if (listBarType === 'history') {\r\n                setModal({ open: true, data: row })\r\n            }\r\n        },\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number'\r\n            },\r\n\r\n            {\r\n                id: 'pickupCity',\r\n                label: 'Pickup City/State',\r\n                renderer: ({ row: { pickup = [] } = {} }) => {\r\n                    const [pickupData = {}] = pickup,\r\n                        { pickupCity = '' } = pickupData;\r\n                    return pickupCity;\r\n                }\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: 'dropCity',\r\n                label: 'Drop City/State',\r\n                renderer: ({ row: { drop = [] } = {} }) => {\r\n                    const [dropData = {}] = drop,\r\n                        { dropCity = '' } = dropData;\r\n                    // console.log('row for pickup city', row)\r\n                    return dropCity\r\n                }\r\n            },\r\n\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row)\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: () => {\r\n                    return \"C.H Robinson\"\r\n                },\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <EnhancedTable config={tableConfig} data={loads} loading={loading} />\r\n                {modal.open && <LoadDetailModal\r\n                    listBarType={listBarType}\r\n                    modalEdit={true}\r\n                    open={true}\r\n                    load={modal.data}\r\n                    handleClose={() => {\r\n                        setModal({ open: false, data: {} });\r\n                        // enableEdit(false);\r\n                        selectLoad();\r\n                    }}\r\n                />}\r\n            </Fragment>\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport {requestDelete, requestGet, requestPatch, requestPost} from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 100, module = \"\") =>\r\n    async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1\r\n            }&limit=${limit}&module=${module}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n    async (dispatch) => {\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { data: [], loading: true },\r\n      });\r\n\r\n      try {\r\n        const url = `/api/load/invoice_loads?page=${page + 1\r\n          }&limit=${limit}&search=${search}`;\r\n        const response = await axios.get(url);\r\n        const { loads, total, totalPages } = response.data;\r\n        dispatch({\r\n          type: INVOICE_LOAD_FETCHED,\r\n          payload: { data: loads, page, limit, search, total, totalPages, loading: false },\r\n        });\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const {data, success} = await requestPost({uri: '/api/load', body: formData})\r\n    if(success){\r\n      dispatch({\r\n        type: ADD_LOAD,\r\n        payload: data,\r\n      });\r\n\r\n      notification(\"Load Created\")\r\n      if (callback) {\r\n        callback(success, data)\r\n      }\r\n    } else {\r\n      notification(data.message, 'error')\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport {notification, setAlert} from \"./alert\";\r\nimport { GET_DRIVERS, GET_DRIVER, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER, DRIVER_ERROR, DELETE_DRIVER_LOAD } from \"./types.js\";\r\n\r\n//get current users drivers\r\nexport const getDrivers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/drivers/me\");\r\n    Object.assign(res.data, {timestamp: new Date()})\r\n    dispatch({\r\n      type: GET_DRIVERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err?.response?.statusText, status: err?.response?.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addDriver = (formData, isEdit) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/drivers\", formData, config);\r\n\r\n    notification(res.data.message);\r\n    dispatch(getDrivers());\r\n\r\n  } catch (err) {\r\n    let error = err.errors && Array.isArray(err.errors) && err.errors.length ? err.errors[0].msg : err.message;\r\n    dispatch(setAlert( error, \"error\"));\r\n    // dispatch({\r\n    //   type: DRIVER_ERROR,\r\n    //   payload: { msg: err.response.statusText, status: err.response.status },\r\n    // });\r\n  }\r\n};\r\n\r\n//patch driver\r\nexport const patchDriverLoads = (driver_id, loads) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.patch(`/api/drivers/loads?driver_id=${driver_id}`, { loads: loads });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: PATCH_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver\r\nexport const deleteDriver = (driver_id, cb) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/`, { data: { driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers.splice(index, 1);\r\n    }\r\n    notification('Deleted Successfully')\r\n    cb && cb(res);\r\n    dispatch({\r\n      type: DELETE_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver load\r\nexport const deleteDriverLoads = (driver_id, load_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/loads`, { data: { load_id: load_id, driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: DELETE_DRIVER_LOAD,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}","import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import {Button, Grid, Paper, Stack, Typography} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {getCheckStatusIcon} from \"../../../utils/utils\";\r\nimport Modal from \"../../Atoms/Modal\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {PRIMARY_BLUE} from \"../../layout/ui/Theme\";\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport {Alert} from \"../../Atoms\";\r\n\r\nconst FileContainer = styled(Paper)(({}) => ({\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    padding: 8,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n}))\r\n\r\nconst FileViewer = ({files = [], onClose, onRemoveAll}) => {\r\n    // console.log(files)\r\n    const config={\r\n        title: 'Edit File'\r\n    }\r\n    const Files = (files || []).map(file => {\r\n        return <FileContainer elevation={3}>\r\n            <DescriptionIcon sx={{color: PRIMARY_BLUE}} />\r\n            <Typography variant='subtitle2' align='center' sx={{width: 'inherit', overflow: 'hidden', textOverflow: 'ellipsis'}}>{file.name}</Typography>\r\n        </FileContainer>\r\n    })\r\n\r\n    return <Modal config={config} closeCallback={onClose}>\r\n        <Grid container spacing={2} sx={{display: 'grid'}}>\r\n            <Grid item>\r\n                <Alert config={{open: true, message: 'Previous files, if exist will be overwritten with new files.', severity: 'info'}} />\r\n            </Grid>\r\n            {files && <Grid item>\r\n                <Button variant='outlined' sx={{float: 'right'}} onClick={onRemoveAll} color='error'>Remove All</Button>\r\n            </Grid>}\r\n            <Grid item>\r\n                <Grid container gap={2} sx={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\r\n                    {Files}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nconst LoadDetailsUploadComponent = (props) => {\r\n    const [fileViewConfig, setFileViewConfig] = useState({open: false, config: {}})\r\n    const {\r\n        edit, rateConfirmation = [], proofDelivery = [], accessorialsFiles = [], handleFileChange, rateConfirmationRef,\r\n        proofDeliveryRef, accessorialsRef, state, rateConFile, podFile, formAccessorialsFiles\r\n    } = props;\r\n    // console.log(rateConFile)\r\n    // console.log(accessorialsFiles)\r\n\r\n    function viewClickHandler(file, name, e) {\r\n        e.stopPropagation()\r\n        setFileViewConfig({open: true, config: [...file], name})\r\n    }\r\n\r\n    function onFileViewClose() {\r\n        setFileViewConfig({open: false, config: null});\r\n    }\r\n\r\n    function onRemoveAll() {\r\n        handleFileChange({target: { name: fileViewConfig.name, files: null }})\r\n        onFileViewClose();\r\n    }\r\n\r\n    return (<Stack sx={{alignItems: 'end'}}>\r\n        {fileViewConfig.open && <FileViewer files={fileViewConfig.config} onClose={onFileViewClose} onRemoveAll={onRemoveAll} />}\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {rateConfirmation.length ? (rateConfirmation.map((roc, idx) => {\r\n                return (<><span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                          <a href={roc} target=\"_blank\">\r\n                            Rate Con-{idx + 1}\r\n                          </a>\r\n                        </span></>)\r\n            })) : (<span>Rate Con</span>)}\r\n            <span>\r\n                      {edit ? <Fragment>\r\n                              {rateConFile\r\n                                  ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, rateConFile, 'rateConfirmation')} startIcon={<OpenInNewIcon />}>\r\n                                        View\r\n                                    </Button>\r\n                                  : <label htmlFor=\"contained-button-file1\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"rateConfirmation\"\r\n                                      disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                      onChange={handleFileChange}\r\n                                      ref={rateConfirmationRef}\r\n                                      id=\"contained-button-file1\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      {'Attach'}\r\n                                  </Button>\r\n                              </label>}\r\n                      </Fragment>\r\n                          : getCheckStatusIcon(!!rateConfirmation.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {proofDelivery.length ? (proofDelivery.map((pod, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={pod} target=\"_blank\">\r\n                              POD-{idx + 1}\r\n                            </a>\r\n                          </span>\r\n                </>)\r\n            })) : (<span>POD</span>)}\r\n            <span>\r\n                      {edit ? podFile ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, podFile, 'proofDelivery')} startIcon={<OpenInNewIcon />}>\r\n                                  View\r\n                              </Button>\r\n                              : <label htmlFor=\"contained-button-file2\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"proofDelivery\"\r\n                                      disabled={!edit}\r\n                                      onChange={handleFileChange}\r\n                                      ref={proofDeliveryRef}\r\n                                      id=\"contained-button-file2\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      Attach\r\n                                  </Button>\r\n                              </label>\r\n                          : getCheckStatusIcon(!!proofDelivery.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2}>\r\n            {accessorialsFiles.length ? (accessorialsFiles.map((acc, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={acc} target=\"_blank\">\r\n                              Accessorials-{idx + 1}\r\n                            </a>\r\n                          </span></>)\r\n            })) : (<span>Accessorials</span>)}\r\n            <span>\r\n                      {edit ? formAccessorialsFiles\r\n                          ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, formAccessorialsFiles, 'accessorialsFiles')} startIcon={<OpenInNewIcon />}>\r\n                              View\r\n                          </Button>\r\n                          : <Fragment>\r\n                          <label htmlFor=\"contained-button-file3\">\r\n                              <input\r\n                                  style={{display: 'none'}}\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  name=\"accessorialsFiles\"\r\n                                  disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                  onChange={handleFileChange}\r\n                                  ref={accessorialsRef}\r\n                                  id=\"contained-button-file3\"\r\n                              />\r\n                              <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                  Attach\r\n                              </Button>\r\n                          </label>\r\n                      </Fragment> : getCheckStatusIcon(!!accessorialsFiles?.length)}\r\n                    </span>\r\n        </Stack>\r\n    </Stack>)\r\n}\r\n\r\nexport default LoadDetailsUploadComponent;","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  MenuItem,\r\n  IconButton,\r\n  Select,\r\n  Modal,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport moment from \"moment\";\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport \"./style.css\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { useStyles } from \"./styles\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n// import TimePicker from '@mui/lab/TimePicker';\r\n// import DatePicker from '@mui/lab/DatePicker';\r\nimport {TimePicker} from '@mui/x-date-pickers/TimePicker';\r\nimport {DateTimePicker} from '@mui/x-date-pickers/DateTimePicker'\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {AdapterMoment} from '@mui/x-date-pickers/AdapterMoment';\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport { LOAD_STATUSES } from \"../constants\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport LoadDetailsUploadComponent from \"./components/LoadDetailsUploadComponent\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst DATE_PICKER_SLOT_PROPS = {\r\n  textField: {\r\n    helperText: 'DD/MM/YYYY hh:mm AM/PM',\r\n    size: 'small',\r\n    fullWidth: true\r\n  },\r\n},\r\n    TIME_PICKET_SLOT_PROPS = {\r\n      textField: {\r\n        size: 'small',\r\n        fullWidth: true\r\n      }\r\n    }\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose,\r\n  listBarType,\r\n  load, canUpdate\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef();\r\n  const accessorialsRef = useRef(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const {assignees = [] } = state.driver || {};\r\n  const assignedToOptions = assignees.map((item) => {\r\n    const { _id, firstName, lastName, role, user = {} } = item || {},\r\n        {name = '', role: assigneeRole, _id: assigneeId} = user || {};\r\n    return {\r\n      name, _id: assigneeId || _id, firstName, lastName, role: getRoleNameString(assigneeRole || role)\r\n    }\r\n  }) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user?._id,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n  useEffect(() => {\r\n    const drivers = state.driver.drivers;\r\n    if (drivers.length > 0) {\r\n      // console.log(user._id, state.driver.drivers);\r\n      // setForm({ ...form, assignedTo: user });\r\n      // for (let driver of drivers) {\r\n      //     if (driver.loads.length > 0) {\r\n      //         for (let load of driver.loads) {\r\n      //             if (load._id === _id) {\r\n      //                 setForm({ ...form, assignedTo: user._id });\r\n      //             }\r\n      //         }\r\n      //     }\r\n      // }\r\n    }\r\n  }, [state.driver.drivers]);\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if (isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n      setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }] });\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n      setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {\r\n      'proofDelivery': [],\r\n      'rateConfirmation': [],\r\n      'accessorialsFiles': []\r\n    };\r\n    alpha.forEach((item = {}, idx) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      bucketFiles[fileType].push(fileLocation)\r\n\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = [], proofDelivery = [], accessorialsFiles = [] } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }} className='staticInfo'>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center', pt: 3 }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <div style={{ width: '90%' }} className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"status\"\r\n                        value={form.status}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {LOAD_STATUSES.map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"assignedTo\"\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                        value={form.assignedTo}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((assignee) => (\r\n                          <MenuItem\r\n                            key={assignee._id}\r\n                            value={assignee._id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {`${assignee.firstName} ${assignee.lastName} (${assignee.role || '--'})`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                          { id: 'scale-ticket', label: 'Scale Ticket' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <Box sx={{ position: 'relative' }}>\r\n                    <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                      <DoneIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>\r\n                    {isProcessingAsyncRequest && <CircularProgress\r\n                      size={65}\r\n                      sx={{\r\n                        color: green[500],\r\n                        position: 'absolute',\r\n                        top: -6,\r\n                        left: -6,\r\n                        zIndex: 1,\r\n                      }}\r\n                    />}\r\n                  </Box>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                  <DateTimePicker\r\n                                      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\") || new Date()}\r\n                                      onChange={(date) => handleDateChange(date, \"pickup\")}\r\n                                      slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                      label='Pickup Date'\r\n                                  />\r\n                                </LocalizationProvider>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <DatePicker*/}\r\n                                {/*    value={*/}\r\n                                {/*      form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                                {/*    }*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleDateChange(date, \"pickup\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                              </Grid>\r\n                              {/*<Grid item xs={6}>*/}\r\n                              {/*    <TimePicker*/}\r\n                              {/*      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\")}*/}\r\n                              {/*      onChange={(date) =>*/}\r\n                              {/*        handleDateChange(date, \"pickup\")*/}\r\n                              {/*      }*/}\r\n                              {/*      label='Pickup Time'*/}\r\n                              {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                              {/*    />*/}\r\n                              {/*</Grid>*/}\r\n                              <Grid item xs={6}>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <TimePicker*/}\r\n                                {/*    label='In Time'*/}\r\n                                {/*    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                                <TimePicker\r\n                                    label='In Time'\r\n                                    value={moment( form.pickup[0] ? form.pickup[0].in_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                        handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={moment(form.pickup[0] ? form.pickup[0].out_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                  />\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DateTimePicker\r\n                                  value={moment(form.drop[0] ? form.drop[0].dropDate : \"\") || new Date()}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                  label='Drop Date'\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <DatePicker*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                              {/*    onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            {/*<Grid item xs={6}>*/}\r\n                            {/*    <TimePicker*/}\r\n                            {/*        label='Drop Time'*/}\r\n                            {/*      value={moment(form.drop[0] ? form.drop[0].dropDate : \"\")}*/}\r\n                            {/*      onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                            {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                            {/*    />*/}\r\n                            {/*</Grid>*/}\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='In Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].in_time : \"\") || new Date()}\r\n                                  onChange={(date) => handleInOutTime(date, \"drop\", \"in_time\")}\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='In Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='Out Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].out_time : \"\")}\r\n                                  onChange={(date) =>\r\n                                      handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='Out Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <LoadDetailsUploadComponent\r\n                    edit={edit}\r\n                    rateConfirmation = {rateConfirmation}\r\n                    proofDelivery = {proofDelivery}\r\n                    accessorialsFiles = {accessorialsFiles}\r\n                    handleFileChange={handleFileChange}\r\n                    rateConfirmationRef={rateConfirmationRef}\r\n                    proofDeliveryRef={proofDeliveryRef}\r\n                    accessorialsRef={accessorialsRef}\r\n                    state={state}\r\n                    rateConFile={form.rateConfirmation}\r\n                    podFile={form.proofDelivery}\r\n                    formAccessorialsFiles={form.accessorialsFiles}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        </LocalizationProvider>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n"],"sourceRoot":""}