{"version":3,"sources":["components/loads/LoadsStatus.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","actions/load.js","actions/driver.js","utils/helper.js","components/loads/styles.js","components/loads/components/LoadDetailsUploadComponent.js","components/loads/LoadDetailModal.js"],"names":["useStyles","makeStyles","TableContainer","borderBottom","loadSearchbar","textAlign","paddingBottom","LoadsStatus","_ref","resetSearchField","listBarType","dispatch","useDispatch","loads","loads_pagination","limit","total","currPage","rowsPerPage","search","query","sLoads","page","sPage","sLimit","sTotal","useSelector","state","load","modal","setModal","useState","open","data","loading","setLoading","useEffect","getLoads","setTimeout","resetLoadsSearch","tableConfig","onPageChange","handleChangePage","event","newPage","searchLoads","rowCellPadding","parseInt","count","hover","onRowClick","row","columns","id","label","renderer","_ref2","pickup","pickupData","pickupCity","_ref3","date","moment","pickUpByDate","isValid","format","_jsx","Fragment","children","_ref4","drop","dropData","dropCity","_ref5","deliverBy","_ref6","modesString","standard","getParsedLoadEquipment","_jsxs","emptyState","EnhancedTable","config","LoadDetailModal","modalEdit","handleClose","selectLoad","StyledPagination","styled","Pagination","theme","breakpoints","down","height","width","StyledStack","Stack","justifyContent","display","flexWrap","TablePagination","length","setLength","Array","isArray","direction","alignItems","Typography","sx","color","fontSize","Math","ceil","variant","size","onChange","e","pgNum","CircularIndeterminate","_Box","marginLeft","CircularProgress","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","onClick","bind","_id","disabled","cell","i","valueFormatter","isObject","get","preventDefault","cursor","getTableCell","history","onRefetch","isRefetching","tableState","setTableState","dialog","setDialog","hasOnClickUrl","emptyMessage","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","React","useRef","url","push","stopPropagation","title","_Grid","container","p","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","className","backgroundColor","borderTop","_TableBody","Date","now","style","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","window","item","position","Spinner","_Table","el","stickyHeader","Dialog","onClose","withRouter","memo","InputPure","props","type","options","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","toLowerCase","console","error","opts","opt","value","unshift","Input","InputField","arguments","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","name","target","values","l","selected","module","async","success","requestGet","uri","concat","GET_LOADS","payload","notification","message","err","setAlert","getInvoiceLoads","INVOICE_LOAD_FETCHED","response","axios","totalPages","res","RETURNED_SEARCHED_LOADS","getState","RESET_SEARCHED_LOADS","input","SELECT_LOAD","addLoad","formData","callback","post","ADD_LOAD","status","updateLoad","bucketFiles","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","requestPatch","body","deleteLoad","load_id","requestDelete","DELETE_LOAD","getDrivers","assign","timestamp","GET_DRIVERS","_err$response","_err$response2","log","DRIVER_ERROR","msg","statusText","addDriver","isEdit","errors","patchDriverLoads","driver_id","drivers","driver","patch","find","o","PATCH_DRIVER","deleteDriver","delete","splice","DELETE_DRIVER","deleteDriverLoads","DELETE_DRIVER_LOAD","capitalizeFirstLetter","string","charAt","toUpperCase","slice","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","root","minWidth","maxWidth","marginBottom","borderRadius","borderWidth","borderStyle","borderColor","cardcontent","flexDirection","wrap","paddingLeft","paddingTop","h4","margin","loadp","playIcon","textField","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","palette","background","shadows","spacing","top","left","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","FileContainer","overflow","FileViewer","onRemoveAll","Files","elevation","DescriptionIcon","PRIMARY_BLUE","align","textOverflow","Modal","closeCallback","Alert","severity","_Button","float","gridTemplateColumns","LoadDetailsUploadComponent","fileViewConfig","setFileViewConfig","edit","rateConfirmation","proofDelivery","accessorialsFiles","handleFileChange","rateConfirmationRef","proofDeliveryRef","accessorialsRef","rateConFile","podFile","formAccessorialsFiles","viewClickHandler","onFileViewClose","roc","idx","_Fragment","href","startIcon","OpenInNewIcon","auth","getCheckStatusIcon","pod","acc","formInitialState","rate","assignedTo","trailorNumber","accessorials","invoice_created","MenuProps","PaperProps","ITEM_HEIGHT","TextPlaceHolder","brokerage","loadNumber","bktFiles","classes","setEdit","setForm","isProcessingAsyncRequest","setIsProcessingAsyncRequest","SelectElement","OutlinedInput","FilledInput","assignedToOptions","filter","setupDrivers","resetFileInputs","afterSubmit","isSuccess","handleSubmit","handleOnChange","handlePickDropChange","keyToUpdate","childKey","handleDateChange","handleInOutTime","parent_key","child_key","getRole","alpha","forEach","fileType","fileLocation","StaticDataShow","heading","sxObject","_Modal","_Close","onSubmit","xs","pl","pr","sm","FormControl","m","fullWidth","InputLabel","_Select","_ref7","notched","LOAD_STATUSES","_MenuItem","_ref8","labelId","_ref9","split","_Divider","_Done","_CircularProgress","green","zIndex","_Edit","handleCancel","createCopy","_FileCopyOutlined","mr","placeholder","shipperName","pickupAddress","pickupState","pickupZip","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","pickupDate","renderInput","params","_TextField","TimePicker","in_time","out_time","mt","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropState","dropZip","dropDate","dropPo","dropReference","dropDeliverNumber","f"],"mappings":"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","file":"static/js/19.8ff3d696.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { resetLoadsSearch } from \"../../actions/load.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoads, searchLoads, selectLoad } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport LoadDetailModal from \"./LoadDetailModal\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n    TableContainer: {\r\n        borderBottom: \"none\",\r\n    },\r\n    loadSearchbar: {\r\n        textAlign: \"right\",\r\n        paddingBottom: 10,\r\n    },\r\n});\r\n\r\nexport default function LoadsStatus({ resetSearchField, listBarType }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(),\r\n        { loads = [], loads_pagination: { limit = 15, total, currPage } = {}, rowsPerPage = 15,\r\n            search: { query, loads: sLoads, page: sPage, limit: sLimit, total: sTotal } = {} } = useSelector(state => state.load),\r\n        [modal, setModal] = useState({ open: false, data: {} });\r\n    // const { query, loads: sLoads, page: sPage, limit, total: sTotal } = search;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getLoads())\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        if (query)\r\n            dispatch(searchLoads(newPage - 1, limit, query, listBarType));\r\n        else\r\n            dispatch(getLoads(newPage - 1, rowsPerPage, listBarType));\r\n    };\r\n\r\n    const tableConfig = {\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'inherit',\r\n        page: parseInt(currPage) - 1,\r\n        count: total,\r\n        limit,\r\n        hover: true,\r\n        onRowClick: (row) => {\r\n            if (listBarType === 'history') {\r\n                setModal({ open: true, data: row })\r\n            }\r\n        },\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number'\r\n            },\r\n\r\n            {\r\n                id: 'pickupCity',\r\n                label: 'Pickup City/State',\r\n                renderer: ({ row: { pickup = [] } = {} }) => {\r\n                    const [pickupData = {}] = pickup,\r\n                        { pickupCity = '' } = pickupData;\r\n                    return pickupCity;\r\n                }\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: 'dropCity',\r\n                label: 'Drop City/State',\r\n                renderer: ({ row: { drop = [] } = {} }) => {\r\n                    const [dropData = {}] = drop,\r\n                        { dropCity = '' } = dropData;\r\n                    // console.log('row for pickup city', row)\r\n                    return dropCity\r\n                }\r\n            },\r\n\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row)\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: () => {\r\n                    return \"C.H Robinson\"\r\n                },\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <EnhancedTable config={tableConfig} data={loads} loading={loading} />\r\n                {modal.open && <LoadDetailModal\r\n                    listBarType={listBarType}\r\n                    modalEdit={true}\r\n                    open={true}\r\n                    load={modal.data}\r\n                    handleClose={() => {\r\n                        setModal({ open: false, data: {} });\r\n                        // enableEdit(false);\r\n                        selectLoad();\r\n                    }}\r\n                />}\r\n            </Fragment>\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            {count > 10 &&\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {data.length} of {count} entries</Typography>}\r\n            {data.length !== count && <StyledPagination\r\n                count={Math.ceil(count / limit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                page={page + 1}\r\n                size=\"medium\"\r\n                onChange={onChange}\r\n            />}\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.isObject(row) ? _.get(row, id, emptyState) : (row[id] || emptyState);\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length;\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        {showRefresh && <Stack alignItems='flex-end'>\r\n            <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>\r\n        </Stack>}\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 64px)' : 'auto'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport { requestDelete, requestGet, requestPatch } from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 15, module = \"\") =>\r\n    async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1\r\n            }&limit=${limit}&module=${module}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n    async (dispatch) => {\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { data: [], loading: true },\r\n      });\r\n\r\n      try {\r\n        const url = `/api/load/invoice_loads?page=${page + 1\r\n          }&limit=${limit}&search=${search}`;\r\n        const response = await axios.get(url);\r\n        const { loads, total, totalPages } = response.data;\r\n        dispatch({\r\n          type: INVOICE_LOAD_FETCHED,\r\n          payload: { data: loads, page, limit, search, total, totalPages, loading: false },\r\n        });\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/load\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_LOAD,\r\n      payload: res.data,\r\n    });\r\n\r\n    notification(\"Load Created\")\r\n    if (callback) {\r\n      callback(res.status === 200, res.data)\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {notification, setAlert} from \"./alert\";\r\nimport { GET_DRIVERS, GET_DRIVER, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER, DRIVER_ERROR, DELETE_DRIVER_LOAD } from \"./types.js\";\r\n\r\n//get current users drivers\r\nexport const getDrivers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/drivers/me\");\r\n    Object.assign(res.data, {timestamp: new Date()})\r\n    dispatch({\r\n      type: GET_DRIVERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err?.response?.statusText, status: err?.response?.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addDriver = (formData, isEdit) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/drivers\", formData, config);\r\n\r\n    notification(res.data.message);\r\n    dispatch(getDrivers());\r\n\r\n  } catch (err) {\r\n    let error = err.errors && Array.isArray(err.errors) && err.errors.length ? err.errors[0].msg : err.message;\r\n    dispatch(setAlert( error, \"error\"));\r\n    // dispatch({\r\n    //   type: DRIVER_ERROR,\r\n    //   payload: { msg: err.response.statusText, status: err.response.status },\r\n    // });\r\n  }\r\n};\r\n\r\n//patch driver\r\nexport const patchDriverLoads = (driver_id, loads) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.patch(`/api/drivers/loads?driver_id=${driver_id}`, { loads: loads });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: PATCH_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver\r\nexport const deleteDriver = (driver_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/`, { data: { driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers.splice(index, 1);\r\n    }\r\n    notification('Deleted Successfully')\r\n    dispatch({\r\n      type: DELETE_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver load\r\nexport const deleteDriverLoads = (driver_id, load_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/loads`, { data: { load_id: load_id, driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: DELETE_DRIVER_LOAD,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}","import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import {Button, Grid, Paper, Stack, Typography} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {getCheckStatusIcon} from \"../../../utils/utils\";\r\nimport Modal from \"../../Atoms/Modal\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {PRIMARY_BLUE} from \"../../layout/ui/Theme\";\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport {Alert} from \"../../Atoms\";\r\n\r\nconst FileContainer = styled(Paper)(({}) => ({\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    padding: 8,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n}))\r\n\r\nconst FileViewer = ({files = [], onClose, onRemoveAll}) => {\r\n    // console.log(files)\r\n    const config={\r\n        title: 'Edit File'\r\n    }\r\n    const Files = (files || []).map(file => {\r\n        return <FileContainer elevation={3}>\r\n            <DescriptionIcon sx={{color: PRIMARY_BLUE}} />\r\n            <Typography variant='subtitle2' align='center' sx={{width: 'inherit', overflow: 'hidden', textOverflow: 'ellipsis'}}>{file.name}</Typography>\r\n        </FileContainer>\r\n    })\r\n\r\n    return <Modal config={config} closeCallback={onClose}>\r\n        <Grid container spacing={2} sx={{display: 'grid'}}>\r\n            <Grid item>\r\n                <Alert config={{open: true, message: 'Previous files, if exist will be overwritten with new files.', severity: 'info'}} />\r\n            </Grid>\r\n            {files && <Grid item>\r\n                <Button variant='outlined' sx={{float: 'right'}} onClick={onRemoveAll} color='error'>Remove All</Button>\r\n            </Grid>}\r\n            <Grid item>\r\n                <Grid container gap={2} sx={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\r\n                    {Files}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nconst LoadDetailsUploadComponent = (props) => {\r\n    const [fileViewConfig, setFileViewConfig] = useState({open: false, config: {}})\r\n    const {\r\n        edit, rateConfirmation = [], proofDelivery = [], accessorialsFiles = [], handleFileChange, rateConfirmationRef,\r\n        proofDeliveryRef, accessorialsRef, state, rateConFile, podFile, formAccessorialsFiles\r\n    } = props;\r\n    // console.log(rateConFile)\r\n    // console.log(accessorialsFiles)\r\n\r\n    function viewClickHandler(file, name, e) {\r\n        e.stopPropagation()\r\n        setFileViewConfig({open: true, config: [...file], name})\r\n    }\r\n\r\n    function onFileViewClose() {\r\n        setFileViewConfig({open: false, config: null});\r\n    }\r\n\r\n    function onRemoveAll() {\r\n        handleFileChange({target: { name: fileViewConfig.name, files: null }})\r\n        onFileViewClose();\r\n    }\r\n\r\n    return (<Stack sx={{alignItems: 'end'}}>\r\n        {fileViewConfig.open && <FileViewer files={fileViewConfig.config} onClose={onFileViewClose} onRemoveAll={onRemoveAll} />}\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {rateConfirmation.length ? (rateConfirmation.map((roc, idx) => {\r\n                return (<><span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                          <a href={roc} target=\"_blank\">\r\n                            Rate Con-{idx + 1}\r\n                          </a>\r\n                        </span></>)\r\n            })) : (<span>Rate Con</span>)}\r\n            <span>\r\n                      {edit ? <Fragment>\r\n                              {rateConFile\r\n                                  ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, rateConFile, 'rateConfirmation')} startIcon={<OpenInNewIcon />}>\r\n                                        View\r\n                                    </Button>\r\n                                  : <label htmlFor=\"contained-button-file1\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"rateConfirmation\"\r\n                                      disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                      onChange={handleFileChange}\r\n                                      ref={rateConfirmationRef}\r\n                                      id=\"contained-button-file1\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      {'Attach'}\r\n                                  </Button>\r\n                              </label>}\r\n                      </Fragment>\r\n                          : getCheckStatusIcon(!!rateConfirmation.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {proofDelivery.length ? (proofDelivery.map((pod, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={pod} target=\"_blank\">\r\n                              POD-{idx + 1}\r\n                            </a>\r\n                          </span>\r\n                </>)\r\n            })) : (<span>POD</span>)}\r\n            <span>\r\n                      {edit ? podFile ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, podFile, 'proofDelivery')} startIcon={<OpenInNewIcon />}>\r\n                                  View\r\n                              </Button>\r\n                              : <label htmlFor=\"contained-button-file2\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"proofDelivery\"\r\n                                      disabled={!edit}\r\n                                      onChange={handleFileChange}\r\n                                      ref={proofDeliveryRef}\r\n                                      id=\"contained-button-file2\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      Attach\r\n                                  </Button>\r\n                              </label>\r\n                          : getCheckStatusIcon(!!proofDelivery.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2}>\r\n            {accessorialsFiles.length ? (accessorialsFiles.map((acc, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={acc} target=\"_blank\">\r\n                              Accessorials-{idx + 1}\r\n                            </a>\r\n                          </span></>)\r\n            })) : (<span>Accessorials</span>)}\r\n            <span>\r\n                      {edit ? formAccessorialsFiles\r\n                          ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, formAccessorialsFiles, 'accessorialsFiles')} startIcon={<OpenInNewIcon />}>\r\n                              View\r\n                          </Button>\r\n                          : <Fragment>\r\n                          <label htmlFor=\"contained-button-file3\">\r\n                              <input\r\n                                  style={{display: 'none'}}\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  name=\"accessorialsFiles\"\r\n                                  disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                  onChange={handleFileChange}\r\n                                  ref={accessorialsRef}\r\n                                  id=\"contained-button-file3\"\r\n                              />\r\n                              <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                  Attach\r\n                              </Button>\r\n                          </label>\r\n                      </Fragment> : getCheckStatusIcon(!!accessorialsFiles?.length)}\r\n                    </span>\r\n        </Stack>\r\n    </Stack>)\r\n}\r\n\r\nexport default LoadDetailsUploadComponent;","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  Modal,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport moment from \"moment\";\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport \"./style.css\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { useStyles } from \"./styles\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport { LOAD_STATUSES } from \"../constants\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport LoadDetailsUploadComponent from \"./components/LoadDetailsUploadComponent\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose,\r\n  listBarType,\r\n  load,\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef();\r\n  const accessorialsRef = useRef(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const assignedToOptions = state.driver.drivers.map(({ user = {} }) => {\r\n    const { name = '', _id = '' } = user || '';\r\n    return {\r\n      name, _id\r\n    }\r\n  }).filter((driver) => !!driver?._id) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n  useEffect(() => {\r\n    const drivers = state.driver.drivers;\r\n    if (drivers.length > 0) {\r\n      // console.log(user._id, state.driver.drivers);\r\n      // setForm({ ...form, assignedTo: user });\r\n      // for (let driver of drivers) {\r\n      //     if (driver.loads.length > 0) {\r\n      //         for (let load of driver.loads) {\r\n      //             if (load._id === _id) {\r\n      //                 setForm({ ...form, assignedTo: user._id });\r\n      //             }\r\n      //         }\r\n      //     }\r\n      // }\r\n    }\r\n  }, [state.driver.drivers]);\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if (isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n      setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }] });\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n      setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {\r\n      'proofDelivery': [],\r\n      'rateConfirmation': [],\r\n      'accessorialsFiles': []\r\n    };\r\n    alpha.forEach((item = {}, idx) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      bucketFiles[fileType].push(fileLocation)\r\n\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = [], proofDelivery = [], accessorialsFiles = [] } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }}>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n\r\n      >\r\n        <div style={{ width: '90%' }} className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"status\"\r\n                        value={form.status}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {LOAD_STATUSES.map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"assignedTo\"\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                        value={form.assignedTo}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((name) => (\r\n                          <MenuItem\r\n                            key={name.name}\r\n                            value={name._id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <Box sx={{ position: 'relative' }}>\r\n                    <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                      <DoneIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>\r\n                    {isProcessingAsyncRequest && <CircularProgress\r\n                      size={65}\r\n                      sx={{\r\n                        color: green[500],\r\n                        position: 'absolute',\r\n                        top: -6,\r\n                        left: -6,\r\n                        zIndex: 1,\r\n                      }}\r\n                    />}\r\n                  </Box>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <DatePicker\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupDate : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleDateChange(date, \"pickup\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupDate : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleDateChange(date, \"pickup\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    label='In Time'\r\n                                    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].out_time : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DatePicker\r\n                                  value={form.drop[0] ? form.drop[0].dropDate : \"\"}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  value={form.drop[0] ? form.drop[0].dropDate : \"\"}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  label='In Time'\r\n                                  value={form.drop[0] ? form.drop[0].in_time : \"\"}\r\n                                  onChange={(date) =>\r\n                                    handleInOutTime(date, \"drop\", \"in_time\")\r\n                                  }\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  label='Out Time'\r\n                                  value={form.drop[0] ? form.drop[0].out_time : \"\"}\r\n                                  onChange={(date) =>\r\n                                    handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <LoadDetailsUploadComponent\r\n                    edit={edit}\r\n                    rateConfirmation = {rateConfirmation}\r\n                    proofDelivery = {proofDelivery}\r\n                    accessorialsFiles = {accessorialsFiles}\r\n                    handleFileChange={handleFileChange}\r\n                    rateConfirmationRef={rateConfirmationRef}\r\n                    proofDeliveryRef={proofDeliveryRef}\r\n                    accessorialsRef={accessorialsRef}\r\n                    state={state}\r\n                    rateConFile={form.rateConfirmation}\r\n                    podFile={form.proofDelivery}\r\n                    formAccessorialsFiles={form.accessorialsFiles}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n                {/*<Typography item sx={{fontWeight: 600, fontSize:18, textAlign: 'center'}}>Pickup</Typography>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Address\"*/}\r\n                {/*      value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"pickup\", \"pickupAddress\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={pickup && pickup[0] ? pickup[0].pickupAddress : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid*/}\r\n                {/*      container*/}\r\n                {/*      spacing={2}*/}\r\n                {/*      className={classes.rootLoadDetailModal}*/}\r\n                {/*    >*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"City\"*/}\r\n                {/*          value={*/}\r\n                {/*            form.pickup[0] ? form.pickup[0].pickupCity : \"\"*/}\r\n                {/*          }*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupCity\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          placeholder=\"State\"*/}\r\n                {/*          value={*/}\r\n                {/*            form.pickup[0] ? form.pickup[0].pickupState : \"\"*/}\r\n                {/*          }*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupState\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"Zip\"*/}\r\n                {/*          value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupZip\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : (*/}\r\n                {/*    <>*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupCity : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupState : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupZip : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*    </>*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Typography sx={{fontWeight:600, mb:1, textAlign: 'center'}}>Pickup Time</Typography>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid container>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleDateChange(date, \"pickup\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardDatePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"date-picker-dialog\"*/}\r\n                {/*            format=\"MM/dd/yyyy\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleDateChange(date, \"pickup\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : pickup && pickup[0] ? (*/}\r\n                {/*    moment(pickup[0].pickupDate).format(\"LLL\")*/}\r\n                {/*  ) : (*/}\r\n                {/*    \"\"*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Grid container>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"In Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : pickup && pickup[0] && pickup[0].in_time ? (*/}\r\n                {/*        \"In time: \" + moment(pickup[0].in_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"Out Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].out_time : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"pickup\", \"out_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : pickup && pickup[0] && pickup[0].out_time ? (*/}\r\n                {/*        \"Out time: \" +*/}\r\n                {/*        moment(pickup[0].out_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*  </Grid>*/}\r\n                {/*</p>*/}\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                {/*<Typography item sx={{fontSize:18, textAlign: 'center', fontWeight:600,}}>Drop</Typography>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Receiver Name\"*/}\r\n                {/*      value={form.drop[0] ? form.drop[0].receiverName : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"drop\", \"receiverName\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={drop && drop[0] ? drop[0].receiverName : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Address\"*/}\r\n                {/*      value={form.drop[0] ? form.drop[0].dropAddress : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"drop\", \"dropAddress\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={drop && drop[0] ? drop[0].dropAddress : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid*/}\r\n                {/*      container*/}\r\n                {/*      spacing={2}*/}\r\n                {/*      className={classes.rootLoadDetailModal}*/}\r\n                {/*    >*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"City\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropCity : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropCity\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"State\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropState : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropState\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"Zip\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropZip : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropZip\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : (*/}\r\n                {/*    <>*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropCity : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropState : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropZip : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*    </>*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Typography sx={{fontWeight:600, mb:1}}>Drop Time</Typography>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid container>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                {/*            onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                {/*          <DatePicker*/}\r\n                {/*              // label=\"Basic example\"*/}\r\n                {/*              value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                {/*              onChange={(newValue) => {*/}\r\n                {/*                handleDateChange(newValue, \"drop\")*/}\r\n                {/*              }}*/}\r\n                {/*              renderInput={(params) => <TextField {...params} />}*/}\r\n                {/*          />*/}\r\n                {/*        </LocalizationProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : drop && drop[0] ? (*/}\r\n                {/*    moment(drop[0].dropDate).format(\"LLL\")*/}\r\n                {/*  ) : (*/}\r\n                {/*    \"\"*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Grid container>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"In Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : drop && drop[0] && drop[0].in_time ? (*/}\r\n                {/*        \"In time: \" + moment(drop[0].in_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"Out Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : drop && drop[0] && drop[0].out_time ? (*/}\r\n                {/*        \"Out time: \" + moment(drop[0].out_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*  </Grid>*/}\r\n                {/*</p>*/}\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n"],"sourceRoot":""}