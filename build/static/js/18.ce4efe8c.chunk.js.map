{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/MoveToMyLoads.js","components/invoices/InvoicesList.js","components/Atoms/Modal.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref3","handleClose","anchorEl","onAddNewService","_useState","useState","_useState2","_slicedToArray","list","setList","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref4","services","_React$useState","React","_React$useState2","setAnchorEl","servicesComp","useMemo","s","_objectSpread","event","currentTarget","Title","_ref$sx","_ref$variant","variant","_Typography","fontWeight","DialogComponent","_ref2","transition","getTotal","pdf","setPdf","addService","ref","useRef","_ref3$brokerage","brokerage","_ref3$loadNumber","loadNumber","_ref3$pickup","pickup","_ref3$drop","drop","_ref3$accessorials","rate","accessorials","_ref3$proofDelivery","proofDelivery","_ref3$rateConfirmatio","rateConfirmation","bucketFiles","_pickup$","receiverName","pickupAddress","pickupCity","pickupState","pickupZip","console","log","docFileViewer","doc","src","fileLocation","alt","fileName","reactToPrintContent","useCallback","current","reactToPrintTrigger","_Dialog","class","PaperProps","TransitionComponent","maxWidth","_DialogContent","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","height","alignItems","gap","htmlFor","background","borderRadius","accept","style","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","Invoice","_ref6","_ref6$match","match","_ref6$match2$params","params","_ref6$match2$params2$","history","setOpen","_useState3","_useState4","invoices","useSelector","state","load","_useState5","_useState6","setServices","find","invoice","_id","useEffect","Transition","forwardRef","props","useHistory","_Zoom","onExited","goBack","reduce","acc","service","obj","_toConsumableArray","_ref7","row","clone","splice","config","title","preventBackdropClick","MoveToMyLoads","onCloseUrl","getInvoices","_props$match","_props$match2$params","setValue","_useMutation","useMutation","mutation","loading","statuses","LOAD_STATUSES","status","equalsIgnoreCase","disabled","Modal","component","onSubmit","preventDefault","replace","Select","options","LoadingButton","fullWidth","isLoading","loadingText","InvoicesList","setSelectedLoad","resetSearchField","listBarType","dispatch","load_selected","useDispatch","path","useRouteMatch","setLoading","_useSelector","page","limit","role","total","_state$auth","auth","user","show","loads","_useSelector2","openBoard","chRobinsonLoads","shallowEqual","totalCount","setTimeout","resetLoadsSearch","getInvoiceLoads","rowCellPadding","headerCellSx","pt","pb","emptyMessage","count","columns","renderer","date","moment","pickUpByDate","isValid","format","_ref5","dropCity","dropState","deliverBy","_ref8","getParsedLoadEquipment","_ref8$modesString","modesString","_ref8$standard","standard","_ref9","_ref10$weight","weight","_ref10$weight2$pounds","pounds","_ref11","emptyState","visible","_ref12","Link","to","DescriptionIcon","_ref13","ReplayIcon","_Box","mt","EnhancedTable","Route","render","exact","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","showClose","titleStyles","other","_objectWithoutProperties","_excluded","DialogTitle","m","IconButton","position","left","top","palette","grey","CloseIcon","_props$config","_config$title","_config$closeUrl","closeUrl","_config$showClose","_config$paperProps","paperProps","_config$preventBackdr","_config$titleStyles","useTheme","fullScreen","_useMediaQuery","breakpoints","down","arguments","undefined","addEvent","window","removeEvent","push","ENHANCED_DASHBOARD","DialogContent","dividers","borderTop"],"mappings":"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","file":"static/js/18.ce4efe8c.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const value = parseInt(e.target.value)\r\n        const name = e.target.name\r\n        if (value < 1) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) * value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)}>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst InvoiceDataTableRows = ({ price = 99 }) => {\r\n    return (<Fragment>\r\n        <tr className='InvoiceDataTableRows'>\r\n            <td>9</td>\r\n            <td>a</td>\r\n            <td>b</td>\r\n            <td>c</td>\r\n            <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n        </tr>\r\n    </Fragment>)\r\n}\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />} aria-describedby={'jugal'}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    Divider,\r\n    Grid,\r\n    Stack,\r\n    Typography,\r\n    Zoom,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport { getCheckStatusIcon } from \"../../utils/utils\";\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst config = {\r\n    rowCellPadding: \"inherit\",\r\n    columns: [\r\n        {\r\n            id: 'serviceName',\r\n            label: 'Service'\r\n        },\r\n        {\r\n            id: 'quantity',\r\n            label: 'Quanity'\r\n        },\r\n        {\r\n            id: 'price',\r\n            label: 'Price'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            label: 'Amount'\r\n        },\r\n    ]\r\n}\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    setPdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {},\r\n        [{ receiverName = \"\" }] = drop || [],\r\n        [{ pickupAddress, pickupCity, pickupState, pickupZip }] = pickup;\r\n    console.log(bucketFiles)\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} />\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return ref.current;\r\n    }, [ref.current]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            class=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <div ref={ref} className=\"printArea\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n                    >\r\n                        <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: landscape;\\ }\\\r\n          \"}</style>\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Stack spacing={1}>\r\n                                        <Stack>\r\n                                            <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                                {'Sunny Freight'}\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack>\r\n                                        <Stack>\r\n                                            <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                                Invoice\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <InputField label=\"Notes\" type=\"textarea\" />\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n                        <Grid xs={12} item>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item>\r\n                                    <Stack spacing={1} sx={{ p: 3 }}>\r\n                                        <Stack>\r\n                                            <Typography>Bill To:</Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                                        <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                            <Title>Load Number: </Title>\r\n                                            <Title>{loadNumber}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n                        <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                            <Stack sx={{ textAlign: \"right\" }}>\r\n                                <Title>Total: {getTotal() || '- -'}</Title>\r\n                            </Stack>\r\n                            <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                                <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                                    <InvoiceServiceWrapper\r\n                                        onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                                        deleteService={deleteService}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid xs={3} item>\r\n                                    {/* <Button variant={\"contained\"} size={\"small\"} className={'addServicesInvoice'}\r\n                                  onClick={addService}>\r\n                                  Add Services\r\n                              </Button> */}\r\n                                </Grid>\r\n                                <Grid xs={6} item>\r\n                                    <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'rateCon'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>Rate Con</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'pod'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>\r\n                                                    Proof Of Delivery\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'accessorials'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>Accessorials</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!accessorials.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                                    <ReactToPrint\r\n                                        content={reactToPrintContent}\r\n                                        documentTitle=\"Invoice\"\r\n                                        // onBeforeGetContent={handleOnBeforeGetContent}\r\n                                        // onBeforePrint={handleBeforePrint}\r\n                                        removeAfterPrint\r\n                                        trigger={reactToPrintTrigger}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {docFileViewer}\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {}, history }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const invoices = useSelector((state) => state.load.invoices.data) || [],\r\n        [services, setServices] = useState([]),\r\n        data = invoices.find((invoice) => invoice._id === id);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.price) + acc, 0)\r\n        return \"$\" + total.toFixed(2)\r\n    }, [services])\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                setPdf={setPdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveBackToMyLoads'),\r\n        statuses = LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={config}>\r\n        <Grid container component='form' sx={{}} spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport {Box, Button} from \"@mui/material\";\r\nimport { resetLoadsSearch } from '../../actions/load.js';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { getInvoiceLoads } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport MoveToMyLoads from \"./MoveToMyLoads\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\n\r\nexport default function InvoicesList({ setSelectedLoad, resetSearchField, listBarType, load_selected }) {\r\n    const dispatch = useDispatch();\r\n    const {path} = useRouteMatch();\r\n    const [loading, setLoading] = useState(true);\r\n    const { page, limit, total } = useSelector(state => state.load.invoices);\r\n    const { role } = useSelector(state => state.auth?.user) || {};\r\n    const invoices = useSelector(state => state.load.invoices.data);\r\n    const [modalEdit, enableEdit] = useState(false);\r\n    const [open, setOpen] = useState({ show: false, data: {} });\r\n    const loads = useSelector(state => state.load.loads);\r\n    const { loads: chLoads = [], totalCount } = useSelector(state => state.openBoard.chRobinsonLoads, shallowEqual);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        getInvoices();\r\n        // dispatch(getCHLoads(true));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        }\r\n    }, []);\r\n\r\n    const getInvoices = () => {\r\n        dispatch(getInvoiceLoads());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInvoices();\r\n    }, [loads]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(getInvoiceLoads(newPage, limit));\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const limit = event.target.value;\r\n        dispatch(getInvoiceLoads(0, limit));\r\n    };\r\n\r\n    const config = {\r\n        rowCellPadding: \"inherit\",\r\n        headerCellSx: { pt: 1, pb: 1 },\r\n        emptyMessage: 'No Invoices found',\r\n        page,\r\n        count: totalCount,\r\n        limit,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row) || {}\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"weight\",\r\n                label: \"Weight\",\r\n                renderer: ({ row }) => {\r\n                    let { weight: { pounds = \"\" } = {} } = row || {};\r\n                    if (pounds) pounds = pounds + \" lbs\";\r\n                    return <Fragment>{pounds}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({ row }) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: ['driver', 'admin', 'superAdmin', 'ownerOperator'].includes(role),\r\n                renderer: ({ row }) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<DescriptionIcon />}\r\n                    >\r\n                        Create Invoice\r\n                    </Button>\r\n                }\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: ['driver', 'admin', 'superAdmin', 'ownerOperator'].includes(role),\r\n                renderer: ({ row }) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/moveToMyLoads/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<ReplayIcon />}\r\n                    >\r\n                        My loads\r\n                    </Button>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <Fragment>\r\n                <EnhancedTable config={config} data={invoices} />\r\n                <Route path={path + '/moveToMyLoads/:id'} render={(props) => <MoveToMyLoads onCloseUrl={path} getInvoices={getInvoices} {...props} />} />\r\n                <Route path={path + '/:id'} exact component={Invoice} onCloseUrl={path} />\r\n            </Fragment>\r\n        </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n"],"sourceRoot":""}