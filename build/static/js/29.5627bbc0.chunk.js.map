{"version":3,"sources":["actions/users.js","components/users/UserForm.js","components/users/UsersList.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx"],"names":["fetchUsers","page","arguments","length","undefined","limit","async","dispatch","type","FETCH_USERS","success","data","requestGet","uri","concat","notification","message","FETCH_USERS_SUCCEED","payload","err","FETCH_USERS_FAILED","openModal","OPEN_USER_MODAL","initialState","email","password","role","firstName","lastName","add","UserSettings","getUserPermissionsByDashboardId","UserForm","mutation","loading","isSaving","useMutation","form","setForm","useState","alertConfig","setAlertConfig","open","severity","error","user","useSelector","state","users","updateUser","isSavingUpdate","_id","auth","allRoles","roles","useDispatch","userRoles","setUserRoles","useEffect","equalsIgnoreCase","ROLES","superadmin","newRoles","filter","item","prev","_allRoles$","handleClose","rolePermissionId","f","handleChange","_ref","name","value","RESET_SELECTED_USER","afterSubmit","_ref2","closeAlert","_jsxs","_Fragment","children","_jsx","Button","color","variant","onClick","handleClickOpen","disabled","Dialog","fullWidth","maxWidth","onClose","PaperProps","sx","width","DialogTitle","id","textAlign","PRIMARY_BLUE","style","DialogContent","p","overflow","className","noValidate","onSubmit","e","preventDefault","roleName","find","_role","dataToUpdate","getDiff","local","actual","diffWithVal","localKeys","Object","keys","key","alert","isEmailValid","Grid","container","spacing","direction","Alert","config","inStyles","pl","Input","onChange","autoFocus","trimValue","label","required","Password","Select","options","labelKey","valueKey","xs","justifyContent","display","LoadingButton","isLoading","delete","hasDeletePermission","edit","Actions","_Box","UsersList","list","total","afterDelete","emptyMessage","count","onPageChange","handleChangePage","event","newPage","rowCellPadding","showRefresh","onPageSizeChange","columns","emptyState","renderer","_ref3","row","valueFormatter","getRoleNameString","_ref4","Fragment","_Button","mr","SELECT_USER_TO_EDIT","showDelete","afterSuccessCb","EnhancedTable","onRefetch","actions","CircularIndeterminate","props","height","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","Typography","fontSize","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","Tooltip","title","placement","_IconButton","bind","cell","i","get","hover","cursor","getTableCell","_ref6","history","isRefetching","isPaginationLoading","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","ref","React","useRef","isValidElement","url","push","stopPropagation","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","_ref$current","current","table","calculatedHeight","offsetHeight","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","window","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo"],"mappings":"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","file":"static/js/29.5627bbc0.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    FETCH_USERS_SUCCEED,\r\n    FETCH_USERS_FAILED,\r\n    FETCH_USERS,\r\n    ADMIN_REG_USER,\r\n    ADMIN_REG_USER_FAILED,\r\n    SELECT_USER_TO_EDIT,\r\n    RESET_SELECTED_USER,\r\n    INIT_ADMIN_UPDATE_USER,\r\n    ADMIN_UPDATE_USER_SUCCEED,\r\n    ADMIN_UPDATE_USER_FAILED,\r\n    ADMIN_DELETE_USER_FAILED,\r\n    OPEN_USER_MODAL,\r\n    CLOSE_USER_MODAL\r\n} from './types';\r\nimport {notification} from \"./alert\";\r\nimport {requestDelete, requestGet} from \"../utils/request\";\r\n\r\nexport const callApi = () => ({\r\n    type: FETCH_USERS\r\n});\r\n\r\nexport const fetchUsers = (page = 1, limit = 5) => async dispatch => {\r\n    try {\r\n        dispatch({type: FETCH_USERS});\r\n        const {success, data} = await requestGet({uri: `/api/users?page=${page}&limit=${limit}`});\r\n        if(!success){\r\n            notification(data.message, 'error');\r\n        }\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCEED,\r\n            payload: data || []\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FETCH_USERS_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = ({email, password, role}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_REG_USER});\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password, role});\r\n        const api = await axios.post('/api/users', body, config);\r\n        if (api.status === 200) {\r\n            notification(\"User Added\")\r\n            const {limit} = getState().users;\r\n            dispatch(fetchUsers(0, +limit));\r\n        }\r\n    } catch (err) {\r\n        let errorToSend = err.message;\r\n        if (err.response && err.response.data) {\r\n            errorToSend = err.response.data.errors[0].msg\r\n        }\r\n        dispatch({\r\n            type: ADMIN_REG_USER_FAILED,\r\n            payload: errorToSend\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUserToEdit = (user) => ({\r\n    type: SELECT_USER_TO_EDIT,\r\n    payload: user\r\n});\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n    try {\r\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\r\n        const res = await axios.put(`/api/users/${id}`, user);\r\n        if(res.status === 200){\r\n            notification('User Updated')\r\n            dispatch({\r\n                type: ADMIN_UPDATE_USER_SUCCEED,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_UPDATE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, callback) => async (dispatch, getState) => {\r\n    try {\r\n        const {data: data = '', success} = await requestDelete({uri: `/api/users/${id}`});\r\n        if(success) {\r\n            const {page, limit} = getState().users;\r\n            notification(data);\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n        else {\r\n            notification(data.message, 'error')\r\n        }\r\n        if(callback) callback({success, data});\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_DELETE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetUserSelected = () => ({type: RESET_SELECTED_USER});\r\n\r\nexport const openModal = () => ({type: OPEN_USER_MODAL});\r\nexport const closeModal = () => ({type: CLOSE_USER_MODAL});\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetUserSelected,\r\n    fetchUsers,\r\n    openModal,\r\n} from \"../../actions/users\";\r\nimport {PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid} from \"../../utils/utils\";\r\nimport {ROLES} from \"../constants\";\r\nimport {Alert, Input, LoadingButton, Password, Select} from \"../Atoms\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"dispatch\",\r\n    firstName: '',\r\n    lastName: ''\r\n};\r\n\r\n// const ADD_USERS_ROLES_PERMITTED = [ROLES.superadmin, ROLES.admin, ROLES.dispatch];\r\nconst {add = false} = UserSettings.getUserPermissionsByDashboardId('users');\r\n\r\nconst UserForm = () => {\r\n    const {mutation, loading: isSaving} = useMutation('/api/users')\r\n    const [form, setForm] = useState({...initialState}),\r\n        [alertConfig, setAlertConfig] = useState({open: false, severity: 'error', message: ''});\r\n    const {loading, open, error, user, page, limit} = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const {mutation: updateUser, loading: isSavingUpdate} = useMutation(`/api/users/${user?._id}`)\r\n    const {user: auth = {}, allRoles = []} = useSelector((state) => state.auth);\r\n    const {roles = []} = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [userRoles, setUserRoles] = useState();\r\n\r\n    useEffect(() => {\r\n        if (auth?.role.equalsIgnoreCase(ROLES.superadmin)) {\r\n            setUserRoles(roles)\r\n        } else {\r\n            const newRoles = roles.filter(\r\n                (item) =>\r\n                    item === \"driver\" ||\r\n                    item === \"afterhours\" ||\r\n                    item === \"load planner\" ||\r\n                    item === \"support\" ||\r\n                    item === 'dispatch' ||\r\n                    item === 'ownerOperator'\r\n            );\r\n            setUserRoles(newRoles);\r\n        }\r\n        setForm((prev) => ({...prev, role: (allRoles.length) ? allRoles[0]?._id : ''}))\r\n    }, [roles, allRoles.length]);\r\n\r\n    useEffect(() => {\r\n        if (!open) handleClose();\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (+page === 0 && open) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const {email, rolePermissionId, firstName, lastName} = user;\r\n            setForm((f) => ({...f, email, firstName, lastName, role: rolePermissionId}));\r\n            dispatch(openModal());\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChange = ({name, value}) => {\r\n        setForm((f) => ({...f, [name]: value}));\r\n    };\r\n    const handleClose = () => {\r\n        setForm({...initialState});\r\n        dispatch(resetUserSelected());\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const getDiff = (local, actual) => {\r\n        const diffWithVal = {};\r\n        const localKeys = Object.keys(local);\r\n        for (let key of localKeys) {\r\n            if (key !== \"password\" && actual[key] !== local[key])\r\n                diffWithVal[key] = local[key];\r\n            if (key === \"password\" && local[key]) diffWithVal[key] = local[key];\r\n        }\r\n        return diffWithVal;\r\n    };\r\n\r\n    function afterSubmit({success, data}) {\r\n        if (success) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n            notification((user._id ? 'Updated ' : 'Saved ') + 'Successfully');\r\n        } else {\r\n            setAlertConfig({open: true, message: data.message, severity: 'error'});\r\n        }\r\n    }\r\n\r\n    const closeAlert = () => setAlertConfig({...alertConfig, open: false})\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        closeAlert();\r\n        const {email, password, role, firstName} = form;\r\n        const {_id, roleName} = allRoles.find(_role => _role._id === role) || {};\r\n        if (!loading) {\r\n            if (!user) {\r\n                if (!email || !password || !role || !firstName)\r\n                    return alert(\"All required fields should be provided\");\r\n                else if (!isEmailValid(email)) {\r\n                    return alert('Email is not valid');\r\n                } else if (password.length < 6) {\r\n                    return alert('Please enter password with 6 or more characters');\r\n                }\r\n\r\n                await mutation({...form, rolePermissionId: _id, role: roleName}, '', afterSubmit);\r\n            } else {\r\n                const dataToUpdate = getDiff(form, user);\r\n                await updateUser({...dataToUpdate, rolePermissionId: role, role: roleName}, 'put', afterSubmit);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"primary\"\r\n                variant={'contained'}\r\n                onClick={handleClickOpen}\r\n                disabled={!add}\r\n            >\r\n                Add User\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={false}\r\n                maxWidth={\"md\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 400\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\" sx={{textAlign: 'center', color: PRIMARY_BLUE}}>\r\n                    {user ? \"Update\" : \"Add\"} User\r\n                </DialogTitle>\r\n                {error ? <p style={{textAlign: \"center\"}}>{error}</p> : \"\"}\r\n                <DialogContent sx={{p: 0, overflow: 'hidden'}}>\r\n                    <div className=\"\">\r\n                        <form noValidate onSubmit={onSubmit}>\r\n                            <Grid container spacing={2} direction={'column'} sx={{p: 3}}>\r\n                                <Alert config={alertConfig} onClose={closeAlert} inStyles={{pl: 2}} />\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={'firstName'}\r\n                                        value={form.firstName || ''}\r\n                                        onChange={handleChange}\r\n                                        autoFocus\r\n                                        trimValue\r\n                                        label='First Name'\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={'lastName'}\r\n                                        value={form.lastName || ''}\r\n                                        onChange={handleChange}\r\n                                        label='Last Name'\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.email}\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Password\r\n                                        name={\"password\"}\r\n                                        label={\"Password\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.password}\r\n                                        fullWidth\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Select\r\n                                        onChange={handleChange}\r\n                                        label={\"Role\"}\r\n                                        name=\"role\"\r\n                                        value={form.role}\r\n                                        options={allRoles}\r\n                                        labelKey='roleName'\r\n                                        valueKey='_id'\r\n                                        required\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} justifyContent='center' display={'flex'}>\r\n                                    <LoadingButton\r\n                                        isLoading={isSaving || isSavingUpdate}\r\n                                        className=\"\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsers, selectUserToEdit} from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\n\r\nconst {delete: hasDeletePermission, edit} = UserSettings.getUserPermissionsByDashboardId('users');\r\n\r\nconst Actions = () => {\r\n    return <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n        <UserForm />\r\n    </Box>\r\n}\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page = 1, limit = 10, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage, +limit));\r\n    };\r\n\r\n    const onPageSizeChange = ({value}) => {\r\n        dispatch(fetchUsers(1, value));\r\n    };\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users found',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        showRefresh: true,\r\n        onPageSizeChange,\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '', firstName, lastName } }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role',\r\n                valueFormatter: getRoleNameString\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row = {} }) => {\r\n                    const { _id, email, role, rolePermissionId, firstName, lastName } = row;\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        <Button variant='contained' sx={{mr: 1}} disabled={!edit} onClick={() => {\r\n                            dispatch(selectUserToEdit({ _id, email, role, rolePermissionId, firstName, lastName }))\r\n                        }}>\r\n                            Update\r\n                        </Button>\r\n                        <Button variant='contained' disabled={!hasDeletePermission} color='error' onClick={showDelete({\r\n                            message: 'Are you sure you want to delete '+ email + '?',\r\n                            uri: `/api/users/${_id}`,\r\n                            afterSuccessCb: afterDelete\r\n                        })}>\r\n                            Delete\r\n                        </Button>\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} onRefetch={() => dispatch(fetchUsers(+page, +limit))} actions={<Actions />}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n"],"sourceRoot":""}