{"version":3,"sources":["actions/users.js","components/users/UserForm.js","components/users/UsersList.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","utils/helper.js"],"names":["fetchUsers","page","arguments","length","undefined","limit","async","dispatch","type","FETCH_USERS","success","data","requestGet","uri","concat","notification","message","FETCH_USERS_SUCCEED","payload","err","FETCH_USERS_FAILED","openModal","OPEN_USER_MODAL","initialState","email","password","role","UserForm","mutation","loading","isSaving","useMutation","form","setForm","useState","open","error","user","useSelector","state","users","updateUser","isSavingUpdate","_id","auth","roles","useDispatch","userRoles","setUserRoles","useEffect","equalsIgnoreCase","ROLES","superadmin","newRoles","filter","item","handleClose","f","handleChange","_ref","name","value","RESET_SELECTED_USER","afterSubmit","_ref2","_jsxs","_Fragment","children","_jsx","Button","color","variant","onClick","handleClickOpen","Dialog","fullWidth","maxWidth","onClose","PaperProps","sx","width","DialogTitle","id","textAlign","PRIMARY_BLUE","style","DialogContent","p","overflow","className","noValidate","onSubmit","e","preventDefault","dataToUpdate","getDiff","local","actual","diffWithVal","localKeys","Object","keys","key","alert","isEmailValid","Grid","container","spacing","direction","Input","label","onChange","autoFocus","Password","Select","options","map","capitalizeFirstLetter","xs","justifyContent","display","LoadingButton","isLoading","UsersList","list","total","afterDelete","allowedRolesForDispatch","admin","config","emptyMessage","count","onPageChange","handleChangePage","event","newPage","rowCellPadding","showRefresh","columns","emptyState","renderer","row","firstName","lastName","_ref3","userRole","Fragment","includes","_Button","mr","SELECT_USER_TO_EDIT","selectUserToEdit","showDelete","afterSuccessCb","Actions","_Box","EnhancedTable","onRefetch","actions","StyledPagination","styled","Pagination","theme","breakpoints","down","height","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","alignItems","Typography","fontSize","Math","ceil","size","pgNum","CircularIndeterminate","marginLeft","CircularProgress","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","headerCellSx","hasDelete","headers","useMemo","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","_ref4","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","bind","disabled","cell","i","valueFormatter","isObject","get","hover","cursor","getTableCell","_ref6","history","isRefetching","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","ref","React","useRef","isValidElement","url","push","stopPropagation","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","current","table","calculatedHeight","offsetHeight","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","window","position","Spinner","_Table","el","stickyHeader","withRouter","memo","string","charAt","toUpperCase","slice","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor"],"mappings":"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","file":"static/js/29.a8599be8.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    FETCH_USERS_SUCCEED,\r\n    FETCH_USERS_FAILED,\r\n    FETCH_USERS,\r\n    ADMIN_REG_USER,\r\n    ADMIN_REG_USER_FAILED,\r\n    SELECT_USER_TO_EDIT,\r\n    RESET_SELECTED_USER,\r\n    INIT_ADMIN_UPDATE_USER,\r\n    ADMIN_UPDATE_USER_SUCCEED,\r\n    ADMIN_UPDATE_USER_FAILED,\r\n    ADMIN_DELETE_USER_FAILED,\r\n    OPEN_USER_MODAL,\r\n    CLOSE_USER_MODAL\r\n} from './types';\r\nimport {notification} from \"./alert\";\r\nimport {requestDelete, requestGet} from \"../utils/request\";\r\n\r\nexport const callApi = () => ({\r\n    type: FETCH_USERS\r\n});\r\n\r\nexport const fetchUsers = (page = 0, limit = 5) => async dispatch => {\r\n    try {\r\n        dispatch({type: FETCH_USERS});\r\n        const {success, data} = await requestGet({uri: `/api/users?page=${page + 1}&limit=${limit}`});\r\n        if(!success){\r\n            notification(data.message, 'error');\r\n        }\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCEED,\r\n            payload: data || []\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FETCH_USERS_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = ({email, password, role}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_REG_USER});\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password, role});\r\n        const api = await axios.post('/api/users', body, config);\r\n        if (api.status === 200) {\r\n            notification(\"User Added\")\r\n            const {limit} = getState().users;\r\n            dispatch(fetchUsers(0, +limit));\r\n        }\r\n    } catch (err) {\r\n        let errorToSend = err.message;\r\n        if (err.response && err.response.data) {\r\n            errorToSend = err.response.data.errors[0].msg\r\n        }\r\n        dispatch({\r\n            type: ADMIN_REG_USER_FAILED,\r\n            payload: errorToSend\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUserToEdit = (user) => ({\r\n    type: SELECT_USER_TO_EDIT,\r\n    payload: user\r\n});\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n    try {\r\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\r\n        const res = await axios.put(`/api/users/${id}`, user);\r\n        if(res.status === 200){\r\n            notification('User Updated')\r\n            dispatch({\r\n                type: ADMIN_UPDATE_USER_SUCCEED,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_UPDATE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, callback) => async (dispatch, getState) => {\r\n    try {\r\n        const {data: data = '', success} = await requestDelete({uri: `/api/users/${id}`});\r\n        if(success) {\r\n            const {page, limit} = getState().users;\r\n            notification(data);\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n        else {\r\n            notification(data.message, 'error')\r\n        }\r\n        if(callback) callback({success, data});\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_DELETE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetUserSelected = () => ({type: RESET_SELECTED_USER});\r\n\r\nexport const openModal = () => ({type: OPEN_USER_MODAL});\r\nexport const closeModal = () => ({type: CLOSE_USER_MODAL});\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetUserSelected,\r\n    fetchUsers,\r\n    openModal,\r\n} from \"../../actions/users\";\r\nimport {capitalizeFirstLetter} from \"../../utils/helper\";\r\nimport {PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid} from \"../../utils/utils\";\r\nimport {ROLES} from \"../constants\";\r\nimport {Input, LoadingButton, Password, Select} from \"../Atoms\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"dispatch\",\r\n};\r\n\r\nconst UserForm = () => {\r\n    const {mutation, loading: isSaving} = useMutation('/api/users')\r\n    const [form, setForm] = useState({...initialState});\r\n    const {loading, open, error, user, page, limit} = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const {mutation: updateUser, loading: isSavingUpdate} = useMutation(`/api/users/${user?._id}`)\r\n    const {user: auth = {}} = useSelector((state) => state.auth);\r\n    const {roles = []} = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [userRoles, setUserRoles] = useState();\r\n\r\n    useEffect(() => {\r\n        if(auth?.role.equalsIgnoreCase(ROLES.superadmin)) {\r\n            setUserRoles(roles)\r\n        } else {\r\n            const newRoles = roles.filter(\r\n                (item) =>\r\n                    item === \"driver\" ||\r\n                    item === \"afterhours\" ||\r\n                    item === \"load planner\" ||\r\n                    item === \"support\" ||\r\n                    item === 'dispatch' ||\r\n                    item === 'ownerOperator'\r\n            );\r\n            setUserRoles(newRoles);\r\n        }\r\n    }, [roles]);\r\n\r\n    useEffect(() => {\r\n        if (!open) handleClose();\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (+page === 0 && open) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const {email, role} = user;\r\n            setForm((f) => ({...f, email, role}));\r\n            dispatch(openModal());\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChange = ({name, value}) => {\r\n        setForm((f) => ({...f, [name]: value}));\r\n    };\r\n    const handleClose = () => {\r\n        setForm({...initialState});\r\n        dispatch(resetUserSelected());\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const getDiff = (local, actual) => {\r\n        const diffWithVal = {};\r\n        const localKeys = Object.keys(local);\r\n        for (let key of localKeys) {\r\n            if (key !== \"password\" && actual[key] !== local[key])\r\n                diffWithVal[key] = local[key];\r\n            if (key === \"password\" && local[key]) diffWithVal[key] = local[key];\r\n        }\r\n        return diffWithVal;\r\n    };\r\n\r\n    function afterSubmit({success, data}) {\r\n        if (success) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n            notification((user._id ? 'Updated ' : 'Saved ') + 'Successfully');\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!loading) {\r\n            if (!user) {\r\n                const {email, password, role} = form;\r\n                if (!email || !password || !role)\r\n                    return alert(\"All fields are required\");\r\n                else if (!isEmailValid(email)) {\r\n                    return alert('Email is not valid');\r\n                } else if (password.length < 6) {\r\n                    return alert('Please enter password with 6 or more characters');\r\n                }\r\n                await mutation(form, '', afterSubmit);\r\n            } else {\r\n                const dataToUpdate = getDiff(form, user);\r\n                await updateUser(dataToUpdate, 'put', afterSubmit);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"primary\"\r\n                variant={'contained'}\r\n                onClick={handleClickOpen}\r\n            >\r\n                Add User\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={false}\r\n                maxWidth={\"md\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 400\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\" sx={{textAlign: 'center', color: PRIMARY_BLUE}}>\r\n                    {user ? \"Update\" : \"Add\"} User\r\n                </DialogTitle>\r\n                {error ? <p style={{textAlign: \"center\"}}>{error}</p> : \"\"}\r\n                <DialogContent sx={{p: 0, overflow: 'hidden'}}>\r\n                    <div className=\"\">\r\n                        <form noValidate onSubmit={onSubmit}>\r\n                            <Grid container spacing={2} direction={'column'} sx={{p: 3}}>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.email}\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Password\r\n                                        name={\"password\"}\r\n                                        label={\"Password\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.password}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Select\r\n                                        onChange={handleChange}\r\n                                        label={\"Role\"}\r\n                                        name=\"role\"\r\n                                        value={form.role}\r\n                                        options={userRoles &&\r\n                                            userRoles.map((role) => ({id: role, label: capitalizeFirstLetter(role)}))}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} justifyContent='center' display={'flex'}>\r\n                                    <LoadingButton\r\n                                        isLoading={isSaving || isSavingUpdate}\r\n                                        className=\"\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers, selectUserToEdit } from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {ROLES} from \"../constants\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page = 0, limit = 5, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const { user } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage - 1, +limit));\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const new_limit = event.target.value;\r\n        dispatch(fetchUsers(0, new_limit));\r\n    };\r\n\r\n    const allowedRolesForDispatch = [\r\n        ROLES.dispatch,\r\n        ROLES.admin,\r\n        ROLES.superadmin,\r\n    ];\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users found',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        showRefresh: true,\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '', firstName, lastName } }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role'\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role } = {}, role: userRole }) => {\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        {allowedRolesForDispatch.includes(userRole) && (\r\n                                <Button variant='contained' sx={{mr: 1}} onClick={() => {\r\n                                    dispatch(selectUserToEdit({ _id, email, role }))\r\n                                }}>\r\n                                    Update\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {user &&\r\n                            [ROLES.admin, ROLES.superadmin].includes(user.role) &&\r\n                            <Button variant='contained' color='error' onClick={showDelete({\r\n                                message: 'Are you sure you want to delete '+email + '?',\r\n                                uri: `/api/users/${_id}`,\r\n                                afterSuccessCb: afterDelete\r\n                            })}>\r\n                                Delete\r\n                            </Button>}\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    const Actions = () => {\r\n        return <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n            <UserForm />\r\n        </Box>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} onRefetch={() => dispatch(fetchUsers(+page, +limit))} actions={<Actions />}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            {count > 10 &&\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {data.length} of {count} entries</Typography>}\r\n            {data.length !== count && <StyledPagination\r\n                count={Math.ceil(count / limit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                page={page + 1}\r\n                size=\"medium\"\r\n                onChange={onChange}\r\n            />}\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.isObject(row) ? _.get(row, id, emptyState) : (row[id] || emptyState);\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, []);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 64px)' : 'auto'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}"],"sourceRoot":""}