{"version":3,"sources":["actions/users.js","components/users/UserForm.js","components/users/UsersList.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","utils/helper.js"],"names":["fetchUsers","page","arguments","length","undefined","limit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","_yield$requestGet","success","data","wrap","_context","prev","next","type","FETCH_USERS","requestGet","uri","concat","sent","notification","message","FETCH_USERS_SUCCEED","payload","t0","FETCH_USERS_FAILED","stop","_x","apply","openModal","OPEN_USER_MODAL","initialState","email","password","role","UserForm","_useMutation","useMutation","mutation","isSaving","loading","_useState","useState","_objectSpread","_useState2","_slicedToArray","form","setForm","_useSelector","useSelector","state","users","open","error","user","_useMutation2","_id","updateUser","isSavingUpdate","_useSelector2$user","auth","_useSelector3$roles","roles","useDispatch","_useState3","_useState4","userRoles","setUserRoles","useEffect","equalsIgnoreCase","ROLES","superadmin","newRoles","filter","item","handleClose","f","handleChange","name","value","_defineProperty","RESET_SELECTED_USER","getDiff","local","actual","diffWithVal","_i","_localKeys","Object","keys","key","afterSubmit","_ref2","onSubmit","_ref3","e","dataToUpdate","preventDefault","abrupt","alert","isEmailValid","_jsxs","_Fragment","children","_jsx","Button","color","variant","onClick","Dialog","fullWidth","maxWidth","onClose","PaperProps","sx","width","DialogTitle","id","textAlign","PRIMARY_BLUE","style","DialogContent","p","overflow","className","noValidate","Grid","container","spacing","direction","Input","label","onChange","autoFocus","Password","Select","options","map","capitalizeFirstLetter","xs","justifyContent","display","LoadingButton","isLoading","UsersList","list","_useSelector$page","_useSelector$limit","total","afterDelete","allowedRolesForDispatch","admin","config","emptyMessage","count","onPageChange","event","newPage","rowCellPadding","showRefresh","columns","emptyState","renderer","_ref2$row","row","_ref2$row$name","firstName","lastName","_ref3$row","_ref3$row2","userRole","Fragment","includes","_Button","mr","SELECT_USER_TO_EDIT","selectUserToEdit","showDelete","afterSuccessCb","EnhancedTable","onRefetch","_Box","StyledPagination","styled","Pagination","theme","breakpoints","down","height","StyledStack","Stack","TablePagination","_ref4","_ref4$data","_ref4$page","_ref4$count","_ref4$limit","setLength","Array","isArray","alignItems","Typography","fontSize","Math","ceil","size","pgNum","CircularIndeterminate","marginLeft","CircularProgress","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","_ref5","_ref5$columns","_ref5$config","_config$headerCellSx","headerCellSx","hasDelete","headers","useMemo","column","index","_ref6","_ref6$label","_ref6$id","_ref6$visible","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref9","_ref9$data","_ref9$config","handleRowClick","handleDelete","rest","_objectWithoutProperties","_excluded2","_config$dataKey","dataKey","_ref7","_ref7$row","_ref7$columns","_ref7$config","rowIndex","hasDeletePermission","_excluded","_config$hasDelete","_config$rowCellPaddin","_config$onRowClick","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","bind","disabled","cell","i","_ref8","_ref8$id","_ref8$emptyState","valueFormatter","_ref8$visible","isObject","get","hover","cursor","getTableCell","_ref10","_ref10$config","_ref10$data","history","_ref10$loading","isRefetching","tableState","setTableState","dialog","setDialog","_config$columns","_config$hasOnClickUrl","hasOnClickUrl","_config$size","_config$emptyMessage","onRowClickDataCallback","_config$showRefresh","onDelete","deleteMessage","_config$deletePermiss","deletePermissions","_config$containerHeig","containerHeight","_getUserDetail$user$r","getUserDetail","indexOf","ref","React","useRef","url","push","stopPropagation","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","current","table","calculatedHeight","offsetHeight","_Stack","_Refresh","_TableContainer","_Paper","boxShadow","mb","innerHeight","window","position","Spinner","getLoader","_Table","el","stickyHeader","withRouter","memo","string","charAt","toUpperCase","slice","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor"],"mappings":"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","file":"static/js/23.ddc35624.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    FETCH_USERS_SUCCEED,\r\n    FETCH_USERS_FAILED,\r\n    FETCH_USERS,\r\n    ADMIN_REG_USER,\r\n    ADMIN_REG_USER_FAILED,\r\n    SELECT_USER_TO_EDIT,\r\n    RESET_SELECTED_USER,\r\n    INIT_ADMIN_UPDATE_USER,\r\n    ADMIN_UPDATE_USER_SUCCEED,\r\n    ADMIN_UPDATE_USER_FAILED,\r\n    ADMIN_DELETE_USER_FAILED,\r\n    OPEN_USER_MODAL,\r\n    CLOSE_USER_MODAL\r\n} from './types';\r\nimport {notification} from \"./alert\";\r\nimport {requestDelete, requestGet} from \"../utils/request\";\r\n\r\nexport const callApi = () => ({\r\n    type: FETCH_USERS\r\n});\r\n\r\nexport const fetchUsers = (page = 0, limit = 5) => async dispatch => {\r\n    try {\r\n        dispatch({type: FETCH_USERS});\r\n        const {success, data} = await requestGet({uri: `/api/users?page=${page + 1}&limit=${limit}`});\r\n        if(!success){\r\n            notification(data.message, 'error');\r\n        }\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCEED,\r\n            payload: data || []\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FETCH_USERS_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = ({email, password, role}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_REG_USER});\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password, role});\r\n        const api = await axios.post('/api/users', body, config);\r\n        if (api.status === 200) {\r\n            notification(\"User Added\")\r\n            const {limit} = getState().users;\r\n            dispatch(fetchUsers(0, +limit));\r\n        }\r\n    } catch (err) {\r\n        let errorToSend = err.message;\r\n        if (err.response && err.response.data) {\r\n            errorToSend = err.response.data.errors[0].msg\r\n        }\r\n        dispatch({\r\n            type: ADMIN_REG_USER_FAILED,\r\n            payload: errorToSend\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUserToEdit = (user) => ({\r\n    type: SELECT_USER_TO_EDIT,\r\n    payload: user\r\n});\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n    try {\r\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\r\n        const res = await axios.put(`/api/users/${id}`, user);\r\n        if(res.status === 200){\r\n            notification('User Updated')\r\n            dispatch({\r\n                type: ADMIN_UPDATE_USER_SUCCEED,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_UPDATE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, callback) => async (dispatch, getState) => {\r\n    try {\r\n        const {data: data = '', success} = await requestDelete({uri: `/api/users/${id}`});\r\n        if(success) {\r\n            const {page, limit} = getState().users;\r\n            notification(data);\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n        else {\r\n            notification(data.message, 'error')\r\n        }\r\n        if(callback) callback({success, data});\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_DELETE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetUserSelected = () => ({type: RESET_SELECTED_USER});\r\n\r\nexport const openModal = () => ({type: OPEN_USER_MODAL});\r\nexport const closeModal = () => ({type: CLOSE_USER_MODAL});\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetUserSelected,\r\n    fetchUsers,\r\n    openModal,\r\n} from \"../../actions/users\";\r\nimport {capitalizeFirstLetter} from \"../../utils/helper\";\r\nimport {PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid} from \"../../utils/utils\";\r\nimport {ROLES} from \"../constants\";\r\nimport {Input, LoadingButton, Password, Select} from \"../Atoms\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"dispatch\",\r\n};\r\n\r\nconst UserForm = () => {\r\n    const {mutation, loading: isSaving} = useMutation('/api/users')\r\n    const [form, setForm] = useState({...initialState});\r\n    const {loading, open, error, user, page, limit} = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const {mutation: updateUser, loading: isSavingUpdate} = useMutation(`/api/users/${user?._id}`)\r\n    const {user: auth = {}} = useSelector((state) => state.auth);\r\n    const {roles = []} = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [userRoles, setUserRoles] = useState();\r\n\r\n    useEffect(() => {\r\n        if(auth?.role.equalsIgnoreCase(ROLES.superadmin)) {\r\n            setUserRoles(roles)\r\n        } else {\r\n            const newRoles = roles.filter(\r\n                (item) =>\r\n                    item === \"driver\" ||\r\n                    item === \"afterhours\" ||\r\n                    item === \"load planner\" ||\r\n                    item === \"support\" ||\r\n                    item === 'dispatch' ||\r\n                    item === 'ownerOperator'\r\n            );\r\n            setUserRoles(newRoles);\r\n        }\r\n    }, [roles]);\r\n\r\n    useEffect(() => {\r\n        if (!open) handleClose();\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (+page === 0 && open) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const {email, role} = user;\r\n            setForm((f) => ({...f, email, role}));\r\n            dispatch(openModal());\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChange = ({name, value}) => {\r\n        setForm((f) => ({...f, [name]: value}));\r\n    };\r\n    const handleClose = () => {\r\n        setForm({...initialState});\r\n        dispatch(resetUserSelected());\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const getDiff = (local, actual) => {\r\n        const diffWithVal = {};\r\n        const localKeys = Object.keys(local);\r\n        for (let key of localKeys) {\r\n            if (key !== \"password\" && actual[key] !== local[key])\r\n                diffWithVal[key] = local[key];\r\n            if (key === \"password\" && local[key]) diffWithVal[key] = local[key];\r\n        }\r\n        return diffWithVal;\r\n    };\r\n\r\n    function afterSubmit({success, data}) {\r\n        if (success) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n            notification((user._id ? 'Updated ' : 'Saved ') + 'Successfully');\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!loading) {\r\n            if (!user) {\r\n                const {email, password, role} = form;\r\n                if (!email || !password || !role)\r\n                    return alert(\"All fields are required\");\r\n                else if (!isEmailValid(email)) {\r\n                    return alert('Email is not valid');\r\n                } else if (password.length < 6) {\r\n                    return alert('Please enter password with 6 or more characters');\r\n                }\r\n                await mutation(form, '', afterSubmit);\r\n            } else {\r\n                const dataToUpdate = getDiff(form, user);\r\n                await updateUser(dataToUpdate, 'put', afterSubmit);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"primary\"\r\n                variant={'contained'}\r\n                onClick={handleClickOpen}\r\n            >\r\n                Add User\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={false}\r\n                maxWidth={\"md\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 400\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\" sx={{textAlign: 'center', color: PRIMARY_BLUE}}>\r\n                    {user ? \"Update\" : \"Add\"} User\r\n                </DialogTitle>\r\n                {error ? <p style={{textAlign: \"center\"}}>{error}</p> : \"\"}\r\n                <DialogContent sx={{p: 0, overflow: 'hidden'}}>\r\n                    <div className=\"\">\r\n                        <form noValidate onSubmit={onSubmit}>\r\n                            <Grid container spacing={2} direction={'column'} sx={{p: 3}}>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.email}\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Password\r\n                                        name={\"password\"}\r\n                                        label={\"Password\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.password}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Select\r\n                                        onChange={handleChange}\r\n                                        label={\"Role\"}\r\n                                        name=\"role\"\r\n                                        value={form.role}\r\n                                        options={userRoles &&\r\n                                            userRoles.map((role) => ({id: role, label: capitalizeFirstLetter(role)}))}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} justifyContent='center' display={'flex'}>\r\n                                    <LoadingButton\r\n                                        isLoading={isSaving || isSavingUpdate}\r\n                                        className=\"\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers, selectUserToEdit } from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {ROLES} from \"../constants\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page = 0, limit = 5, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const { user } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage - 1, +limit));\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const new_limit = event.target.value;\r\n        dispatch(fetchUsers(0, new_limit));\r\n    };\r\n\r\n    const allowedRolesForDispatch = [\r\n        ROLES.dispatch,\r\n        ROLES.admin,\r\n        ROLES.superadmin,\r\n    ];\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users found',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        showRefresh: true,\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '', firstName, lastName } }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role'\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role } = {}, role: userRole }) => {\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        {allowedRolesForDispatch.includes(userRole) && (\r\n                                <Button variant='contained' sx={{mr: 1}} onClick={() => {\r\n                                    dispatch(selectUserToEdit({ _id, email, role }))\r\n                                }}>\r\n                                    Update\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {user &&\r\n                            [ROLES.admin, ROLES.superadmin].includes(user.role) &&\r\n                            <Button variant='contained' color='error' onClick={showDelete({\r\n                                message: 'Are you sure you want to delete '+email + '?',\r\n                                uri: `/api/users/${_id}`,\r\n                                afterSuccessCb: afterDelete\r\n                            })}>\r\n                                Delete\r\n                            </Button>}\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} onRefetch={() => dispatch(fetchUsers(+page, +limit))}/>\r\n            <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n                <UserForm />\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            {count > 10 &&\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {data.length} of {count} entries</Typography>}\r\n            {data.length !== count && <StyledPagination\r\n                count={Math.ceil(count / limit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                page={page + 1}\r\n                size=\"medium\"\r\n                onChange={onChange}\r\n            />}\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.isObject(row) ? _.get(row, id, emptyState) : (row[id] || emptyState);\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length;\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config}/>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        {showRefresh && <Stack alignItems='flex-end'>\r\n            <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>\r\n        </Stack>}\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 64px)' : 'auto'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}"],"sourceRoot":""}