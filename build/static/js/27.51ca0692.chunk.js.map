{"version":3,"sources":["views/ownerOperator/FormModal.js","views/ownerOperator/OwnerOperator.js","hooks/useMutation.js","components/Atoms/Dialog.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","../node_modules/@mui/icons-material/Refresh.js","../node_modules/@mui/icons-material/Add.js","hooks/useFetchWithSearchPagination.js","../node_modules/@mui/icons-material/EditOutlined.js","hooks/useLazyFetch.js"],"names":["formTemplate","firstName","lastName","phone","email","password","confirmPassword","FormModal","props","history","match","params","id","onCloseUrl","form","setForm","React","useState","errors","setErrors","mutation","loading","useMutation","isFetching","data","useLazyFetch","lazyFetchCondition","ownerOpData","updateForm","_ref2","name","value","useEffect","onBlur","_ref3","afterSubmit","_ref4","success","message","triggerCustomEvent","notification","handleClose","push","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","PaperProps","sx","width","children","DialogTitle","color","blue","textAlign","fontWeight","letterSpacing","_jsx","DialogContent","Grid","container","component","noValidate","direction","rowSpacing","p","item","xs","Input","label","onChange","disabled","required","Password","LoadingButton","type","onClick","e","preventDefault","body","validateForm","_ref","isEmailValid","_","isEmpty","_id","isLoading","loadingText","isEqual","OwnerOperator","path","useRouteMatch","edit","delete","canDelete","add","UserSettings","getUserPermissionsByDashboardId","queryData","page","isPaginationLoading","limit","onLimitChange","onPageChange","refetch","isRefetching","useFetchWithSearchPagination","totalCount","useHistory","fetchOwnerOp","useCallback","addEvent","window","removeEvent","afterDelete","tableConfig","rowCellPadding","showRefresh","emptyMessage","count","onPageSizeChange","columns","emptyState","renderer","Fragment","valueFormatter","row","Tooltip","title","placement","_IconButton","stopPropagation","concat","mr","variant","EditOutlinedIcon","showDelete","uri","afterSuccessCb","_Delete","Actions","_Button","Link","to","startIcon","AddIcon","_Box","className","EnhancedTable","config","onRefetch","actions","Route","render","url","callback","arguments","length","undefined","showTriggers","options","setLoading","async","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","then","res","catch","err","finally","Transition","ref","Slide","preventBackdropClose","onOk","okText","content","onCancel","equalsIgnoreCase","MuiDialog","TransitionComponent","DialogActions","Button","StyledPagination","styled","Pagination","theme","breakpoints","down","height","StyledStack","Stack","justifyContent","display","flexWrap","TablePagination","setLength","Array","isArray","alignItems","Typography","fontSize","Select","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","Headers","role","handleRequestSort","hasSort","headerCellSx","hasDelete","sortField","sortOrder","showCheckbox","headers","useMemo","map","column","index","visible","sort","isFunction","bgcolor","_TableSortLabel","active","unshift","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","checkboxKey","onRowClick","rowStyleCb","rowCellSx","onCheckboxChange","checkboxes","rowStyle","deleteCell","scope","bind","cell","i","cellPadding","isCostCell","getDollarPrefixedPrice","get","Error","checked","indexOf","_Checkbox","hover","cursor","getTableCell","_ref6","tableState","setTableState","dialog","setDialog","_columns","columnsBuilder","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","handleSortChange","getUserDetail","user","useRef","isValidElement","_Fragment","event","property","field","order","_Grid","gap","ErrorOutlineIcon","_Typography","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","style","_ref$current","current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","_Stack","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","position","getLoader","innerHeight","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","orderBy","debounceTime","setData","setPage","setLimit","searchQuery","setSearchQuery","setIsPaginationLoading","isSearching","setIsSearching","setIsRefetching","setSortField","setSortOrder","isInitialLoad","fetchData","debouncedSearch","debounce","cancel","requestGet","console","error","handleSearch","showPagination","pageOptions","setPageOptions","requestCall","object","result","lazyFetch"],"mappings":"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","file":"static/js/27.51ca0692.chunk.js","sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport _ from 'lodash';\r\nimport { blue } from \"../../components/layout/ui/Theme\";\r\nimport Grid from '@mui/material/Grid'\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { notification } from \"../../actions/alert\";\r\nimport { isEmailValid, triggerCustomEvent } from \"../../utils/utils\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {Input, LoadingButton, Password} from \"../../components/Atoms\";\r\nimport useLazyFetch from \"../../hooks/useLazyFetch\";\r\n\r\nconst validateForm = ({ firstName, lastName, phone, email, password, confirmPassword }, id) => {\r\n    let errors = {}\r\n    if (!firstName) {\r\n        errors.firstName = 'Please provide the First Name'\r\n    }\r\n    if (!lastName) {\r\n        errors.lastName = 'Please provide the Last Name'\r\n        // return [false, 'Please provide the Last Name', 'lastName']\r\n    }\r\n    if (!phone) {\r\n        errors.phone = 'Please provide the Phone Number'\r\n    }\r\n    if (!email) {\r\n        errors.email = 'Please provide the Email'\r\n    }\r\n    if (!isEmailValid(email)) {\r\n        errors.email = 'Invalid Email'\r\n    }\r\n    if(!id && !password){\r\n        errors.password = 'Please enter Password'\r\n    }\r\n    if(!id && !confirmPassword){\r\n        errors.confirmPassword = 'Please enter Confirm Password'\r\n    }\r\n    else if(!id && password !== confirmPassword) {\r\n        errors.confirmPassword = 'Passwords do not match. Try again'\r\n    }\r\n    return errors\r\n}\r\nconst formTemplate = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n}\r\n\r\n\r\nconst FormModal = (props) => {\r\n    const { history, match: { params: { id = '' } = {} } = {}, onCloseUrl } = props;\r\n    const [form, setForm] = React.useState(formTemplate);\r\n    const [errors, setErrors] = useState(formTemplate);\r\n    const { mutation, loading } = useMutation(\"/api/ownerOperator\"),\r\n        { loading: isFetching, data } = useLazyFetch(\"/api/ownerOperator/\" + id, { lazyFetchCondition: !!id }),\r\n        { data: ownerOpData } = data || {};\r\n\r\n    const updateForm = ({ name, value }) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerOpData) {\r\n            setForm(ownerOpData);\r\n        }\r\n    }, [ownerOpData])\r\n\r\n    const onBlur = ({ name, value }) => {\r\n        if (value) {\r\n            setErrors({ ...errors, [name]: '' });\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = { ...form };\r\n        const errors = validateForm(body, id);\r\n        if (_.isEmpty(errors)) {\r\n            if(id){\r\n                delete body.confirmPassword;\r\n                delete body.password\r\n            }\r\n            mutation({...body, _id: id}, null, afterSubmit);\r\n        } else {\r\n            setErrors({ ...errors })\r\n        }\r\n    };\r\n\r\n    const afterSubmit = ({ success, data }) => {\r\n        const { message } = data || {};\r\n        if (success) {\r\n            triggerCustomEvent('refreshOwnerOp');\r\n            notification(message || 'Owner operator created');\r\n            handleClose();\r\n        } else {\r\n            notification(message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        history.push(onCloseUrl);\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={false}\r\n            maxWidth={\"md\"}\r\n            open={true}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                sx: {\r\n                    width: 400\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" sx={{\r\n                color: blue,\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: 1\r\n            }}>\r\n                {id ? \"Edit\" : 'Add'} Owner Operator\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container component='form' noValidate direction='column' rowSpacing={3} p={1}>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Input\r\n                                name={\"firstName\"}\r\n                                label={\"First Name\"}\r\n                                onChange={updateForm}\r\n                                value={form.firstName || ''}\r\n                                errors={errors}\r\n                                onBlur={onBlur}\r\n                                fullWidth\r\n                                disabled={isFetching || loading}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"lastName\"}\r\n                            label={\"Last Name\"}\r\n                            onChange={updateForm}\r\n                            value={form.lastName || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"email\"}\r\n                            label={\"Email\"}\r\n                            onChange={updateForm}\r\n                            value={form.email || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    {!id && <Grid xs={12} item>\r\n                        <Password\r\n                            name={'password'}\r\n                            label={'Password'}\r\n                            onChange={updateForm}\r\n                            fullWidth\r\n                            value={form.password}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            disabled={isFetching || loading}\r\n                        />\r\n                    </Grid>}\r\n                    {!id && <Grid xs={12} item>\r\n                        <Password\r\n                            name={'confirmPassword'}\r\n                            label={'Confirm Password'}\r\n                            onChange={updateForm}\r\n                            fullWidth\r\n                            errors={errors}\r\n                            value={form.confirmPassword}\r\n                            onBlur={onBlur}\r\n                            disabled={isFetching || loading}\r\n                        />\r\n                    </Grid>}\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"phone\"}\r\n                            label={\"Phone Number\"}\r\n                            onChange={updateForm}\r\n                            value={form.phone || ''}\r\n                            onBlur={onBlur}\r\n                            errors={errors}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            onClick={onSubmit}\r\n                            isLoading={loading || isFetching}\r\n                            loadingText={loading ? 'Updating...' : isFetching ? 'Please wait...' : null}\r\n                            disabled={_.isEqual(ownerOpData, form)}\r\n                        >\r\n                            {id ? 'Update' : 'Add'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FormModal","import React, {Fragment, useCallback, useEffect} from \"react\";\r\nimport {Box, Button, IconButton} from \"@mui/material\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport {Delete} from \"@mui/icons-material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Link, Route, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport FormModal from \"./FormModal\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\nimport {Tooltip} from \"../../components/Atoms\";\r\n\r\n\r\nconst OwnerOperator = () => {\r\n  const { path } = useRouteMatch(),\r\n        {edit, delete: canDelete, add} = UserSettings.getUserPermissionsByDashboardId('ownerOperator'),\r\n        {data: queryData, loading, page, isPaginationLoading, limit, onLimitChange, onPageChange, refetch, isRefetching} = useFetchWithSearchPagination('/api/ownerOperator'),\r\n        { data, totalCount} = queryData || {},\r\n        history = useHistory();\r\n\r\n  const fetchOwnerOp = useCallback(() => {\r\n        refetch();\r\n    }, [refetch]);\r\n\r\n  useEffect(() => {\r\n      addEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n\r\n      return () => removeEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n  }, [fetchOwnerOp])\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            fetchOwnerOp()\r\n        }\r\n    }\r\n\r\n\r\n  const tableConfig = {\r\n    rowCellPadding: \"normal\",\r\n    showRefresh: true,\r\n    emptyMessage: \"No Owner Operator Found\",\r\n    count: totalCount,\r\n      page,\r\n      limit,\r\n      onPageSizeChange: onLimitChange,\r\n      onPageChange,\r\n    columns: [\r\n      {\r\n        id: \"firstName\",\r\n        label: \"First Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"lastName\",\r\n        label: \"Last Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"role\",\r\n        label: \"Role\",\r\n        renderer: () => {\r\n          return <Fragment>Owner Operator</Fragment>;\r\n        },\r\n      },\r\n        {\r\n            id: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 'created_by',\r\n            label: 'Created By',\r\n            valueFormatter: (row) => row.name\r\n        },\r\n      {\r\n        id: \"update\",\r\n        renderer: ({ row }) => {\r\n          return (\r\n            <Fragment>\r\n              <Tooltip title='Edit' placement='top'>\r\n                  <IconButton\r\n                      onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          history.push(path + `/edit/${row._id}`);\r\n                      }}\r\n                      sx={{mr: 1}}\r\n                      disabled={!edit}\r\n                      variant={'contained'}\r\n                      color='primary'\r\n                  >\r\n                      <EditOutlinedIcon />\r\n                  </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title='Delete' placement='top'>\r\n                  <IconButton\r\n                      variant=\"contained\"\r\n                      color={'error'}\r\n                      onClick={showDelete({\r\n                          uri: \"/api/ownerOperator/\"+ row._id,\r\n                          message: 'Are you sure you want to delete this Owner Operator?',\r\n                          afterSuccessCb: afterDelete\r\n                      })}\r\n                      disabled={!canDelete}\r\n                  >\r\n                      <Delete />\r\n                  </IconButton>\r\n              </Tooltip>\r\n            </Fragment>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const Actions = <Button\r\n      variant='contained'\r\n      component={Link}\r\n      to={path + '/add'}\r\n      disabled={!add}\r\n      startIcon={<AddIcon />}\r\n  >\r\n      Add\r\n  </Button>\r\n\r\n  return (\r\n    <Box className='dashboardRoot'>\r\n      <EnhancedTable\r\n        config={tableConfig}\r\n        data={data}\r\n        loading={loading}\r\n        isRefetching={isRefetching}\r\n        onRefetch={refetch}\r\n        isPaginationLoading={isPaginationLoading}\r\n        actions={Actions}\r\n      />\r\n\r\n      <Route path={path + \"/add\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n      <Route path={path + \"/edit/:id\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OwnerOperator;\r\n","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onLimitChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onLimitChange === 'function'){\r\n            onLimitChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    Checkbox,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, TableSortLabel, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getDollarPrefixedPrice, getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role, handleRequestSort, hasSort}) {\r\n    const {headerCellSx = {}, hasDelete, sortField, sortOrder, showCheckbox} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true, sort = false} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>\r\n                    {(hasSort && sort)\r\n                        ? <TableSortLabel onClick={(e) => handleRequestSort(e, id)} active={id === sortField}\r\n                                     direction={sortOrder}\r\n                                     sx={{ ...headerCellSx}}>\r\n                        {label}\r\n                    </TableSortLabel>\r\n                        : label}\r\n                </Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n\r\n    if(showCheckbox){\r\n        headers.unshift(<Cell key='checkbox-header' padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}} />)\r\n    }\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          checkboxKey,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb,\r\n        showCheckbox = false,\r\n        rowCellSx={}\r\n    } = config;\r\n    const {role, onCheckboxChange, checkboxes} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={hasDeletePermission ? 'error' : 'disabled'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true, cellPadding, isCostCell} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if(isCostCell){\r\n            cell = row[id] ? getDollarPrefixedPrice(row[id] || '') : emptyState\r\n        }\r\n        else if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id], row);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={cellPadding || rowCellPadding || 'normal'} sx={rowCellSx} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    if(showCheckbox){\r\n        if(!checkboxKey){\r\n            throw new Error('Checkbox key not provided');\r\n        }\r\n        const checked = checkboxes.indexOf(row[checkboxKey]) > -1;\r\n        cell.unshift(<Cell onClick={onCheckboxChange.bind(this, row)} key={`checkbox-${rowIndex}`} sx={rowCellSx}>\r\n            <Checkbox checked={checked} />\r\n        </Cell>)\r\n    }\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false, ...rest}) => {\r\n    data = data || [];\r\n    const {onCheckboxChange, checkboxes, checkboxKey} = rest;\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns: _columns = [],\r\n            columnsBuilder,\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            onLimitChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n            sortField,\r\n            sortOrder = 'asc',\r\n            handleSortChange,\r\n            hasSort = false\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const columns = typeof columnsBuilder === 'function' ? columnsBuilder({data, columns: _columns}) : _columns;\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = sortField === property && sortOrder === 'asc';\r\n        // setOrder(isAsc ? 'desc' : 'asc');\r\n        // setOrderBy(property);\r\n        handleSortChange && handleSortChange({field: property, order: isAsc ? 'desc' : 'asc'})\r\n    };\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} handleRequestSort={handleRequestSort} hasSort={hasSort}/>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    checkboxes={checkboxes}\r\n                    checkboxKey={checkboxKey}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    onCheckboxChange={onCheckboxChange}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config, checkboxes])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className='tableContainer'\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onLimitChange={onLimitChange || onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport _ from 'lodash'\r\nimport {requestGet} from \"../utils/request\";\r\n\r\nconst useFetchWithSearchPagination = (url, options) => {\r\n    const {order = 'asc', orderBy, debounceTime = 500 } = options || {};\r\n    const [data, setData] = useState([]),\r\n        [loading, setLoading] = useState(false),\r\n        [page, setPage] = useState(1),\r\n        [limit, setLimit] = useState(100),\r\n        [searchQuery, setSearchQuery] = useState(''),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false),\r\n        [isSearching, setIsSearching] = useState(false),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        [sortField, setSortField] = useState(orderBy),\r\n        [sortOrder, setSortOrder] = useState(order),\r\n        isInitialLoad = useRef(true);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url, page, limit, sortField, sortOrder]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const debouncedSearch = _.debounce(() => {\r\n            if (!isInitialLoad.current) {\r\n                setIsSearching(true);\r\n                fetchData();\r\n            }\r\n        }, debounceTime);\r\n\r\n        debouncedSearch();\r\n\r\n        return debouncedSearch.cancel;\r\n    }, [searchQuery, debounceTime]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        requestGet({uri: `${url}?page=${page}&search=${searchQuery}&limit=${limit}&sortField=${sortField}&sortOrder=${sortOrder}`})\r\n            .then(res => {\r\n                const {data} = res;\r\n                setData(data);\r\n            })\r\n            .catch(e => {\r\n                console.error(e.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsPaginationLoading(false);\r\n                setIsSearching(false);\r\n                setIsRefetching(false);\r\n                if (isInitialLoad.current) {\r\n                    isInitialLoad.current = false;\r\n                }\r\n            })\r\n    }, [url, page, limit, searchQuery, sortField, sortOrder]);\r\n\r\n    const onPageChange = useCallback((e, pgNum) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(pgNum);\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(({value}) => {\r\n        setSearchQuery(value);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const onLimitChange = useCallback(({value}) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n        setLimit(value);\r\n    }, [])\r\n\r\n    const handleSortChange = useCallback(({ field, order }) => {\r\n        setSortField(field);\r\n        setSortOrder(order);\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const refetch = () => {\r\n        setPage(1);\r\n        setIsRefetching(true);\r\n        fetchData();\r\n    };\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        handleSearch,\r\n        refetch,\r\n        onLimitChange,\r\n        searchQuery,\r\n        isPaginationLoading,\r\n        isSearching,\r\n        isRefetching,\r\n        sortField,\r\n        sortOrder,\r\n        handleSortChange,\r\n    };\r\n};\r\n\r\nexport default useFetchWithSearchPagination","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');\nexports.default = _default;","import { useEffect, useState } from 'react'\r\nimport { requestGet } from '../utils/request';\r\nimport { serialize } from '../utils/utils';\r\n\r\nconst useLazyFetch = (url, options = {}, callback = null) => {\r\n    const { showPagination = true, page, limit, lazyFetchCondition } = options,\r\n        [data, setData] = useState(undefined);\r\n    const [pageOptions, setPageOptions] = useState({ page: (page || 1), limit: (limit || 10) });\r\n    const [loading, setLoading] = useState(false);\r\n    const [isRefetching, setIsRefetching] = useState(false),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false)\r\n\r\n    function requestCall(object) {\r\n        const { page, limit } = object || {};\r\n        let uri = url;\r\n        if (showPagination) {\r\n            if (page && limit) {\r\n                setPageOptions({ page, limit })\r\n            }\r\n            uri = `${uri}?page=${page || pageOptions.page}&limit=${limit || pageOptions.limit}`\r\n        }\r\n        if (options.queryParams) {\r\n            uri = `${uri}&${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({ uri, callback, showTriggers: false })\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n                setIsPaginationLoading(false);\r\n            })\r\n    }\r\n\r\n    const onLimitChange = ({ value }) => {\r\n        // setPageOptions({...pageOptions, limit: value});\r\n        setIsPaginationLoading(true);\r\n        requestCall({ limit: value, page: pageOptions.page })\r\n    }\r\n\r\n    const onPageChange = (e, pgNum) => {\r\n        // setPageOptions({...pageOptions, page: pgNum});\r\n        setIsPaginationLoading(true);\r\n        requestCall({ page: pgNum, limit: pageOptions.limit })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall({ page, limit: pageOptions.limit });\r\n    }\r\n\r\n\r\n    const lazyFetch = () => {\r\n        setLoading(true)\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const callCondition = typeof lazyFetchCondition === 'function' ? lazyFetchCondition() : lazyFetchCondition\r\n        if (callCondition) {\r\n            lazyFetch();\r\n        }\r\n    }, [])\r\n\r\n    return {\r\n        lazyFetch, data, loading, refetch: onRefetch, isRefetching,\r\n        onLimitChange, onPageChange, isPaginationLoading, ...pageOptions\r\n    }\r\n}\r\n\r\nexport default useLazyFetch"],"sourceRoot":""}