{"version":3,"sources":["views/loadHistory/LoadHistoryDetail.js","views/loadHistory/index.jsx","components/Atoms/Modal.js","hooks/useMutation.js","components/Atoms/Dialog.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","actions/load.js","hooks/useFetch.js","actions/driver.js","hooks/useFetchWithSearchPagination.js","utils/helper.js","components/loads/components/LoadDetailsUploadComponent.js","components/loads/styles.js","components/loads/LoadDetailModal.js","components/invoices/MoveToMyLoads.js","../node_modules/@mui/icons-material/Replay.js"],"names":["LoadHistoryDetail","props","edit","UserSettings","getUserPermissionsByDashboardId","match","params","id","dispatch","useDispatch","loading","data","useFetchWithSearchPagination","_jsx","FullScreenLoader","LoadDetailModal","modalEdit","open","load","handleClose","_ref","history","goBack","selectLoad","deleteLoad","_id","canUpdate","LoadHistory","path","limit","page","isPaginationLoading","refetch","isRefetching","onPageChange","onLimitChange","isSearching","searchQuery","handleSearch","totalCount","loads","config","showRefresh","rowCellPadding","count","onPageSizeChange","columns","label","renderer","row","_Typography","sx","textDecoration","component","Link","to","concat","children","loadNumber","_ref2","pickup","pickupCity","pickupState","_ref3","pickupDate","moment","format","_ref4","drop","dropCity","dropState","_ref5","dropDate","_ref6","brokerage","_ref7","user","name","firstName","lastName","valueFormatter","value","join","emptyState","getDollarPrefixedPrice","Date","toLocaleString","visible","_ref8","_IconButton","variant","color","ReplayIcon","getLoadStatuses","arguments","length","undefined","map","status","equalsIgnoreCase","disabled","actions","_Stack","direction","Input","onChange","placeholder","pr","autoFocus","InputProps","endAdornment","onClick","visibility","_Close","fontSize","modalConfig","title","_jsxs","_Box","height","EnhancedTable","onRefetch","Route","render","MoveToMyLoads","onCloseUrl","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","onClose","showClose","titleStyles","other","DialogTitle","m","p","textAlign","IconButton","position","left","top","palette","grey","CloseIcon","Modal","closeCallback","closeUrl","paperProps","preventBackdropClick","setOpen","React","useState","useTheme","fullScreen","_useMediaQuery","breakpoints","down","e","useEffect","addEvent","window","removeEvent","Transition","useMemo","forwardRef","ref","useHistory","_Zoom","onExited","push","ENHANCED_DASHBOARD","maxWidth","TransitionComponent","PaperProps","DialogContent","dividers","borderTop","useMutation","url","callback","showTriggers","options","setLoading","mutation","async","body","type","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","then","res","catch","err","finally","Slide","preventBackdropClose","className","onOk","okText","content","onCancel","MuiDialog","fontWeight","DialogActions","Button","StyledPagination","Pagination","width","StyledStack","Stack","justifyContent","display","flexWrap","TablePagination","isLoading","setLength","Array","isArray","alignItems","Typography","Select","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","column","index","_","isFunction","bgcolor","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","Tooltip","placement","bind","cell","i","get","hover","preventDefault","cursor","getTableCell","tableState","setTableState","dialog","setDialog","hasOnClickUrl","emptyMessage","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","useRef","Actions","isValidElement","_Fragment","stopPropagation","_Grid","container","gap","ErrorOutlineIcon","onDialogClose","_DialogContentText","getTableContent","Fragment","_TableHead","backgroundColor","_TableBody","style","_ref$current","current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","getLoader","innerHeight","item","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","console","error","opts","opt","unshift","InputField","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","target","values","l","selected","getLoads","module","search","success","requestGet","GET_LOADS","payload","notification","message","setAlert","searchLoads","axios","RETURNED_SEARCHED_LOADS","resetLoadsSearch","getState","RESET_SEARCHED_LOADS","rowsPerPage","input","SELECT_LOAD","addLoad","formData","ADD_LOAD","log","updateLoad","bucketFiles","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","query","load_id","DELETE_LOAD","useFetch","setData","setError","setIsRefetching","requestCall","result","getDrivers","assign","timestamp","GET_DRIVERS","_err$response","_err$response2","DRIVER_ERROR","msg","response","statusText","addDriver","isEdit","post","errors","patchDriverLoads","driver_id","drivers","driver","patch","find","o","PATCH_DRIVER","deleteDriver","cb","delete","splice","DELETE_DRIVER","deleteDriverLoads","DELETE_DRIVER_LOAD","debounceTime","setPage","setLimit","setSearchQuery","setIsPaginationLoading","setIsSearching","isInitialLoad","fetchData","debouncedSearch","debounce","cancel","useCallback","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","FileContainer","borderRadius","overflow","flexDirection","FileViewer","onRemoveAll","Files","elevation","DescriptionIcon","PRIMARY_BLUE","align","textOverflow","Alert","severity","_Button","float","gridTemplateColumns","LoadDetailsUploadComponent","fileViewConfig","setFileViewConfig","rateConfirmation","proofDelivery","accessorialsFiles","handleFileChange","rateConfirmationRef","proofDeliveryRef","accessorialsRef","state","rateConFile","podFile","formAccessorialsFiles","viewClickHandler","onFileViewClose","roc","idx","margin","marginLeft","href","startIcon","OpenInNewIcon","auth","getCheckStatusIcon","pod","acc","useStyles","makeStyles","root","minWidth","marginBottom","borderWidth","borderStyle","borderColor","cardcontent","wrap","paddingLeft","paddingTop","paddingBottom","h4","loadp","playIcon","textField","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","background","shadows","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","formInitialState","rate","assignedTo","trailorNumber","accessorials","invoice_created","MenuProps","ITEM_HEIGHT","DATE_PICKER_SLOT_PROPS","helperText","fullWidth","TIME_PICKET_SLOT_PROPS","TextPlaceHolder","onModalClose","listBarType","bktFiles","classes","useSelector","setEdit","setForm","LoadStatuses","isProcessingAsyncRequest","setIsProcessingAsyncRequest","SelectElement","OutlinedInput","FilledInput","assignees","assignedToOptions","assigneeRole","assigneeId","getRoleNameString","setupDrivers","resetFileInputs","isSuccess","handleSubmit","event","handleOnChange","handlePickDropChange","keyToUpdate","childKey","handleDateChange","date","handleInOutTime","parent_key","child_key","getRole","alpha","forEach","fileType","fileLocation","StaticDataShow","heading","sxObject","pt","_Modal","LocalizationProvider","dateAdapter","AdapterMoment","onSubmit","xs","pl","sm","FormControl","InputLabel","_Select","notched","_MenuItem","assignee","labelId","split","_Divider","_Done","_CircularProgress","green","_Edit","handleCancel","createCopy","_FileCopyOutlined","mr","shipperName","pickupAddress","pickupZip","DateTimePicker","toISOString","slotProps","TimePicker","in_time","out_time","mt","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropZip","dropPo","dropReference","dropDeliverNumber","f","Container","up","getInvoices","setValue","statuses","LOAD_STATUSES","replace","showNone","LoadingButton","loadingText","_interopRequireDefault","require","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"mTA8BeA,MAvBYC,IACvB,MAAM,KAACC,GAAQC,IAAaC,gCAAgC,UACrDC,OAAQC,QAAQ,GAACC,GAAM,CAAC,GAAK,CAAC,GAAKN,EACpCO,EAAWC,eACX,QAACC,GAAU,EAAMC,MAAM,KAACA,EAAO,CAAC,GAAK,CAAC,GAAKC,YAA6B,oBAAsBL,GAEpG,OAAGG,EACSG,cAACC,IAAgB,IAGtBD,cAACE,IAAe,CACnBC,WAAW,EACXC,MAAOP,EACPQ,KAAMP,EACNQ,YAAaC,IAAgB,IAAf,QAACC,GAAQD,EACnBC,EAAQC,SACRd,EAASe,cAAa,EAE1BC,WAAaC,GAAQjB,EAASgB,YAAWC,IACzCC,YAAaxB,GACf,ECyISyB,UAtJM1B,IACjB,MAAM,KAACC,GAAQC,IAAaC,gCAAgC,YACrDC,OAAO,KAACuB,GAAQ,CAAC,GAAK3B,GACvB,KAACU,EAAI,QAAED,EAAO,MAAEmB,EAAK,KAAEC,EAAI,oBAAEC,EAAmB,QAAEC,EAAO,aAAEC,EAAY,aAAEC,EAAY,cACvFC,EAAa,YAAEC,EAAW,YAAEC,EAAW,aAAEC,GAAgB1B,YAA6B,qBACpF,WAAC2B,EAAY5B,KAAM6B,GAAS7B,EAE5B8B,EAAS,CACXC,aAAa,EACbC,eAAgB,SAChBC,MAAOL,EACPT,OACAD,QACAK,eACAW,iBAAkBV,EAClBA,gBACAW,QAAS,CACL,CACIvC,GAAI,aACJwC,MAAO,cACPC,SAAU5B,IAAA,IAAC,IAAC6B,GAAI7B,EAAA,OAAKP,cAAAqC,IAAA,CAAYC,GAAI,CAACC,eAAgB,aAAcC,UAAWC,IAAMC,GAAE,GAAAC,OAAK5B,EAAI,KAAA4B,OAAIP,EAAIxB,KAAMgC,SAAER,EAAIS,YAAwB,GAEhJ,CACInD,GAAI,SACJwC,MAAO,oBACPC,SAAUW,IAAgC,IAA9BV,KAAK,OAACW,EAAS,IAAM,CAAC,GAAED,EAChC,OAAO,WAACE,EAAa,GAAE,YAAEC,EAAc,KAAOF,EAC9C,MAAM,GAANJ,OAAUK,EAAU,MAAAL,OAAKM,EAAW,GAG5C,CACIvD,GAAI,aACJwC,MAAO,cACPC,SAAUe,IAAgC,IAA9Bd,KAAK,OAACW,EAAS,IAAM,CAAC,GAAEG,EAChC,OAAO,WAACC,EAAa,KAAOJ,EAC5B,OAAOK,IAAOD,GAAYE,OAAO,aAAa,GAGtD,CACI3D,GAAI,WACJwC,MAAO,kBACPC,SAAUmB,IAA8B,IAA5BlB,KAAK,KAACmB,EAAO,IAAM,CAAC,GAAED,EAC9B,OAAO,SAACE,EAAW,GAAE,UAAEC,EAAY,KAAOF,EAC1C,MAAM,GAANZ,OAAUa,EAAQ,MAAAb,OAAKc,EAAS,GAGxC,CACI/D,GAAI,WACJwC,MAAO,YACPC,SAAUuB,IAA8B,IAA5BtB,KAAK,KAACmB,EAAO,IAAM,CAAC,GAAEG,EAC9B,OAAO,SAACC,EAAW,KAAOJ,EAC1B,OAAOH,IAAOO,GAAUN,OAAO,aAAa,GAIpD,CACI3D,GAAI,YACJwC,MAAO,WACPC,SAAUyB,IAAmC,IAAjCxB,KAAK,UAACyB,EAAY,IAAM,CAAC,GAAED,EACnC,OAAOC,CAAS,GAGxB,CACInE,GAAI,iBACJwC,MAAO,cACPC,SAAU2B,IAAA,IAAG1B,KAAO2B,MAAM,KAAEC,EAAO,GAAE,UAAEC,EAAS,SAAEC,GAAY,CAAC,GAAK,CAAC,GAAGJ,EAAA,OAAKE,GAAI,GAAArB,OAAOsB,GAAa,KAAI,KAAAtB,OAAIuB,GAAY,GAAI,GAEjI,CACIxE,GAAI,eACJwC,MAAO,eACPiC,eAAiBC,IAAWA,GAAS,IAAIC,KAAK,OAElD,CACI3E,GAAI,OACJwC,MAAO,OACPoC,WAAY,KACZH,eAAiBC,GAAUA,EAAQG,YAAuBH,GAAS,IAEvE,CACI1E,GAAI,YACJwC,MAAO,aACPiC,eAAiBC,GAAU,IAAII,KAAKJ,GAAOK,kBAE/C,CACI/E,GAAI,GACJwC,MAAO,OACPwC,UAAWrF,EACX8C,SAAUwC,IAAY,IAAX,IAACvC,GAAIuC,EACZ,OAAO3E,cAAA4E,IAAA,CACHpC,UAAWC,IACXC,GAAI3B,EAAO,SAAWqB,EAAIxB,IAC1BiE,QAAQ,WACRC,MAAM,UAASlC,SAEf5C,cAAC+E,IAAU,KACF,KAM7B,SAASC,IACL,OADiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,IACdG,KAAIC,GACjBA,EAAO3F,GAAG4F,iBAAiB,YACnB,IAAID,EAAQE,UAAU,GAE1BF,GAEf,CAEA,MAAMG,EAAUxF,cAAAyF,IAAA,CAAOC,UAAU,MAAK9C,SAClC5C,cAAC2F,IAAK,CACFvB,MAAO5C,EACPoE,SAAUnE,EACVoE,YAAY,SACZvD,GAAI,CACA,2BAA4B,CACxBwD,GAAI,IAGZC,WAAS,EACTC,WAAY,CACRC,aAAcjG,cAAA4E,IAAA,CAAYsB,QAASA,IAAMzE,EAAa,CAAC2C,MAAO,KAAM9B,GAAI,CAAC6D,WAAY3E,EAAc,UAAY,UAAUoB,SACrH5C,cAAAoG,IAAA,CAAOC,SAAS,iBAM1BC,EAAc,CAChBC,MAAO,aAGX,OAAOC,eAAAC,IAAA,CAAKnE,GAAI,CAACoE,OAAQ,WAAW9D,SAAA,CAChC5C,cAAC2G,IAAa,CACV7G,KAAM6B,EACNC,OAAQA,EACR/B,QAASA,EACT2F,QAASA,EACToB,UAAWzF,EACXC,aAAcA,EACdF,oBAAqBA,GAAuBK,IAEhDvB,cAAC6G,QAAK,CACF9F,KAAMA,EAAO,YACb+F,OAAS1H,GAAUY,cAAC+G,IAAa,CAACC,WAAYjG,EAAMI,QAASA,EAAS6D,gBAAiBA,EAAiBsB,YAAaA,KAAiBlH,MAC1IY,cAAC6G,QAAK,CAAC9F,KAAMA,EAAO,OAAQyB,UAAWrD,MACrC,C,+MCnJV,MAAM8H,EAAkBC,YAAOC,IAAPD,EAAe3G,IAAA,IAAC,MAAC6G,GAAM7G,EAAA,MAAM,CACjD,2BAA4B,CACxB8G,QAASD,EAAME,QAAQ,IAE3B,2BAA4B,CACxBD,QAASD,EAAME,QAAQ,IAE9B,IAEKC,EAAwBnI,IAC1B,MAAM,SAACwD,EAAQ,QAAE4E,EAAO,UAAEC,EAAS,YAACC,KAAgBC,GAASvI,EAE7D,OACIoH,eAACoB,IAAW,CAACtF,GAAI,CAAEuF,EAAG,EAAGC,EAAG,EAAGC,UAAW,YAAaL,MAAmBC,EAAK/E,SAAA,CAC1E6E,EACGzH,cAACgI,IAAU,CACP,aAAW,QACX9B,QAASsB,EACTlF,GAAI,CACA2F,SAAU,WACVC,KAAM,EACNC,IAAK,GACLrD,MAAQsC,GAAUA,EAAMgB,QAAQC,KAAK,MACvCzF,SAEF5C,cAACsI,IAAS,MAEd,KACH1F,IACS,EASP,SAAS2F,EAAMnJ,GAC1B,MAAM,OAACwC,EAAS,CAAC,EAAC,SAAEgB,EAAQ,cAAE4F,GAAiBpJ,GAC3C,MACImH,EAAQ,GAAE,SACVkC,EAAW,GAAE,UACbhB,GAAY,EAAI,WAChBiB,EAAa,CAAC,EAAC,qBACfC,GAAuB,EAAK,YAC5BjB,EAAc,CAAC,GACf9F,GACDxB,EAAMwI,GAAWC,IAAMC,UAAS,GACjC1B,EAAQ2B,cACRC,EAAaC,YAAc7B,EAAM8B,YAAYC,KAAK,OAElD7I,EAAc,SAAC8I,GACbT,IADsB1D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACMK,iBAAiB,kBAGpDsD,GAAQ,EACZ,EAGAC,IAAMQ,WAAU,KACZT,GAAQ,GACRU,YAASC,OAAQ,aAAcjJ,GAExB,IAAMkJ,YAAYD,OAAQ,aAAcjJ,KAChD,IAEH,MAAMmJ,EAAaC,mBAAQ,IAChBb,IAAMc,YAAW,SAAoBvK,EAAOwK,GAC/C,MAAMpJ,EAAUqJ,uBAChB,OACI7J,cAAA8J,IAAA,CACIF,IAAKA,KACDxK,EACJ2K,SAAUA,IACCvB,EAAgBA,IAAkBC,EAAWjI,EAAQwJ,KAAKvB,GAAYwB,KAAsBzJ,EAAQC,UAI3H,KAED,IAEH,OACI+F,eAACS,EAAe,CACZO,QAASlH,EACT,kBAAiBiG,GAAS,0BAC1BnG,KAAMA,EACN8J,SAAU,KACVC,oBAAqBV,EACrBW,WAAY1B,EACZM,WAAYA,EAAWpG,SAAA,CAEtB2D,GAASvG,cAACuH,EAAoB,CAC3B7H,GAAI6G,GAAS,0BACbiB,QAASlH,EACTmH,UAAWA,EACXC,YAAaA,EAAY9E,SAExB2D,IAELvG,cAACqK,IAAa,CAACC,UAAQ,EAAChI,GAAI,CAACiI,UAAW,QAAQ3H,SAAEA,MAQ9D,C,mCC3HA,2BA4De4H,IAjCK,SAACC,GAA0D,IAArDC,EAAQzF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM0F,EAAY1F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAQ2F,EAAO3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,CAAC,EACpE,MAAOpF,EAASgL,GAAc/B,oBAAS,GA6BvC,MAAO,CAAEgC,SA3BQC,eAAOC,GAAsC,IAAhCC,EAAIhG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAAQiG,EAAWjG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChDgG,EAAMV,EACPG,EAAQQ,cACPD,EAAMA,EAAM,IAAME,YAAUT,EAAQQ,cAExCP,GAAW,GACPI,IACAA,EAAO,QAEX,MAAMK,EAnCQL,KAClB,IAAIM,EAEJ,OAAQN,GACJ,IAAK,MACDM,EAAKC,IACL,MAEJ,IAAK,SACDD,EAAKE,IACL,MAEJ,IAAK,QACDF,EAAKG,IACL,MAEJ,QACIH,EAAKI,IAGb,OAAOJ,CAAE,EAegBK,CAAaX,EAAKY,eACvC,GAAGP,EACC,OAAOA,EAAa,CAACH,MAAKT,WAAUM,OAAML,iBACrCmB,MAAKC,IACCb,GACCA,EAAY,IAAIa,IAEbA,KAEVC,OAAMC,GACIA,IAEVC,SAAQ,KACLrB,GAAW,EAAM,GAGjC,EAEmBhL,UACvB,C,mCC1DA,0GAQA,MAAM4J,EAAaZ,cAAiB,SAAoBzJ,EAAOwK,GAC3D,OAAO5J,cAACmM,IAAK,CAACzG,UAAU,KAAKkE,IAAKA,KAASxK,GAC/C,IAEe,SAAS+H,EAAO/H,GAC3B,MAAM,KAACgB,GAAO,EAAK,OAAEwB,EAAM,QAAE4F,EAAO,qBAAE4E,GAAuB,EAAK,UAAEC,GAAajN,GAC7E,MAACmH,EAAK,KAAE+F,EAAI,OAAEC,EAAS,OAAM,QAAEC,EAAO,SAAEC,GAAY7K,EAElDtB,EAAc,SAAC8I,GACbgD,IADsBnH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACMK,iBAAiB,kBAGpDkC,GACJ,EAEA,OACIxH,cAAA,OAAA4C,SACI4D,eAACkG,IAAS,CACNL,UAAWA,EACXjM,KAAMA,EACN+J,oBAAqBV,EACrBjC,QAASlH,EACT,mBAAiB,iCAAgCsC,SAAA,CAE/B,oBAAV2D,EAAuBA,EAAM,IAAI3E,IACrC5B,cAAC4H,IAAW,CAACtF,GAAI,CAACqK,WAAY,KAAK/J,SAAE2D,IACzCvG,cAACqK,IAAa,CAAAzH,SACU,oBAAZ4J,EAAyBA,EAAQ,CAAC5K,WAAW4K,IAEzDhG,eAACoG,IAAa,CAAAhK,SAAA,CACW,oBAAb6J,EAA0BA,EAAS,CAAC7K,SAAQ4F,YAAWxH,cAAC6M,IAAM,CAAChI,QAAQ,WAAWqB,QAAS5F,EAAYsC,SAAC,WAC7F,oBAAX2J,EAAwBA,EAAO,CAAC3K,SAAQ0K,SAAStM,cAAC6M,IAAM,CAAChI,QAAQ,YACRC,MAAOyH,EAAOjH,iBAAiB,UAAY,QAAU,UACrDY,QAASoG,EAAK1J,SAE1E2J,WAMzB,C,4SC1CA,MAAMO,EAAmB5F,YAAO6F,IAAP7F,EAAmB3G,IAAA,IAAC,MAAC6G,GAAM7G,EAAA,MAAM,CACtD,4BAA6B,CACzB,CAAC6G,EAAM8B,YAAYC,KAAK,OAAQ,CAC5BzC,OAAQ,SACRsG,MAAO,SAGlB,IAEKC,EAAc/F,YAAOgG,IAAPhG,EAAcpE,IAAA,IAAC,MAACsE,GAAMtE,EAAA,MAAM,CAC5C,CAACsE,EAAM8B,YAAYC,KAAK,OAAQ,CAC5BgE,eAAgB,UAEpBC,QAAS,OACTD,eAAgB,gBAChBE,SAAU,OACN,oBAAqB,CACrBL,MAAO,IAEd,IA2DcM,MAzDSpK,IAA0F,IAAzF,KAACpD,EAAO,GAAE,aAAEuB,EAAY,KAAEJ,EAAO,EAAC,MAAEc,EAAQ,EAAC,MAAEf,EAAQ,EAAC,cAAEM,EAAa,UAAEiM,GAAUrK,EACxG,MAAOgC,EAAQsI,GAAa1E,mBAAS,GAErCO,qBAAU,KACFoE,MAAMC,QAAQ5N,IACd0N,EAAU1N,EAAKoF,OACnB,GACD,CAACpF,IAcJ,OAAIiC,GAAS,EACF,KAGPyE,eAACyG,EAAW,CAACvH,UAAU,MAAMiI,WAAY,SAAS/K,SAAA,CAC9C4D,eAACoH,IAAU,CAACtL,GAAI,CAACwC,MAAO,WAAYuB,SAAU,GAAGzD,SAAA,CAAC,WAASsC,EAAO,OAAKnD,EAAM,cAC7EyE,eAAC0G,IAAK,CAACxH,UAAU,MAAMiI,WAAW,SAAQ/K,SAAA,CACtC5C,cAAC6N,IAAM,CACHtI,SAAUgI,EACVvJ,KAAK,WACL9B,MAAM,GACNkC,MAAOpD,EACP4J,QAAS,CACL,CAAClL,GAAI,EAAGwC,MAAO,GACf,CAACxC,GAAI,GAAIwC,MAAO,IAChB,CAACxC,GAAI,GAAIwC,MAAO,IAChB,CAACxC,GAAI,GAAIwC,MAAO,IAChB,CAACxC,GAAI,IAAKwC,MAAO,MAErBmK,UAAU,iBACVzG,SA1BOtC,IAAc,IAAb,MAACc,GAAMd,EACC,oBAAlBhC,GACNA,EAAc,CAAC8C,SACnB,IAyBQpE,cAAC8M,EAAgB,CACbvH,SAAUgI,EACVxL,MAAO+L,KAAKC,KAAKhM,EAAQf,GACzB8D,MAAM,UACND,QAAQ,YACR5D,KAAMA,EACN+M,KAAK,SACLpI,SAzCCA,CAACwD,EAAG6E,MACZhN,KAAUgN,GAAiC,oBAAjB5M,GAC3BA,EAAa+H,GAAI6E,EACrB,SAyCc,E,mCCtDtB,MAAMC,EAAOhH,YAAMiH,IAANjH,EAAkB3G,IAAA,IAAC,MAAC6G,GAAM7G,EAAA,MAAM,CACzC,CAAC6G,EAAM8B,YAAYC,KAAK,OAAQ,CAC5B9C,SAAU,GACVgB,QAAS,SAEhB,IACK+G,EAAalH,YAAMmH,IAANnH,EAAepE,IAAA,IAAC,MAACsE,GAAMtE,EAAA,MAAM,CAC5C,CAACsE,EAAM8B,YAAYC,KAAK,OAAQ,CAC5B9C,SAAU,IAEjB,IAED,SAASiI,EAAOpL,GAAqC,IAApC,QAACjB,EAAU,GAAE,OAAEL,EAAS,CAAC,EAAC,KAAE2M,GAAKrL,EAC9C,MAAM,aAACsL,EAAe,CAAC,EAAC,UAAEC,GAAa7M,EACjC8M,EAAUhF,mBAAQ,IACbzH,EAAQmD,KAAI,CAACuJ,EAAQC,KACxB,MAAM,MAAC1M,EAAQ,GAAE,GAAExC,EAAK,GAAE,QAAEgF,GAAU,GAAQiK,GAAU,CAAC,EAGzD,OADkBE,IAAEC,WAAWpK,GAAWA,EAAQ,CAACiK,SAAQJ,SAAS7J,GAKhE1E,cAACkO,EAAI,CAAC7G,QAAS,SAAU/E,GAAI,CAACwC,MAAO,OAAQiK,QAAS,UAAWpC,WAAY,OAAQ6B,GAAc5L,SAC1EV,GAAdxC,GAAMkP,GAJV,IAI+B,KAG/C,CAAC3M,EAASuM,IACb,OAAOhI,eAAAwI,IAAA,CAAApM,SAAA,CACF8L,EACAD,GAAazO,cAACkO,EAAI,CAAC7G,QAAS,OAAQ/E,GAAI,CAACwC,MAAO,OAAQiK,QAAS,UAAWpC,WAAY,OAAQ6B,OAEzG,CAEA,MA2DMS,EAAYvL,IAA+E,IAA9E,QAACzB,EAAO,KAAEnC,EAAO,GAAE,OAAE8B,EAAS,CAAC,EAAC,eAAEsN,EAAc,aAAEC,KAAiBC,GAAK1L,EAEvF,OAAQ5D,GAAQ,IAAIsF,KAAI,CAAChD,EAAKwM,KAC1B,MAAM,QAACS,EAAU,IAAMzN,EAIvB,OAHIyN,IACAjN,EAAMA,EAAIiN,IAhED/L,KASQ,IATP,IACIlB,EAAM,GAAE,QACRH,EAAU,CAAC,EAAC,OACZL,EAAS,CAAC,EAAC,eACXsN,EAAc,SACdI,EAAQ,aACRH,EAAY,oBACZI,KACGH,GACN9L,EACnB,MAAM,UACFmL,GAAY,EAAK,eACjB3M,EAAiB,OAAM,WACvB0N,EAAsB,WACtBC,GACA7N,GACE,KAAC2M,GAAQa,EACf,IAAIM,EAAW,CAAC,EACZD,IACAC,EAAWD,EAAW,CAACrN,SAAS,CAAC,GAErC,MAIIuN,EAAa3P,cAACkO,EAAI,CAAC5L,GAAI,CAAC,EAAG+E,QAAS,OAAQ7E,UAAU,KAAKoN,MAAM,MAAKhN,SAClE5C,cAAC6P,IAAO,CAACtJ,MAAM,SAASuJ,UAAU,MAAKlN,SACnC5C,cAAA4E,IAAA,CAAYsB,QAASiJ,EAAaY,UAAK,EAAM3N,EAAIxB,IAAKwB,GAAMmD,UAAWgK,EAAoB3M,SACvF5C,cAACoO,EAAU,CAACtJ,MAAO,gBAK7BkL,EAAO/N,EAAQmD,KAAI,CAACuJ,EAAQsB,KAC9B,MAAM,GAACvQ,EAAK,GAAE,SAAEyC,EAAQ,WAAEmC,EAAa,KAAI,eAAEH,EAAc,QAAEO,GAAU,GAAQiK,GAAU,CAAC,EAE1F,KADkBE,IAAEC,WAAWpK,GAAWA,EAAQ,CAACiK,SAAQJ,SAAS7J,GAEhE,OAAO,KAEX,IAAIsL,EAQJ,OANIA,EADA7L,GAAkB0K,IAAEC,WAAW3K,GACxBA,EAAe/B,EAAI1C,IACnBmP,IAAEC,WAAW3M,GACbA,EAAS,CAACC,MAAKmM,QAAOe,IAAahL,EAEnCuK,IAAEqB,IAAI9N,EAAK1C,EAAI4E,IAAeA,EAElCtE,cAACkO,EAAI,CAAc7G,QAASvF,GAAkB,SAAUU,UAAU,KAAKoN,MAAM,MAAKhN,SACpFoN,GADatQ,EAAKuQ,EAEhB,IAGX,OAAOzJ,eAAAwI,IAAA,CAAyBmB,QAASX,EAAYtJ,QA/B5BkD,IACjBA,EAAEgH,iBACEvB,IAAEC,WAAWI,IAAiBA,EAAe9M,EAAI,EA8B5CE,GAAMkN,EAAa,CAACa,OAAQ,aAAcX,GAAY,IAAIA,GAAU9M,SAAA,CAChFoN,EACAvB,GAAakB,IAHIL,EAIX,EAUAgB,CAAa,CAAClO,MAAKH,UAASL,SAAQsN,iBAAgBI,SAAUV,EAAOO,kBAAiBC,GAAM,GACrG,EAIAzI,EAAgB/C,IAAsH,IAArH,OAAChC,EAAS,CAAC,EAAC,KAAE9B,EAAO,GAAE,QAAEU,EAAO,QAAEX,GAAU,EAAK,UAAE+G,EAAS,aAAExF,EAAY,QAAEoE,EAAO,oBAAEtE,GAAoB,GAAM0C,EAClI9D,EAAOA,GAAQ,GACf,MAAOyQ,EAAYC,GAAiB1H,mBAAS,CAAC,IACzC2H,EAAQC,GAAa5H,mBAAS,CAAC1I,MAAM,EAAOwB,OAAQ,CAAC,KACtD,QACIK,EAAU,GAAE,WACZuN,EAAU,cACVmB,GAAgB,EAAI,aACpBtP,EAAY,KACZJ,EAAI,MACJc,EAAK,MACLf,EAAK,iBACLgB,EAAgB,cAChBV,EAAa,KACb0M,EAAO,SAAQ,aACf4C,EAAe,GAAE,uBACjBC,EAAsB,YACtBhP,GAAc,EAAK,SACnBiP,EAAQ,cACRC,EAAa,kBACbC,EAAoB,GAAE,gBACtBC,EAAgB,IAChBrP,GACJ,KAAC2M,GAAO,IAAM2C,cAAgBnN,KAC9BwL,GAAmD,mBAAtByB,EAAkCA,EAAoBA,EAAkBG,QAAQ5C,KAAS,IAAK,EAC3H3E,GAAMf,IAAMuI,OAAO,IACjBlM,GAASuI,MAAMC,QAAQ5N,IAASA,EAAKoF,OACvCmM,GAAU3H,mBAAQ,IACflE,GAAWqD,IAAMyI,eAAe9L,GACxBA,EAEJxF,cAAAuR,WAAA,KACR,CAAC/L,IAEE0J,GAAkB9M,IACpB,GAAIuO,GAAiBnB,EAAY,CAC7B,MAAM/E,EAAM+E,EAAWpN,GACnByO,IACAzO,EAAMyO,EAAuBzO,IAEjC5B,EAAQwJ,KAAKS,EAAKrI,EACtB,MAAWoN,GACPA,EAAWpN,EACf,EAGE+M,GAAeA,CAACzP,EAAI0C,EAAKgH,KAC3BA,EAAEoI,kBACF,MAAM5P,EAAS,CACX2E,MAAOA,IAAMC,eAAAiL,IAAA,CAAMC,WAAS,EAAC/D,WAAW,SAASrL,GAAI,CAACwF,EAAG,aAAc6J,IAAK,EAAE/O,SAAA,CAC1E5C,cAAC4R,IAAgB,CAAC9M,MAAM,UACxB9E,cAAAqC,IAAA,CAAYC,GAAI,CAAC+D,SAAU,UAAWsG,WAAY,KAAM7H,MAAM,QAAOlC,SAAC,cAE1E2J,OAAQ,SACRD,KAAMA,IAAMwE,EAASpR,EAAImS,GAAe,CAACzP,QACzCoK,QAASA,IAAMxM,cAAA8R,IAAA,CACXxP,GAAI,CAACwC,MAAO,QAAQlC,SAAEiM,IAAEC,WAAWiC,GAAiBA,EAAc,CAAC3O,QAAQ2O,GAAiB,iDAEpGL,EAAU,IAAID,EAAQrQ,MAAM,EAAMwB,UAAQ,EAG9C,SAASiQ,KACLnB,EAAU,IAAID,EAAQrQ,MAAM,GAChC,CAEA,MASM2R,GAAkBrI,mBAAQ,IACvBxE,GAOEsB,eAACwL,WAAQ,CAAApP,SAAA,CACZ5C,cAAAiS,IAAA,CAAW5F,UAAW,GAAI/J,GAAI,CAAC4P,gBAAiB,UAAW3H,UAAW,oCAAoC3H,SACtG5C,cAACsO,EAAO,CAACrM,QAASA,EAASL,OAAQA,EAAQ2M,KAAMA,OAErDvO,cAAAmS,IAAA,CAAAvP,SACI5C,cAACiP,EAAS,CACNV,KAAMA,GACNtM,QAASA,EACTnC,KAAMA,EACN8B,OAAQA,EACRsN,eAAgBA,GAChBC,aAAcA,GACdI,oBAAqBA,UAlBrBvP,cAAA,SAAOoS,MAAO,CAAC1L,OAAQ,KAAK9D,SACpC5C,cAAA,MAAA4C,SACI5C,cAAA,MAAIoS,MAAO,CAACrK,UAAW,UAAUnF,SAAC5C,cAAA,MAAA4C,SAAKgO,GAAgB,4BAoBhE,CAAC9Q,EAAM8B,IAeV,OAbAyH,qBAAU,KAAO,IAADgJ,EACZ,GAAO,OAAHzI,SAAG,IAAHA,IAAY,QAATyI,EAAHzI,GAAK0I,eAAO,IAAAD,GAAZA,EAAcE,MAAO,CACrB,MAAMC,EAAmB5I,GAAI0I,QAAQC,MAAME,aAC3CjC,EAAc,IAAID,EAAY7J,OAAQ8L,EAAmB,IAAMA,OAAmBrN,GACtF,IACD,IAEHkE,qBAAU,KAAO,IAADqJ,GACRxR,GAAuBE,IAA4B,QAAhBsR,EAAK9I,GAAI0I,eAAO,IAAAI,GAAXA,EAAaC,gBACrD/I,GAAI0I,QAAQK,eAAeC,SAAS,EAAG,EAC3C,GACD,CAAC1R,EAAqBE,IAElBoF,eAAAC,IAAA,CAAK4F,UAAU,iBAAiB/J,GAAI,CAACoE,OAAQxB,KAAWrF,EAAWoR,GAAmB,MAAS,QAAQrO,SAAA,CAC1G4D,eAAAf,IAAA,CAAOkI,WAAW,WAAWR,eAAe,WAAWzH,UAAU,MAAMmN,GAAI,EAAGlB,IAAK,GAAG/O,SAAA,CACjFyO,GACAxP,GAAe7B,cAAA4E,IAAA,CAAY2B,MAAM,UAAUL,QAASU,EAAUhE,SAC3D5C,cAAA8S,IAAA,CAASzG,UAAYjL,EAAgB,kBAAe+D,SAG5DqB,eAAAuM,IAAA,CACIvQ,UAASwQ,IACT3G,UAAW,GACXzC,IAAKqJ,GAAMrJ,GAAI0I,QAAwB,eAAIW,EAC3C3Q,GAAI,CAAC4Q,UAAW,yBAA0BC,GAAI,EAAGzM,OAAQxB,KAAWrF,EAAU,oBAAsB,OAAQoI,SAAU,YAAYrF,SAAA,CAEjI/C,EA7DSuT,MACd,MAAMC,EAAc9J,OAAO8J,YAAc,IACrC3M,GAAU6J,EAAW7J,OAAS6J,EAAW7J,OAAS2M,EAAcA,EAAc9C,EAAW7J,OAAS2M,IAAgBA,EACtH,OAAOrT,cAAAyR,IAAA,CAAMC,WAAS,EAAC/D,WAAY,SAAUR,eAAe,SAAS7K,GAAI,CAACoE,UAAQ9D,SAC9E5C,cAAAyR,IAAA,CAAM6B,MAAI,EAAC3F,WAAW,SAASrL,GAAI,CAAC2F,SAAU,YAAYrF,SACtD5C,cAACuT,IAAO,OAET,EAuDGH,GACApT,cAAAwT,IAAA,CAAO5J,IAAKqJ,GAAMrJ,GAAI0I,QAAe,MAAIW,EAAI,aAAW,gBAAgBjF,KAAMA,EAAMyF,cAAY,EAAA7Q,SAC7FmP,KAET/R,cAAA0T,IAAA,CACIpR,GAAI,CAAEwC,MAAO,OAAQ6O,OAASvM,GAAUA,EAAMuM,OAAOC,OAAS,EAAG3L,SAAU,YAC3E7H,KAAMc,GAAuBE,IAAgB,EAAMwB,SAEnD5C,cAACuT,IAAO,CAACjR,GAAI,CAACwC,MAAO,mBAG3BjF,GAAWC,EAAKoF,OAAS,GACvBlF,cAACsN,EAAe,CAACxN,KAAMA,EAAMuB,aAAcA,EAAcJ,KAAMA,EAAMc,MAAOA,EAAOf,MAAOA,EAAOM,cAAeA,GAAiBU,EAAkBuL,UAAWnM,GAAgBF,IAClLlB,cAACmH,IAAM,CAACkF,UAAU,uBAAuBjM,KAAMqQ,EAAOrQ,KAAMwB,OAAQ6O,EAAO7O,OAAQ4F,QAASqK,OAC1F,EAGKgC,yBAAWC,eAAKnN,G,iGC/Q/B,MAAMoN,EAAa3U,IACf,MAAM,MACF8C,EAAQ,GAAE,KACV+I,EAAO,OAAM,QACbL,EAAU,GAAE,SACZoJ,EAAW,QAAO,SAClBC,EAAW,KAAI,eACfC,EAAc,eACdC,GAAiB,EAAK,OACtBC,GACAhV,EAIJ,UAHAA,EAAQyP,IAAEwF,UAAUjV,IACP+U,eAEc,WAAvBlJ,EAAKY,cAA4B,CAC5B4B,MAAMC,QAAQ9C,IAAaA,EAAQ1F,QACpCoP,QAAQC,MAAM,yCAElB,MAAMC,GAAQ5J,GAAW,IAAIxF,KAAKqP,GACvBzU,cAAA,UAAQoE,MAAOqQ,EAAIR,GAAUrR,SAAsB6R,EAAIT,IAApBS,EAAIR,MAGlD,OADIE,GAAgBK,EAAKE,QAAQ1U,cAAA,UAAQoE,MAAM,GAAExB,SAAE,sBAC5C5C,cAAC2F,IAAK,IACLvG,EACJwG,SAAUsO,EACVxU,GAAIwC,EACJ+I,KAAMA,EAAKrI,SACb4R,GACN,CACA,OAAOxU,cAAC2F,IAAK,CACTjG,GAAIwC,EACJ+I,KAAMA,KACF7L,EACJgV,OAAQA,GACV,EAmDSO,IAjDI,WAAiB,IAAhBvV,EAAK6F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzB,MAAM,MACF/C,EAAQ,GAAE,KACV+I,EAAO,OAAM,SACb2J,GAAW,EAAK,SAChBhP,EAAQ,WACRiP,EAAa,CAAC,EAAC,UACfnP,EAAY,SAAQ,aACpBoP,EAAe,CAAC,EAAC,UACjBC,EAAY,GAAE,OACdX,GACAhV,EAqBJ,OACIoH,eAACwO,IAAS,CACN5C,MAAqB,QAAd1M,EAAsB,CAAC0H,QAAS,OAAQO,WAAY,YAAamH,GAAgB,IAAIA,GAAclS,SAAA,CACzGV,GAASlC,cAAA,SACNqM,UAAU,qBACV4I,QAAS/S,EACTkQ,MAAO,CAACtN,MAAO,UAAWoQ,YAAa,KAAML,GAAYjS,SAExDV,IAELlC,cAAC+T,EAAS,IAAK3U,EAAO8U,eA7BN9K,IACpB,GAA2B,WAAvB6B,EAAKY,eAA8B+I,EAAU,CAC7C,MAAM,QAAChK,EAAO,KAAE5G,GAAQoF,EAAE+L,OACpBC,EAAS,GACf,IAAK,IAAInF,EAAI,EAAGoF,EAAIzK,EAAQ1F,OAAQ+K,EAAIoF,EAAGpF,IACnCrF,EAAQqF,GAAGqF,UACXF,EAAOpL,KAAKY,EAAQqF,GAAG7L,OAG3BwB,GAAUA,EAASwD,EAAGgM,EAAQpR,EACtC,MAAW4B,GAAUA,EAASwD,EAAE,EAmB0BgL,OAhB1ChL,IACZgL,GACAA,EAAOhL,EAAE+L,OAAOnR,KAAMoF,EAAE+L,OAAO/Q,MACnC,IAcK2Q,GACG/U,cAAAqC,IAAA,CAAYwC,QAAQ,YAAYvC,GAAI,CAACwC,MAAO,MAAOuB,SAAU,UAAUzD,SAAEmS,MAGzF,C,mCCxFA,0RA6BO,MAEMQ,EAAW,eAACtU,EAAIgE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGjE,EAAKiE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAKuQ,EAAMvQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIwQ,EAAMxQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,GAAE,OAAK8F,UACrE,IACE,MAAM,QAAE2K,EAAO,KAAE5V,SAAe6V,YAAW,CACzCxK,IAAI,qBAADxI,OAAuB1B,EAAO,EAAC,WAAA0B,OAAU3B,EAAK,YAAA2B,OAAW6S,EAAM,YAAA7S,OAAW8S,KAE3EC,EACF/V,EAAS,CACPsL,KAAM2K,IACNC,QAAS,CAAElU,MAAO7B,EAAMmB,OAAMD,WAGhC8U,YAAahW,EAAKiW,QAAS,QAE/B,CAAE,MAAO9J,GACPtM,EAASqW,YAAS/J,EAAI8J,QAAS,SACjC,EACA,EA+COE,EAAc,eAAChV,EAAIgE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGjE,EAAKiE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIwQ,EAAMxQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIuQ,EAAMvQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAK8F,UAC7E,IACE,MAAMN,EAAG,qBAAA9H,OAAwB1B,EAAO,EAAC,qBAAA0B,OACnB8S,EAAM,YAAA9S,OAAW6S,GACjCzJ,QAAYmK,IAAMhG,IAAIzF,GAC5B9K,EAAS,CACPsL,KAAMkL,KACNN,QAAS,CAAE/V,KAAMiM,EAAIjM,KAAMmB,OAAMD,QAAOyU,WAE5C,CAAE,MAAOxJ,GACPtM,EAASqW,YAAS/J,EAAI8J,QAAS,SACjC,EACA,EAEWK,EACX,WAAiB,OACfrL,MAAOpL,EAAU0W,KACf1W,EAAS,CAAEsL,KAAMqL,OACjB,MACEjW,MAAM,KAAEY,EAAI,YAAEsV,IACZF,GAAU,CAEd,EAEO3V,EAAa,eAAC8V,EAAKvR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CAC3CgG,KAAMwL,KACNZ,QAASW,EACV,EAiBYE,EAAUA,CAACC,EAAUjM,IAAaK,UAC7C,IACE,MAKM,KAACjL,EAAI,QAAE4V,SAAiB/J,YAAY,CAACR,IAAK,YAAaH,KAAM2L,IAChEjB,GACD/V,EAAS,CACPsL,KAAM2L,IACNf,QAAS/V,IAGXgW,YAAa,gBACTpL,GACFA,EAASgL,EAAS5V,IAGpBgW,YAAahW,EAAKiW,QAAS,QAE/B,CAAE,MAAO9J,GACPtM,EAASqW,YAAS/J,EAAI8J,QAAS,UAC/BzB,QAAQuC,IAAI5K,EACd,GAGW6K,EAAa,SAACH,GAAQ,IAAEnB,EAAMvQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAI8R,EAAW9R,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAAK4F,MAAOpL,EAAU0W,KAChG,IACE,MAAMW,EAAO,IAAIC,SACjB,IAAK,IAAIC,KAAOC,OAAOC,KAAKT,GAC1B,GAAI,CAAC,mBAAoB,iBAAiBxF,QAAQ+F,GAAO,EAAG,CAC1D,MAAMpX,EAAO6W,EAASO,GAChBxJ,EAAUD,MAAMC,QAAQ5N,GAE9B,IAAIuX,EAAa3J,KADO,OAAT5N,GACuBwX,KAAKC,UAAUzX,GAAQA,EAC7DkX,EAAKQ,OAAON,EAAKG,EACnB,CAEFL,EAAKQ,OAAO,cAAeF,KAAKC,UAAUR,IAC1C,IAAK,IAAIG,IAAO,CAAC,mBAAoB,gBAAiB,qBAAsB,CAC1E,MAAMO,EAAQd,EAASO,GACvB,GAAIO,EAAO,IAAK,IAAIC,KAAQD,EAAOT,EAAKQ,OAAON,EAAKQ,EACtD,CAEA,MAAM,QAAEhC,EAAO,KAAE5V,SAAe4L,YAAa,CAAEP,IAAK,mBAAoBH,KAAMgM,IAC1EtB,GACFI,YAAa,gBAEf,MACEzV,MACEoV,QAAQ,KAAExU,EAAI,MAAED,EAAK,MAAE2W,KAEvBtB,IAEC1W,EADAgY,EACS1B,EAAYhV,EAAMD,EAAO2W,GADlBpC,EAAS,EAAG,EAAGC,IAEpC9K,EAASgL,EAAS5V,EACpB,CAAE,MAAOmM,GACP6J,YAAa7J,EAAI8J,QAAS,QAC5B,EACA,EAmDWpV,EAAaA,CAACiX,EAASlN,IAAaK,UAC/C,IACE,MAAM,QAAE2K,EAAO,KAAE5V,SAAe2L,YAAc,CAAEN,IAAK,YAAaH,KAAM,CAAElL,KAAM,CAAE8X,QAASA,MAC3F9B,YAAahW,EAAKiW,QAASL,EAAU,UAAY,SAC7CA,GACF/V,EAAS,CACPsL,KAAM4M,IACNhC,QAAS+B,IAGblN,GAAYA,EAASgL,EAAS5V,EAChC,CAAE,MAAOmM,GACP6J,YAAa7J,EAAI8J,QAAS,QAC5B,E,mCCtQF,2BAuCe+B,IAnCE,SAACrN,GAAwC,IAAnCC,EAAQzF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM2F,EAAO3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/C,MAAOnF,EAAMiY,GAAWjP,wBAAS3D,IAC1BtF,EAASgL,GAAc/B,oBAAS,IAChCyL,EAAOyD,GAAYlP,mBAAS,OAC9B1H,EAAc6W,GAAmBnP,oBAAS,GAE/C,SAASoP,IACL,IAAI/M,EAAMV,EACNG,EAAQQ,cACRD,EAAG,GAAAxI,OAAMwI,EAAG,KAAAxI,OAAI0I,YAAUT,EAAQQ,eAEtCuK,YAAW,CAACxK,MAAKT,WAAUC,cAAc,IACpCmB,MAAKqM,IACFA,EAAOrY,MAAQiY,EAAQI,EAAOrY,KAAK,IAEtCoM,SAAQ,KACLrB,GAAW,GACXoN,GAAgB,EAAM,GAElC,CAaA,OANA5O,qBAAU,KACNwB,GAAW,GACXmN,EAAS,MACTE,GAAa,GACd,CAACzN,IAEG,CAAC3K,OAAMD,UAAS0U,QAAOpT,QAX9B,WACI8W,GAAgB,GAChBC,GACJ,EAQkD9W,eACtD,C,mCCrCA,8MAKO,MAAMgX,EAAaA,IAAMrN,UAC9B,IACE,MAAMgB,QAAYmK,IAAMhG,IAAI,mBAC5BiH,OAAOkB,OAAOtM,EAAIjM,KAAM,CAACwY,UAAW,IAAI9T,OACxC7E,EAAS,CACPsL,KAAMsN,IACN1C,QAAS9J,EAAIjM,MAEjB,CAAE,MAAOmM,GAAM,IAADuM,EAAAC,EACZnE,QAAQuC,IAAI5K,GACZtM,EAAS,CACPsL,KAAMyN,IACN7C,QAAS,CAAE8C,IAAQ,OAAH1M,QAAG,IAAHA,GAAa,QAAVuM,EAAHvM,EAAK2M,gBAAQ,IAAAJ,OAAV,EAAHA,EAAeK,WAAYxT,OAAW,OAAH4G,QAAG,IAAHA,GAAa,QAAVwM,EAAHxM,EAAK2M,gBAAQ,IAAAH,OAAV,EAAHA,EAAepT,SAEtE,GAIWyT,EAAYA,CAACnC,EAAUoC,IAAWhO,UAC7C,IACE,MAAMnJ,EAAS,CACb8M,QAAS,CACP,eAAgB,qBAId3C,QAAYmK,IAAM8C,KAAK,eAAgBrC,EAAU/U,GAEvDkU,YAAa/J,EAAIjM,KAAKiW,SACtBpW,EAASyY,IAEX,CAAE,MAAOnM,GACP,IAAIsI,EAAQtI,EAAIgN,QAAUxL,MAAMC,QAAQzB,EAAIgN,SAAWhN,EAAIgN,OAAO/T,OAAS+G,EAAIgN,OAAO,GAAGN,IAAM1M,EAAI8J,QACnGpW,EAASqW,YAAUzB,EAAO,SAK5B,GAIW2E,EAAmBA,CAACC,EAAWxX,IAAUoJ,MAAOpL,EAAU0W,KACrE,IACE,IAAI+C,EAAU/C,IAAWgD,OAAOD,QAChC,MAAMrN,QAAYmK,IAAMoD,MAAM,gCAAD3W,OAAiCwW,GAAa,CAAExX,MAAOA,IACpF,IAAIiN,EAAQwK,EAAQjI,QAAQiI,EAAQG,MAAMC,GAAMA,EAAE5Y,MAAQmL,EAAIjM,KAAKc,QACpD,IAAXgO,IACFwK,EAAQxK,GAAS7C,EAAIjM,MAEvBH,EAAS,CACPsL,KAAMwO,IACN5D,QAASuD,GAEb,CAAE,MAAOnN,GACPtM,EAAS,CACPsL,KAAMyN,IACN7C,QAAS,CAAE8C,IAAK1M,EAAI2M,SAASC,WAAYxT,OAAQ4G,EAAI2M,SAASvT,SAElE,GAIWqU,EAAeA,CAACP,EAAWQ,IAAO5O,MAAOpL,EAAU0W,KAC9D,IACE,IAAI+C,EAAU/C,IAAWgD,OAAOD,QAChC,MAAMrN,QAAYmK,IAAM0D,OAAO,gBAAiB,CAAE9Z,KAAM,CAAEqZ,UAAWA,KACrE,IAAIvK,EAAQwK,EAAQjI,QAAQiI,EAAQG,MAAMC,GAAMA,EAAE5Y,MAAQmL,EAAIjM,KAAKc,QACpD,IAAXgO,GACFwK,EAAQS,OAAOjL,EAAO,GAExBkH,YAAa,wBACb6D,GAAMA,EAAG5N,GACTpM,EAAS,CACPsL,KAAM6O,IACNjE,QAASuD,GAEb,CAAE,MAAOnN,GACPtM,EAAS,CACPsL,KAAMyN,IACN7C,QAAS,CAAE8C,IAAK1M,EAAI2M,SAASC,WAAYxT,OAAQ4G,EAAI2M,SAASvT,SAElE,GAIW0U,EAAoBA,CAACZ,EAAWvB,IAAY7M,MAAOpL,EAAU0W,KACxE,IACE,IAAI+C,EAAU/C,IAAWgD,OAAOD,QAChC,MAAMrN,QAAYmK,IAAM0D,OAAO,qBAAsB,CAAE9Z,KAAM,CAAE8X,QAASA,EAASuB,UAAWA,KAC5F,IAAIvK,EAAQwK,EAAQjI,QAAQiI,EAAQG,MAAMC,GAAMA,EAAE5Y,MAAQmL,EAAIjM,KAAKc,QACpD,IAAXgO,IACFwK,EAAQxK,GAAS7C,EAAIjM,MAEvBH,EAAS,CACPsL,KAAM+O,IACNnE,QAASuD,GAEb,CAAE,MAAOnN,GACPtM,EAAS,CACPsL,KAAMyN,IACN7C,QAAS,CAAE8C,IAAK1M,EAAI2M,SAASC,WAAYxT,OAAQ4G,EAAI2M,SAASvT,SAElE,E,mCC5GF,qCA8FetF,IA1FsB,SAAC0K,GAA6B,IAAxBwP,EAAYhV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACtD,MAAOnF,EAAMiY,GAAWjP,mBAAS,KAC5BjJ,EAASgL,GAAc/B,oBAAS,IAChC7H,EAAMiZ,GAAWpR,mBAAS,IAC1B9H,EAAOmZ,GAAYrR,mBAAS,MAC5BtH,EAAa4Y,GAAkBtR,mBAAS,KACxC5H,EAAqBmZ,GAA0BvR,oBAAS,IACxDvH,EAAa+Y,GAAkBxR,oBAAS,IACxC1H,EAAc6W,GAAmBnP,oBAAS,GAC3CyR,EAAgBnJ,kBAAO,GAE3B/H,qBAAU,KACNmR,GAAW,GACZ,CAAC/P,EAAKxJ,EAAMD,IAEfqI,qBAAU,KACNwB,GAAW,EAAK,GACjB,IAEHxB,qBAAU,KACN,MAAMoR,EAAkB5L,IAAE6L,UAAS,KAC1BH,EAAcjI,UACfgI,GAAe,GACfE,IACJ,GACDP,GAIH,OAFAQ,IAEOA,EAAgBE,MAAM,GAC9B,CAACnZ,EAAayY,IAEjB,MAAMO,EAAYI,uBAAY7P,UAC1B4K,YAAW,CAACxK,IAAI,GAADxI,OAAK8H,EAAG,UAAA9H,OAAS1B,EAAI,YAAA0B,OAAWnB,EAAW,WAAAmB,OAAU3B,KAC/D8K,MAAKC,IACF,MAAM,KAACjM,GAAQiM,EACfgM,EAAQjY,EAAK,IAEhBkM,OAAM5C,IACHkL,QAAQC,MAAMnL,EAAE2M,QAAQ,IAE3B7J,SAAQ,KACLrB,GAAW,GACXwP,GAAuB,GACvBC,GAAe,GACfrC,GAAgB,GACZsC,EAAcjI,UACdiI,EAAcjI,SAAU,EAC5B,GACF,GACP,CAAC7H,EAAKxJ,EAAMD,EAAOQ,IAEhBH,EAAeuZ,uBAAY,CAACxR,EAAG6E,KACjCoM,GAAuB,GACvBH,EAAQjM,EAAM,GACf,IAEGxM,EAAemZ,uBAAYra,IAAc,IAAb,MAAC6D,GAAM7D,EACrC6Z,EAAehW,GACf8V,EAAQ,EAAE,GACX,IAEG5Y,EAAgBsZ,uBAAY9X,IAAc,IAAb,MAACsB,GAAMtB,EACtCuX,GAAuB,GACvBH,EAAQ,GACRC,EAAS/V,EAAM,GAChB,IAQH,MAAO,CACHtE,OACAD,UACAoB,OACAD,QACAK,eACAI,eACAN,QAbYA,KACZ+Y,EAAQ,GACRjC,GAAgB,GAChBuC,GAAW,EAWXlZ,gBACAE,cACAN,sBACAK,cACAH,eAER,C,uZCvFO,MAAMyZ,EAAkBA,CAACC,EAAKC,EAASC,KACtCD,IAAYC,IACZ7D,OAAO8D,eAAeH,EAAKE,EACvB7D,OAAO+D,yBAAyBJ,EAAKC,WAClCD,EAAIC,IAERD,G,wICDX,MAAMK,GAAgBjU,YAAM8L,IAAN9L,EAAc3G,IAAA,MAAGA,EAAA,MAAM,CACzCyM,MAAO,IACPtG,OAAQ,IACR0U,aAAc,EACdC,SAAU,SACVhU,QAAS,EACT+F,QAAS,OACTO,WAAY,SACZ2N,cAAe,SACfnO,eAAgB,SACnB,IAEKoO,GAAazY,IAAyC,IAAxC,MAAC2U,EAAQ,GAAE,QAAEjQ,EAAO,YAAEgU,GAAY1Y,EAElD,MAGM2Y,GAAShE,GAAS,IAAIrS,KAAIsS,GACrBlR,gBAAC2U,GAAa,CAACO,UAAW,EAAE9Y,SAAA,CAC/B5C,eAAC2b,KAAe,CAACrZ,GAAI,CAACwC,MAAO8W,OAC7B5b,eAAAqC,IAAA,CAAYwC,QAAQ,YAAYgX,MAAM,SAASvZ,GAAI,CAAC0K,MAAO,UAAWqO,SAAU,SAAUS,aAAc,YAAYlZ,SAAE8U,EAAK1T,YAInI,OAAOhE,eAACuI,IAAK,CAAC3G,OAVD,CACT2E,MAAO,aASmBiC,cAAehB,EAAQ5E,SACjD4D,gBAAAiL,IAAA,CAAMC,WAAS,EAACpK,QAAS,EAAGhF,GAAI,CAAC8K,QAAS,QAAQxK,SAAA,CAC9C5C,eAAAyR,IAAA,CAAM6B,MAAI,EAAA1Q,SACN5C,eAAC+b,KAAK,CAACna,OAAQ,CAACxB,MAAM,EAAM2V,QAAS,+DAAgEiG,SAAU,YAElHvE,GAASzX,eAAAyR,IAAA,CAAM6B,MAAI,EAAA1Q,SAChB5C,eAAAic,IAAA,CAAQpX,QAAQ,WAAWvC,GAAI,CAAC4Z,MAAO,SAAUhW,QAASsV,EAAa1W,MAAM,QAAOlC,SAAC,iBAEzF5C,eAAAyR,IAAA,CAAM6B,MAAI,EAAA1Q,SACN5C,eAAAyR,IAAA,CAAMC,WAAS,EAACC,IAAK,EAAGrP,GAAI,CAAC8K,QAAS,OAAQ+O,oBAAqB,kBAAkBvZ,SAChF6Y,UAIT,EAiIGW,OA9HqBhd,IAChC,MAAOid,EAAgBC,GAAqBxT,mBAAS,CAAC1I,MAAM,EAAOwB,OAAQ,CAAC,KACtE,KACFvC,EAAI,iBAAEkd,EAAmB,GAAE,cAAEC,EAAgB,GAAE,kBAAEC,EAAoB,GAAE,iBAAEC,EAAgB,oBAAEC,EAAmB,iBAC9GC,EAAgB,gBAAEC,EAAe,MAAEC,EAAK,YAAEC,EAAW,QAAEC,EAAO,sBAAEC,GAChE7d,EAIJ,SAAS8d,EAAiBxF,EAAM1T,EAAMoF,GAClCA,EAAEoI,kBACF8K,EAAkB,CAAClc,MAAM,EAAMwB,OAAQ,IAAI8V,GAAO1T,QACtD,CAEA,SAASmZ,IACLb,EAAkB,CAAClc,MAAM,EAAOwB,OAAQ,MAC5C,CAOA,OAAQ4E,gBAAAf,IAAA,CAAOnD,GAAI,CAACqL,WAAY,OAAO/K,SAAA,CAClCyZ,EAAejc,MAAQJ,eAACub,GAAU,CAAC9D,MAAO4E,EAAeza,OAAQ4F,QAAS2V,EAAiB3B,YANhG,WACIkB,EAAiB,CAACvH,OAAQ,CAAEnR,KAAMqY,EAAerY,KAAMyT,MAAO,QAC9D0F,GACJ,IAII3W,gBAAAf,IAAA,CAAOC,UAAW,MAAO4B,QAAS,EAAGhF,GAAI,CAAC6Q,GAAI,GAAGvQ,SAAA,CAC5C2Z,EAAiBrX,OAAUqX,EAAiBnX,KAAI,CAACgY,EAAKC,IAC3Crd,eAAAuR,YAAA,CAAA3O,SAAE5C,eAAA,QAAMoS,MAAO,CAACkL,OAAQ,EAAGjW,QAAS,EAAGkW,WAAY,OAAO3a,SACxD4D,gBAAA,KAAGgX,KAAMJ,EAAKjI,OAAO,SAAQvS,SAAA,CAAC,YAClBya,EAAM,WAGzBrd,eAAA,QAAA4C,SAAM,aACb5C,eAAA,QAAA4C,SACWvD,EAAOW,eAACgS,WAAQ,CAAApP,SACRma,EACK/c,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAQ9H,QAASgX,EAAiBnN,UAAK,EAAMgN,EAAa,oBAAqBU,UAAWzd,eAAC0d,IAAa,IAAI9a,SAAC,SAG9J4D,gBAAA,SAAOyO,QAAQ,yBAAwBrS,SAAA,CACzC5C,eAAA,SACIoS,MAAO,CAAChF,QAAS,QACjBnC,KAAK,OACL2J,UAAQ,EACR5Q,KAAK,mBACLuB,UAAWlG,GAAiC,WAAzByd,EAAMa,KAAK5Z,KAAKwK,KACnC3I,SAAU8W,EACV9S,IAAK+S,EACLjd,GAAG,2BAEPM,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAOpL,SACnD,gBAIXgb,cAAqBrB,EAAiBrX,aAG1DsB,gBAAAf,IAAA,CAAOC,UAAW,MAAO4B,QAAS,EAAGhF,GAAI,CAAC6Q,GAAI,GAAGvQ,SAAA,CAC5C4Z,EAActX,OAAUsX,EAAcpX,KAAI,CAACyY,EAAKR,IACrCrd,eAAAuR,YAAA,CAAA3O,SACE5C,eAAA,QAAMoS,MAAO,CAACkL,OAAQ,EAAGjW,QAAS,EAAGkW,WAAY,OAAO3a,SACtD4D,gBAAA,KAAGgX,KAAMK,EAAK1I,OAAO,SAAQvS,SAAA,CAAC,OACvBya,EAAM,WAItBrd,eAAA,QAAA4C,SAAM,QACb5C,eAAA,QAAA4C,SACWvD,EAAO2d,EAAUhd,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAQ9H,QAASgX,EAAiBnN,UAAK,EAAMiN,EAAS,iBAAkBS,UAAWzd,eAAC0d,IAAa,IAAI9a,SAAC,SAG/J4D,gBAAA,SAAOyO,QAAQ,yBAAwBrS,SAAA,CACrC5C,eAAA,SACIoS,MAAO,CAAChF,QAAS,QACjBnC,KAAK,OACL2J,UAAQ,EACR5Q,KAAK,gBACLuB,UAAWlG,EACXuG,SAAU8W,EACV9S,IAAKgT,EACLld,GAAG,2BAEPM,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAOpL,SAAC,cAI/Dgb,cAAqBpB,EAActX,aAGvDsB,gBAAAf,IAAA,CAAOC,UAAW,MAAO4B,QAAS,EAAE1E,SAAA,CAC/B6Z,EAAkBvX,OAAUuX,EAAkBrX,KAAI,CAAC0Y,EAAKT,IAC7Crd,eAAAuR,YAAA,CAAA3O,SACE5C,eAAA,QAAMoS,MAAO,CAACkL,OAAQ,EAAGjW,QAAS,EAAGkW,WAAY,OAAO3a,SACtD4D,gBAAA,KAAGgX,KAAMM,EAAK3I,OAAO,SAAQvS,SAAA,CAAC,gBACdya,EAAM,WAG/Brd,eAAA,QAAA4C,SAAM,iBACb5C,eAAA,QAAA4C,SACWvD,EAAO4d,EACFjd,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAQ9H,QAASgX,EAAiBnN,UAAK,EAAMkN,EAAuB,qBAAsBQ,UAAWzd,eAAC0d,IAAa,IAAI9a,SAAC,SAGzK5C,eAACgS,WAAQ,CAAApP,SACX4D,gBAAA,SAAOyO,QAAQ,yBAAwBrS,SAAA,CACnC5C,eAAA,SACIoS,MAAO,CAAChF,QAAS,QACjBnC,KAAK,OACL2J,UAAQ,EACR5Q,KAAK,oBACLuB,UAAWlG,GAAiC,WAAzByd,EAAMa,KAAK5Z,KAAKwK,KACnC3I,SAAU8W,EACV9S,IAAKiT,EACLnd,GAAG,2BAEPM,eAAAic,IAAA,CAAQpX,QAAQ,WAAWrC,UAAU,OAAOwL,KAAK,QAAOpL,SAAC,gBAInDgb,cAAsC,OAAjBnB,QAAiB,IAAjBA,MAAmBvX,gBAGhE,E,qBC7KL,MAAM6Y,GAAYC,cAAY5W,IAAK,CACxC6W,KAAM,CAEJC,SAAU,IACVhU,SAAU,IACViU,aAAc,GACdjM,gBAAiB,UACjBkJ,aAAc,EACdgD,YAAa,EACbC,YAAa,QACbC,YAAa,QAGfC,YAAa,CACXjD,cAAe,MACfkD,KAAM,OACNN,SAAU,IACVhU,SAAU,IACVuU,YAAa,GACbC,WAAY,GACZC,cAAe,EACf,eAAgB,CACdA,cAAe,IAGnB5b,OAAQ,CACNsD,SAAU,GACVsH,WAAY,UAEdiR,GAAI,CACFtB,OAAQ,EACRjW,QAAS,GAEXwX,MAAO,CACLzR,QAAS,OACTkQ,OAAQ,EACRjW,QAAS,EACToX,YAAa,IACb9Q,WAAY,UAEdmR,SAAU,CACRpY,OAAQ,GACRsG,MAAO,GACPuQ,WAAY,GAEdwB,UAAW,CACT,UAAW,CACTja,MAAO,WAET,mBAAoB,CAClBA,MAAO,YAGXka,gBAAiB,CACf,UAAW,CACTla,MAAO,WAET,mBAAoB,CAClBA,MAAO,YAGXma,sBAAuB,CACrB,UAAW,CACTna,MAAO,WAET,mBAAoB,CAClBA,MAAO,WAETyY,WAAY,QAEd2B,oBAAqB,CACnB,UAAW,CACTpa,MAAO,WAET,mBAAoB,CAClBA,MAAO,WAETyY,WAAY,QAEd4B,OAAQ,CACN9Y,SAAU,IAEZ+Y,aAAc,CACZ/Y,SAAU,IAGZgZ,QAAS,CACP/B,OAAQ,GAEVgC,MAAO,CACLrX,SAAU,WACViK,gBAAiB9K,EAAMgB,QAAQmX,WAAWD,MAC1CpM,UAAW9L,EAAMoY,QAAQ,GACzBnY,QAASD,EAAME,QAAQ,EAAG,EAAG,GAC7Ba,IAAK,MACLD,KAAM,MACN8E,MAAO,MACPyS,UAAW,wBACXC,UAAW,OACXC,UAAW,MACXC,QAAS,QAEXC,oBAAqB,CACnBC,SAAU,EACVxE,cAAe,OAEjByE,YAAa,CACXzC,OAAQlW,EAAME,QAAQ,GACtB4W,SAAU,S,OCrEd,MAAM8B,GAAmB,CACvB3a,OAAQ,GACR4a,KAAM,GACNC,WAAY,KACZC,cAAe,GACf5D,iBAAkB,KAClBC,cAAe,KACf4D,aAAc,GACdrd,OAAQ,GACRQ,KAAM,GACN8c,iBAAiB,GAKbC,GAAY,CAChBlW,WAAY,CACVgI,MAAO,CACLuN,UAAWY,IACXvT,MAAO,OAIPwT,GAAyB,CAC7BzB,UAAW,CACT0B,WAAY,yBACZzS,KAAM,QACN0S,WAAW,IAGXC,GAAyB,CACvB5B,UAAW,CACT/Q,KAAM,QACN0S,WAAW,IAIbE,GAAkBrgB,IAAA,IAAC,MAAE6D,GAAO7D,EAAA,OAAM6D,GAAgB,IAAI,EAEtDlE,GAAkB4C,IAMjB,IANkB,UACvB3C,EAAS,KACTC,EACAE,YAAaugB,EAAY,YACzBC,EAAW,KACXzgB,EAAI,UAAEQ,GACPiC,GACK,IACFlC,EAAG,UACHiD,EAAS,WACThB,EAAU,KACVod,EAAI,cACJE,EAAa,OACbpd,EAAM,KACNQ,EAAI,WACJ2c,EAAa,KAAI,KACjBnc,EAAI,OACJsB,EAAS,GAAE,aACX+a,EAAe,GAAE,gBACjBC,GAAe,YACftJ,GAAc,IACZ1W,GAAQ,CAAC,EACb,MAAM0gB,GAAWlS,IAAEwF,UAAU0C,IACvBiK,GAAUjD,KACVpe,GAAWC,cACXkd,GAAQmE,aAAanE,GAAUA,KAC9Bzd,GAAM6hB,IAAWrY,IAAMC,UAAS,IAChCkO,GAAMmK,IAAWtY,IAAMC,SAAS,IAAKkX,MACrClgB,MAAOA,KAAMshB,GAAe,IAAM,CAAC,GAAKtJ,YAAS,sBACjDuJ,GAA0BC,IAA+BxY,oBAAS,GACnE6T,GAAsBvL,mBACtBwL,GAAmBxL,mBACnByL,GAAkBzL,mBACpB5Q,GAAUqJ,uBACZ0X,GAAgBliB,GAAOmiB,IAAgBC,KACnC,UAACC,GAAY,IAAO5E,GAAMzD,QAAU,CAAC,EACrCsI,GAAoBD,GAAUtc,KAAKkO,IACvC,MAAM,IAAE1S,EAAG,UAAEqD,EAAS,SAAEC,EAAQ,KAAEqK,EAAI,KAAExK,EAAO,CAAC,GAAMuP,GAAQ,CAAC,GAC3D,KAACtP,EAAO,GAAIuK,KAAMqT,EAAchhB,IAAKihB,GAAc9d,GAAQ,CAAC,EAChE,MAAO,CACLC,OAAMpD,IAAKihB,GAAcjhB,EAAKqD,YAAWC,WAAUqK,KAAMuT,aAAkBF,GAAgBrT,GAC5F,KACG,GAENlF,qBAAU,KACR0Y,KACAZ,GAAQ,CACN9b,SACA6a,WAAgB,OAAJnc,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,IAClBwf,eACAD,gBACApd,SACAQ,OACA0c,OACApd,aACAwd,qBAEF2B,IAAiB,GAChB,IAEH3Y,qBAAU,KACMyT,GAAMzc,KAAKkU,MACdoE,KACTuI,IAAQ,EAEV,GACC,CAACpE,GAAMzc,KAAKkU,QACflL,qBAAU,KACJlJ,GAAW+gB,IAAQ,EAAK,GAC3B,CAAC/gB,IACJkJ,qBAAU,KACHyT,GAAMzc,KAAKA,IACd,GAED,CAACyc,GAAMzc,KAAKA,OACf,MAAM0hB,GAAeA,KACnBpiB,GAASyY,cAAa,EAGlB9X,GAAcA,KAClBugB,EAAa,CAACrgB,YAAS,EAGnB0K,GAAe+W,IACnBX,IAA4B,GACxBW,GAAW3hB,IAAa,EAGxB4hB,GAAgBC,IACpBA,EAAM/R,iBACc,UAAhB4G,GAAK3R,SACP2R,GAAKqJ,iBAAkB,GAEzBiB,IAA4B,GAC5B3hB,GAASmX,YAAW,IAAKE,GAAMpW,OAAOkgB,EAAaC,GAAU7V,IAAa,EAGtEkX,GAAkBD,IACtB,MAAM,KAAEne,EAAI,MAAEI,GAAU+d,EAAMhN,OAC9BgM,GAAQ,IAAKnK,GAAM,CAAChT,GAAOI,GAAQ,EAG/Bie,GAAuBA,CAAAnf,EAAwBof,EAAaC,KAAc,IAAhDpN,QAAQ,MAAE/Q,IAASlB,EAC7B,WAAhBof,EACFnB,GAAQ,IAAKnK,GAAMjU,OAAQ,CAAC,IAAKiU,GAAKjU,OAAO,GAAI,CAACwf,GAAWne,MAEtC,SAAhBke,GACPnB,GAAQ,IAAKnK,GAAMzT,KAAM,CAAC,IAAKyT,GAAKzT,KAAK,GAAI,CAACgf,GAAWne,KAC3D,EAQIoe,GAAmBA,CAACC,EAAMvL,KAC9BiK,GAAQ,IAAKnK,GAAM,CAACE,GAAM,CAAC,IAAKF,GAAKE,GAAK,GAAI,CAAC,GAADvU,OAAIuU,EAAG,SAASuL,KAAU,EAKpET,GAAkBA,KAClBrF,GAAoBrK,UAASqK,GAAoBrK,QAAQlO,MAAQ,IACjEwY,GAAiBtK,UAASsK,GAAiBtK,QAAQlO,MAAQ,GAAE,EAE7Dse,GAAkBA,CAACD,EAAME,EAAYC,KAGzCzB,IAASnK,IAAI,IACRA,EACH,CAAC2L,GAAa,CAAC,IAAK3L,EAAK2L,GAAY,GAAI,CAACC,GAAYH,OACrD,EAECI,GAAUA,KACd,IACE,MACElF,MACE5Z,MAAM,KAAEwK,KAERuO,GACJ,OAAOvO,CACT,CAAE,MAAOnF,GACP,MAAO,EACT,GAWF,GAAI2N,GAAY7R,OAAQ,CACtB,MAAM4d,EAAQ,IAAI/L,IAClBA,GAAc,CACZ,cAAiB,GACjB,iBAAoB,GACpB,kBAAqB,IAEvB+L,EAAMC,SAAQ,WAAqB,IAApBzP,EAAIrO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrB,MAAM,SAAE+d,EAAW,GAAE,aAAEC,EAAe,IAAO3P,EAC7CyD,GAAYiM,GAAUhZ,KAAKiZ,EAE7B,GACF,MAAOlM,GAAc,CAAC,EAEtB,MAAM,iBAAEwF,GAAmB,GAAE,cAAEC,GAAgB,GAAE,kBAAEC,GAAoB,IAAO1F,IAAe,CAAC,EAExFmM,GAAiBxf,IAA2D,IAA1D,QAAEyf,EAAO,OAAE/N,EAAS,GAAE,QAAE9N,EAAU,EAAC,SAAE8b,EAAW,CAAC,GAAG1f,EAC1E,OAAO8C,gBAAAf,IAAA,CAAO6B,QAASA,EAAShF,GAAI,IAAK8gB,GAAY/W,UAAU,aAAYzJ,SAAA,CACzE5C,eAAAyF,IAAA,CAAA7C,SAAO5C,eAAAqC,IAAA,CAAYC,GAAI,CAAEqK,WAAY,IAAKtG,SAAU,GAAI0B,UAAW,SAAUsb,GAAI,GAAIzgB,SAAEugB,MACtF/N,EAAOhQ,KAAIhB,GAASpE,eAAAyF,IAAA,CAAA7C,SACnB5C,eAAC4gB,GAAe,CAACxc,MAAOA,UAEpB,EAEV,OACEpE,eAAAuR,YAAA,CAAA3O,SACE5C,eAAAsjB,IAAA,CACEljB,KAAMA,EACNoH,QAASlH,GACT,kBAAgB,qBAAoBsC,SAGpC5C,eAACujB,IAAoB,CAACC,YAAaC,IAAc7gB,SAC/C4D,gBAAA,OAAK4L,MAAO,CAAEpF,MAAO,OAASX,UAAW2U,GAAQ1B,MAAM1c,SAAA,CACvD5C,eAAAyF,IAAA,CAAOC,UAAW,MAAOyH,eAAgB,gBAAiB7K,GAAI,CAAE6Q,GAAI,GAAIvQ,SAKtE5C,eAAA4E,IAAA,CAAAhC,SACE5C,eAAAoG,IAAA,CACE1G,GAAG,qBACHwG,QAAS5F,SAIfkG,gBAAA,QAAMkd,SAAUxB,GAAatf,SAAA,CAE3B4D,gBAAAiL,IAAA,CAAMC,WAAS,EAACpK,QAAS,EAAG+E,UAAW2U,GAAQnB,oBAAoBjd,SAAA,CACjE5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB4D,gBAAAiL,IAAA,CAAMC,WAAS,EAACrF,UAAW2U,GAAQnB,oBAAqBvY,QAAS,EAAGhF,GAAI,CAAEshB,GAAI,EAAG9d,GAAI,GAAIlD,SAAA,CACvF5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIE,GAAI,EAAEjhB,SACvB4D,gBAACsd,IAAW,CAACxhB,GAAI,CAAEuF,EAAG,GAAKmG,KAAK,QAAQ0S,WAAS,EAAA9d,SAAA,CAC/C5C,eAAC+jB,IAAU,CAACrkB,GAAG,gBAAekD,SAAC,WAC/B5C,eAAAgkB,IAAA,CACEtkB,GAAG,gBACHsE,KAAK,SACLI,MAAO4S,GAAK3R,OACZO,SAAUhC,IAAA,IAAGuR,QAAQ,MAAE/Q,IAASR,EAAA,OAAKud,GAAQ,IAAKnK,GAAM3R,OAAQjB,GAAS,EACzEoS,MAAOxW,eAACuhB,GAAa,CAACvT,KAAK,QAAQ9L,MAAM,GAAG+hB,SAAS,EAAO3hB,GAAI,CAAC,IACjEge,UAAWA,GACX/a,UAAWlG,IAAiC,WAAzByd,GAAMa,KAAK5Z,KAAKwK,KAAkB3L,UAEnDwe,IAAgB,IAAIhc,KAAKpB,GACzBhE,eAAAkkB,IAAA,CAEE9f,MAAOJ,EAAKtE,GACdkD,SAEGoB,EAAK9B,OAJD8B,EAAKtE,aAUpBM,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIE,GAAI,EAAEjhB,SACvB4D,gBAACsd,IAAW,CAACxhB,GAAI,CAAEuF,EAAG,GAAKmG,KAAK,QAAQ0S,WAAS,EAAA9d,SAAA,CAC/C5C,eAAC+jB,IAAU,CAACrkB,GAAG,gBAAekD,SAAC,aAC/B5C,eAAAgkB,IAAA,CACEtkB,GAAG,gBACHsE,KAAK,aACLuB,UAAWlG,IAAiC,WAAzByd,GAAMa,KAAK5Z,KAAKwK,KACnCnK,MAAO4S,GAAKkJ,WACZta,SAAU9B,IAAA,IAAGqR,QAAQ,MAAE/Q,IAASN,EAAA,OAAKqd,GAAQ,IAAKnK,GAAMkJ,WAAY9b,GAAS,EAC7EoS,MAAOxW,eAACuhB,GAAa,CAACvT,KAAK,QAAQ9L,MAAM,GAAG+hB,SAAS,EAAO3hB,GAAI,CAAC,IACjEge,UAAWA,GAAU1d,SAEpB+e,GAAkBvc,KAAK+e,GACtBnkB,eAAAkkB,IAAA,CAEE9f,MAAO+f,EAASvjB,IAClBgC,SAAA,GAAAD,OAEMwhB,EAASlgB,UAAS,KAAAtB,OAAIwhB,EAASjgB,SAAQ,MAAAvB,OAAKwhB,EAAS5V,MAAQ,KAAI,MAJhE4V,EAASvjB,cAUxB4F,gBAAAiL,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIE,GAAI,EAAEjhB,SAAA,CACvB5C,eAAC+jB,IAAU,CAACrkB,GAAG,2BAA0BkD,SAAC,iBAC1C5C,eAAC8jB,IAAW,CAACxhB,GAAI,CAAEuF,EAAG,GAAK6Y,WAAS,EAAA9d,SAClC5C,eAAAgkB,IAAA,CACEI,QAAQ,2BACR1kB,GAAG,qBACHkV,UAAQ,EACRxQ,MAAO4S,GAAKoJ,aACZxa,SAAUjB,IAAA,IAAGwQ,QAAQ,MAAE/Q,IAASO,EAAA,OAAKwc,GAAQ,IAAKnK,GAAMoJ,aAA+B,kBAAVhc,EAAqBA,EAAMigB,MAAM,KAAOjgB,GAAS,EAC9HoS,MAAOxW,eAACuhB,GAAa,CAACvT,KAAK,QAAQ9L,MAAM,GAAG+hB,SAAS,IACrD3D,UAAWA,GACX/a,UAAWlG,GAAKuD,SAEf,CACC,CAAElD,GAAI,OAAQwC,MAAO,QACrB,CAAExC,GAAI,YAAawC,MAAO,aAC1B,CAAExC,GAAI,mBAAoBwC,MAAO,oBACjC,CAAExC,GAAI,oBAAqBwC,MAAO,qBAClC,CAAExC,GAAI,UAAWwC,MAAO,WACxB,CAAExC,GAAI,eAAgBwC,MAAO,iBAC7BkD,KAAKpB,GACLhE,eAAAkkB,IAAA,CAEE9f,MAAOJ,EAAKtE,GACdkD,SAEGoB,EAAK9B,OAJD8B,EAAKtE,kBAYxBM,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIrhB,GAAI,CAAEuF,EAAG,GAAIjF,SAC9B5C,eAAAskB,IAAA,SAKJ9d,gBAAAiL,IAAA,CAAMC,WAAS,EAAA9O,SAAA,CACb5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGrhB,GAAI,CAAE8K,QAAS,QAASxK,SACxC4D,gBAAAC,IAAA,CAAKnE,GAAI,CAAEqL,WAAY,MAAOP,QAAS,QAASxK,SAAA,CAC7CvD,GAAOmH,gBAAAC,IAAA,CAAKnE,GAAI,CAAE2F,SAAU,YAAarF,SAAA,CACxC5C,eAAA4E,IAAA,CAAYsB,QAASgc,GAAc3c,SAAU8b,GAAyBze,SACpE5C,eAAAukB,IAAA,CACEle,SAAS,QACTvB,MAAOuc,GAA2B,WAAa,cAGlDA,IAA4BrhB,eAAAwkB,IAAA,CAC3BxW,KAAM,GACN1L,GAAI,CACFwC,MAAO2f,IAAM,KACbxc,SAAU,WACVE,KAAM,EACND,MAAO,EACPyL,OAAQ,QAIV3T,eAAA4E,IAAA,CAAYsB,QAASA,IAAMgb,IAAQ,GAAO3a,MAAM,OAAOhB,SAAU8b,KAA6BxgB,EAAU+B,SACxG5C,eAAA0kB,IAAA,CACEre,SAAS,QACTvB,MAAOuc,GAA2B,WAAa,cAGpDhiB,GAAOW,eAAA4E,IAAA,CAAYsB,QAlNfye,KACnBxD,GAAQ,IAAKnK,GAAMkJ,WAAYnc,EAAMsB,SAAQ+a,eAAcrd,SAAQQ,SACnE2d,IAAQ,GACRc,IAAiB,EA+MwCzc,SAAU8b,GAAyBze,SAC5E5C,eAAAoG,IAAA,CACEC,SAAS,QACTvB,MAAOuc,GAA2B,WAAa,cAEnCrhB,eAAA4E,IAAA,CAAYsB,QAnLzB0e,KACjB,IAAI5Z,EAAO,IAAK3K,GAChB2K,EAAO6P,EAAgB7P,EAAM,SAAU,UACvCA,EAAO6P,EAAgB7P,EAAM,OAAQ,WACrCsW,IAA4B,GAC5B3hB,GAAS+W,YAAQ1L,EAAME,IAAa,EA8K2B3E,MAAM,cAAchB,SAAU8b,KAA6BxgB,EAAU+B,SACpH5C,eAAA6kB,IAAA,CACExe,SAAS,QACTvB,MAAOuc,GAA2B,WAAa,mBAKvDrhB,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SACf4D,gBAAAiL,IAAA,CAAMC,WAAS,EAAA9O,SAAA,CACb5C,eAAAyR,IAAA,CAAMkS,GAAI,GAAIrQ,MAAI,EAAClG,QAAS,OAAQD,eAAgB,SAASvK,SAC3D4D,gBAAAf,IAAA,CAAA7C,SAAA,CACE5C,eAAAyF,IAAA,CAAOC,UAAW,MAAM9C,SACrBvD,GAAOwjB,OACS,UAAdA,MAAuC,aAAdA,OACxB7iB,eAAC2U,IAAU,CACTE,WAAY,CAAElI,WAAY,IAAKtG,SAAU,GAAIvB,MAAO,WACpDpF,GAAG,iBACHsE,KAAK,aACLI,MAAO4S,GAAKnU,WACZ+C,SAAUwc,GACVlgB,MAAO,OACPwD,UAAW,QAEXc,gBAACwL,WAAQ,CAAApP,SAAA,CACb5C,eAAAqC,IAAA,CAAYC,GAAI,CAAEwiB,GAAI,EAAGnY,WAAY,IAAKtG,SAAU,IAAKzD,SAAC,SAC1D5C,eAAAqC,IAAA,CAAYiR,MAAI,EAAChR,GAAI,CAAE+D,SAAU,IAAKzD,SAAEC,GAAc,YAG1D7C,eAAAyF,IAAA,CAAOC,UAAU,MAAK9C,SACnBvD,GAAOwjB,OACS,UAAdA,MAAuC,aAAdA,OACxB7iB,eAAC2U,IAAU,CACTjV,GAAG,iBACHwC,MAAM,OACN8B,KAAK,OACLI,MAAO4S,GAAKiJ,KACZra,SAAUwc,GACV1c,UAAW,MACXmP,WAAY,CAAElI,WAAY,IAAKtG,SAAU,GAAIvB,MAAO,aAEpD0B,gBAACwL,WAAQ,CAAApP,SAAA,CACb5C,eAAAqC,IAAA,CAAYC,GAAI,CAAEwiB,GAAI,EAAGnY,WAAY,IAAKtG,SAAU,IAAKzD,SAAC,SAC1D5C,eAAAqC,IAAA,CAAYiR,MAAI,EAAChR,GAAI,CAAE+D,SAAU,IAAKzD,SAAEqd,GAAQ,iBAKxDjgB,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB4D,gBAAAiL,IAAA,CAAMC,WAAS,EAAA9O,SAAA,CAEb5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SACf4D,gBAAAf,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,UAAWnF,SAAA,CACjC5C,eAAAyF,IAAA,CAAA7C,SACGvD,IAAiC,WAAzByd,GAAMa,KAAK5Z,KAAKwK,KACvB/H,gBAAAf,IAAA,CAAA7C,SAAA,CACE5C,eAAC2U,IAAU,CACTjV,GAAG,iBACHmG,YAAY,eACZzB,MAAO4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGgiB,YAAc,GACrDnf,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,iBAG1CniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,UACZzB,MAAO4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGiiB,cAAgB,GACvDpf,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,mBAGzC9iB,IAAiC,WAAzByd,GAAMa,KAAK5Z,KAAKwK,MAAqB/H,gBAACwL,WAAQ,CAAApP,SAAA,CACrD5C,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,OACZzB,MACE4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGC,WAAa,GAE/C4C,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,gBAG1CniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmG,YAAY,QACZzB,MACE4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGE,YAAc,GAEhD2C,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,iBAG1CniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,MACZzB,MAAO4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGkiB,UAAY,GACnDrf,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,qBAK5CniB,eAACkjB,GAAc,CACjBC,QAAS,SACT/N,OAAQ,CACNrS,GAAUA,EAAO,GAAKA,EAAO,GAAGgiB,YAAc,GAC9C/N,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGiiB,cAAgB,GAAG,GAADriB,OAC/CI,GAAUA,EAAO,GAAKA,EAAO,GAAGC,WAAa,GAAE,MAAAL,OAAKI,GAAUA,EAAO,GAAKA,EAAO,GAAGE,YAAc,GAAE,MAAAN,OAAKI,GAAUA,EAAO,GAAKA,EAAO,GAAGkiB,UAAY,SAI9JjlB,eAAAyF,IAAA,CAAO6B,QAAS,EAAE1E,SACfvD,GAAOmH,gBAAAiL,IAAA,CAAMC,WAAS,EAACpK,QAAS,EAAE1E,SAAA,CACjC5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB5C,eAAAqC,IAAA,CAAYC,GAAI,CAAEqK,WAAY,IAAKtG,SAAU,GAAI0B,UAAW,UAAWnF,SAAC,kBAE1E5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB5C,eAACujB,IAAoB,CAACC,YAAaC,IAAc7gB,SAC/C5C,eAACklB,IAAc,CACX9gB,MAAOhB,IAAO4T,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGI,WAAa,KAAO,IAAIqB,KACtEoB,SAAW6c,GAASD,GAAiBC,EAAK0C,cAAe,UACzDC,UAAW5E,GACXte,MAAM,oBAyBdlC,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SAWf5C,eAACqlB,IAAU,CACPnjB,MAAM,UACNkC,MAAOhB,IAAQ4T,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGuiB,QAAU,IACzD1f,SAAW6c,GACPC,GAAgBD,EAAM,SAAU,WAEpC2C,UAAWzE,OAGjB3gB,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SACb5C,eAACqlB,IAAU,CACTnjB,MAAM,WACNkC,MAAOhB,IAAO4T,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAGwiB,SAAW,IACzD3f,SAAW6c,GACTC,GAAgBD,EAAM,SAAU,YAElC2C,UAAWzE,UAIfna,gBAACwL,WAAQ,CAAApP,SAAA,CACT5C,eAACkjB,GAAc,CACb5b,QAAS,EACT8b,SAAU,CAAEoC,GAAI,GAChBrC,QAAS,cACT/N,OAAQ,CACNrS,GAAUA,EAAO,GACfK,IAAOL,EAAO,GAAGI,YAAYE,OAAO,OAEpC,MAINmD,gBAAAf,IAAA,CAAOC,UAAU,MAAMyH,eAAe,eAAe7F,QAAS,EAAE1E,SAAA,CAC9D5C,eAAAyF,IAAA,CAAA7C,SACGG,GAAUA,EAAO,IAAMA,EAAO,GAAGuiB,QAChC9e,gBAAAf,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,QAASnF,SAAA,CAC/B5C,eAAAqC,IAAA,CAAYwC,QAAQ,YAAYvC,GAAI,CAAEwC,MAAO,WAAYlC,SAAC,cAC1D5C,eAAAyG,IAAA,CAAA7D,SAAMQ,IAAOL,EAAO,GAAGuiB,SAASjiB,OAAO,eAGzC,OAGJrD,eAAAyF,IAAA,CAAA7C,SACGG,GAAUA,EAAO,IAAMA,EAAO,GAAGwiB,SAChC/e,gBAAAf,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,QAASnF,SAAA,CAC/B5C,eAAAqC,IAAA,CAAYwC,QAAQ,YAAYvC,GAAI,CAAEwC,MAAO,WAAYlC,SAAC,cAC1D5C,eAAAyG,IAAA,CAAA7D,SAAMQ,IAAOL,EAAO,GAAGwiB,UAAUliB,OAAO,eAG1C,eAMZrD,eAAAyF,IAAA,CAAO6B,QAAS,EAAE1E,SAChB4D,gBAAAiL,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIvR,MAAO,CAAErK,UAAW,OAAQiF,MAAO,QAASpK,SAAA,CAC7D4D,gBAAAf,IAAA,CAAO6B,QAAS,EAAGhF,GAAI,CAAEkjB,GAAI,EAAGrS,GAAI,GAAIvQ,SAAA,CACtC4D,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAW,SAASrG,QAAS,EAAE1E,SAAA,CACpD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,QAC5BvD,GACCW,eAAC2U,IAAU,CACTvQ,MAAO4S,IAAQA,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAG0iB,SAAW,GAC1D7f,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,SAAU,cAEnDpJ,eAAAqC,IAAA,CAAAO,SAAaG,GAAUA,EAAO,GAAKA,EAAO,GAAG0iB,SAAW,QAE9Djf,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAY,SAAUrG,QAAS,EAAE1E,SAAA,CACtD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,eAC5BvD,GACCW,eAAC2U,IAAU,CACTvQ,MAAOrB,GAAUiU,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAG2iB,gBAAkB,GACnE9f,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,SAAU,qBAEnDpJ,eAAAqC,IAAA,CAAAO,SAAaG,GAAUA,EAAO,GAAKA,EAAO,GAAG2iB,gBAAkB,QAErElf,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAW,SAASrG,QAAS,EAAE1E,SAAA,CACpD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,cAC5BvD,GACCW,eAAC2U,IAAU,CACTvQ,MAAOrB,GAAUiU,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAG4iB,oBAAsB,GACvE/f,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,SAAU,yBAEnDpJ,eAAAqC,IAAA,CAAAO,SAAaG,GAAUA,EAAO,GAAKA,EAAO,GAAG4iB,oBAAsB,WAMjD,WAAzB7I,GAAMa,KAAK5Z,KAAKwK,MACfvO,eAAC2U,IAAU,CACTjV,GAAG,4BACHmG,YAAY,eACZ+f,WAAS,EACTC,KAAM,EACN5a,KAAK,WACL7G,MAAO4S,GAAKjU,OAAO,GAAKiU,GAAKjU,OAAO,GAAG+iB,MAAQ,GAC/ClgB,SAAWuc,GACTE,GAAqBF,EAAO,SAAU,SAExCtd,QAAQ,WACRkhB,UAAW1mB,eAOvBW,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGrhB,GAAI,CAAE8K,QAAS,OAAQ4Y,UAAW,SAAUR,GAAI,GAAI5iB,SAEpE5C,eAAAimB,IAAA,CACE7T,MAAO,CACLtN,MAAOohB,IACPC,UAAW,MACX7I,OAAQ,SACR5W,OAAQ,GACRsG,MAAO,QAIbxG,gBAAAiL,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SAAA,CAEf5C,eAAAyF,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,UAAWnF,SAChCvD,GAAgC,WAAzByd,GAAMa,KAAK5Z,KAAKwK,MAAqB/H,gBAACwL,WAAQ,CAAApP,SAAA,CACpD5C,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,gBACZzB,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAG6iB,aAAe,GAClDxgB,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,kBAGxCniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,UACZzB,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAG8iB,YAAc,GACjDzgB,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,iBAGxCniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,OACZzB,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGC,SAAW,GAC9CoC,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,cAGxCniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,QACZzB,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGE,UAAY,GAC/CmC,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,eAGxCniB,eAAC2U,IAAU,CACTjV,GAAG,iBACHmF,QAAQ,WACRgB,YAAY,MACZzB,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAG+iB,QAAU,GAC7C1gB,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,gBAItCniB,eAACkjB,GAAc,CACfC,QAAS,OACT/N,OAAQ,CACN7R,GAAQA,EAAK,GAAKA,EAAK,GAAG6iB,aAAe,GACzCpP,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAG8iB,YAAc,GAAG,GAAD1jB,OACzCY,GAAQA,EAAK,GAAKA,EAAK,GAAGC,SAAW,GAAE,2CAAAb,OACpCY,GAAQA,EAAK,GAAKA,EAAK,GAAGE,UAAY,GAAE,2CAAAd,OACxCY,GAAQA,EAAK,GAAKA,EAAK,GAAG+iB,QAAU,SAIlDtmB,eAAAyF,IAAA,CAAO6B,QAAS,EAAGhF,GAAI,CAAEyF,UAAW,UAAWnF,SAC5CvD,GAAOmH,gBAAAiL,IAAA,CAAMC,WAAS,EAACpK,QAAS,EAAE1E,SAAA,CACjC5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB5C,eAAAqC,IAAA,CAAYC,GAAI,CAAEqK,WAAY,IAAKtG,SAAU,GAAI0B,UAAW,UAAWnF,SAAC,gBAE1E5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SAChB5C,eAACklB,IAAc,CACX9gB,MAAOhB,IAAO4T,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGI,SAAW,KAAO,IAAIa,KAChEoB,SAAW6c,GAASD,GAAiBC,EAAK0C,cAAe,QACzDC,UAAW5E,GACXte,MAAM,gBAkBZlC,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SACf5C,eAACqlB,IAAU,CACPnjB,MAAM,UACNkC,MAAOhB,IAAO4T,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAG+hB,QAAU,KAAO,IAAI9gB,KAC/DoB,SAAW6c,GAASC,GAAgBD,EAAM,OAAQ,WAClD2C,UAAWzE,OAajB3gB,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAE/gB,SACf5C,eAACqlB,IAAU,CACPnjB,MAAM,WACNkC,MAAOhB,IAAO4T,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGgiB,SAAW,IACrD3f,SAAW6c,GACPC,GAAgBD,EAAM,OAAQ,YAElC2C,UAAWzE,UAcjBna,gBAACwL,WAAQ,CAAApP,SAAA,CACP5C,eAACkjB,GAAc,CACb5b,QAAS,EACT8b,SAAU,CAAEoC,GAAI,GAChBrC,QAAS,YACT/N,OAAQ,CACN7R,GAAQA,EAAK,GACXH,IAAOG,EAAK,GAAGI,UAAUN,OAAO,OAEhC,MAINmD,gBAAAf,IAAA,CAAOC,UAAU,MAAMyH,eAAe,eAAe7F,QAAS,EAAE1E,SAAA,CAC9D5C,eAAAyF,IAAA,CAAA7C,SACGW,GAAQA,EAAK,IAAMA,EAAK,GAAG+hB,QAC1B9e,gBAAAf,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,QAASnF,SAAA,CAC/B5C,eAAAqC,IAAA,CAAYwC,QAAQ,YAAYvC,GAAI,CAAEwC,MAAO,WAAYlC,SAAC,cAC1D5C,eAAAyG,IAAA,CAAA7D,SAAMQ,IAAOG,EAAK,GAAG+hB,SAASjiB,OAAO,eAGvC,OAGJrD,eAAAyF,IAAA,CAAA7C,SACGW,GAAQA,EAAK,IAAMA,EAAK,GAAGgiB,SAC1B/e,gBAAAf,IAAA,CAAOnD,GAAI,CAAEyF,UAAW,QAASnF,SAAA,CAC/B5C,eAAAqC,IAAA,CAAYwC,QAAQ,YAAYvC,GAAI,CAAEwC,MAAO,WAAYlC,SAAC,eAC1D5C,eAAAyG,IAAA,CAAA7D,SAAMQ,IAAOG,EAAK,GAAGgiB,UAAUliB,OAAO,eAGxC,eAMZmD,gBAAAiL,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAIrhB,GAAI,CAAEyF,UAAW,OAAQyd,GAAI,GAAI5iB,SAAA,CAClD4D,gBAAAf,IAAA,CAAO6B,QAAS,EAAGhF,GAAI,CAAEkjB,GAAI,EAAGrS,GAAI,GAAIvQ,SAAA,CACtC4D,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAW,SAASrG,QAAS,EAAE1E,SAAA,CACpD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,QAC5BvD,GACCW,eAAC2U,IAAU,CACT4R,OAAO,SACPniB,MAAO4S,IAAQA,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGgjB,OAAS,GACpD3gB,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,OAAQ,YAEjDpJ,eAAAqC,IAAA,CAAAO,SAAaW,GAAQA,EAAK,GAAKA,EAAK,GAAGgjB,OAAS,QAEtD/f,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAW,SAASrG,QAAS,EAAE1E,SAAA,CACpD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,gBAC5BvD,GACCW,eAAC2U,IAAU,CACTvQ,MAAO4S,IAAQA,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGijB,cAAgB,GAC3D5gB,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,OAAQ,mBAEjDpJ,eAAAqC,IAAA,CAAAO,SAAaW,GAAQA,EAAK,GAAKA,EAAK,GAAGijB,cAAgB,QAE7DhgB,gBAAAf,IAAA,CAAOC,UAAU,MAAMiI,WAAW,SAASrG,QAAS,EAAE1E,SAAA,CACpD5C,eAAAqC,IAAA,CAAYsK,WAAY,IAAI/J,SAAC,cAC5BvD,GACCW,eAAC2U,IAAU,CACTvQ,MAAO4S,IAAQA,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGkjB,kBAAoB,GAC/D7gB,SAAWwD,GAAMiZ,GAAqBjZ,EAAG,OAAQ,uBAEjDpJ,eAAAqC,IAAA,CAAAO,SAAaW,GAAQA,EAAK,GAAKA,EAAK,GAAGkjB,kBAAoB,WAMzC,WAAzB3J,GAAMa,KAAK5Z,KAAKwK,MACfvO,eAAC2U,IAAU,CACTjV,GAAG,4BACHmG,YAAY,aACZ+f,WAAS,EACTC,KAAM,EACN5a,KAAK,WACL7G,MAAO4S,GAAKzT,KAAK,GAAKyT,GAAKzT,KAAK,GAAGuiB,MAAQ,GAC3ClgB,SAAWuc,GACTE,GAAqBF,EAAO,OAAQ,SAEtCtd,QAAQ,WACRkhB,UAAW1mB,qBAS3BW,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGrhB,GAAI,CAAE8K,QAAS,OAAQO,WAAY,MAAOR,eAAgB,YAAavK,SACvF5C,eAACoc,GAA0B,CACvB/c,KAAMA,GACNkd,iBAAoBA,GACpBC,cAAiBA,GACjBC,kBAAqBA,GACrBC,iBA7sBOpZ,IAAkC,IAA/B6R,QAAQ,KAAEnR,EAAI,MAAEyT,IAASnU,EACnD6d,IAASuF,IAAC,IAAWA,EAAG,CAAC1iB,GAAOyT,GAAS,QAAQ,EA6sBjCkF,oBAAqBA,GACrBC,iBAAkBA,GAClBC,gBAAiBA,GACjBC,MAAOA,GACPC,YAAa/F,GAAKuF,iBAClBS,QAAShG,GAAKwF,cACdS,sBAAuBjG,GAAKyF,yBASpCjW,gBAAAiL,IAAA,CACEC,WAAS,EACTpK,QAAS,EACT+E,UAAW2U,GAAQnB,oBACnBzN,MAAO,CAAE+T,UAAW,IAAKvjB,SAAA,CAEzB5C,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,IACf3jB,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGxW,eAAgB,SAAU7K,GAAI,CAAEyF,UAAW,YAG7D/H,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGxW,eAAe,SAASC,QAAS,SAWnDpN,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,EAAGvR,MAAO,CAAErK,UAAW,YAGtC/H,eAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,kBAMtB,EAIQ9a,QAAMiL,KAAK5T,IAAiB,KAAM,G,yHC57BjD,MAAM0B,EAAS,CACX2E,MAAO,2BACPoC,sBAAsB,GAGpBge,EAAYzf,YAAMuK,IAANvK,EAAa3G,IAAA,IAAC,MAAC6G,GAAM7G,EAAA,MAAM,CACzC,CAAC6G,EAAM8B,YAAYC,KAAK,OAAQ,CAC5B6D,MAAO,QAEX,CAAC5F,EAAM8B,YAAY0d,GAAG,OAAQ,CAC1B5Z,MAAO,KAEd,IAkDcjG,IAhDQ3H,IACnB,MAAM,WAAC4H,EAAU,YAAE6f,EAAW,QAAE1lB,EAAO,gBAAE6D,EAA2B,YAAEsB,EAAa9G,OAAQC,QAAQ,GAACC,GAAM,CAAC,GAAK,CAAC,EAAC,QAAEc,GAAWpB,GAC1HgF,EAAO0iB,GAAYhe,sBACpB,SAACgC,EAAQ,QAAEjL,GAAW2K,YAAY,8BAClCuc,EAAW/hB,EAAkBA,EAAgBgiB,KAAiBA,IAAc5hB,KAAIC,GACzEA,EAAO3F,GAAG4F,iBAAiB,aACnB,IAAID,EAAQE,UAAU,GAE1BF,IAgBf,OAAOrF,cAACuI,IAAK,CAAC3G,OAAQ0E,GAAe1E,EAAOgB,SACxC4D,eAACmgB,EAAS,CAACjV,WAAS,EAAClP,UAAU,OAAO8E,QAAS,EAAGoc,SAVpCta,IACdA,EAAEgH,iBACFtF,EAAS,CAACpL,KAAI2F,OAAQjB,GAAQ,MAAM,KAChCyiB,GAAeA,IACf1lB,GAAWA,IACXX,EAAQymB,QAAQjgB,EAAW,GAC7B,EAImEpE,SAAA,CACjE5C,cAAAyR,IAAA,CAAM6B,MAAI,EAAA1Q,SACN5C,cAAAqC,IAAA,CAAAO,SAAY,2BAEhB5C,cAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SACd5C,cAAC6N,IAAM,CACH3L,MAAM,SACN8B,KAAK,SACL4G,QAASmc,EACTnhB,SAvBC9C,IAAc,IAAb,MAACsB,GAAMtB,EACrBgkB,EAAS1iB,EAAM,EAuBHA,MAAOA,EACP8iB,UAAU,MAGlBlnB,cAAAyR,IAAA,CAAM6B,MAAI,EAACqQ,GAAI,GAAG/gB,SACd5C,cAACmnB,IAAa,CAAClc,KAAK,SAASyV,WAAS,EAACnb,UAAWnB,EAAOmJ,UAAW1N,EAASunB,YAAY,YAAWxkB,SAAC,eAKzG,C,mCClEZ,IAAIykB,EAAyBC,EAAQ,IACrCnQ,OAAO8D,eAAesM,EAAS,aAAc,CAC3CnjB,OAAO,IAETmjB,EAAQC,aAAU,EAClB,IAAIC,EAAiBJ,EAAuBC,EAAQ,KAChDI,EAAcJ,EAAQ,GACtBK,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,0GACD,UACJN,EAAQC,QAAUG,C","file":"static/js/14.4195b3e1.chunk.js","sourcesContent":["import useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\nimport {deleteLoad, selectLoad} from \"../../actions/load\";\r\nimport LoadDetailModal from \"../../components/loads/LoadDetailModal\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport {FullScreenLoader} from \"../../components/Atoms\";\r\n\r\nconst LoadHistoryDetail = (props) => {\r\n    const {edit} = UserSettings.getUserPermissionsByDashboardId('loads');\r\n    const {match: {params: {id} = {}} = {}} = props;\r\n    const dispatch = useDispatch()\r\n    const {loading = true, data: {data = {}} = {}} = useFetchWithSearchPagination('/api/loadHistory/' + id);\r\n\r\n    if(loading){\r\n        return  <FullScreenLoader />\r\n    }\r\n\r\n    return <LoadDetailModal\r\n        modalEdit={false}\r\n        open={!loading}\r\n        load={data}\r\n        handleClose={({history}) => {\r\n            history.goBack()\r\n            dispatch(selectLoad());\r\n        }}\r\n        deleteLoad={(_id) => dispatch(deleteLoad(_id))}\r\n        canUpdate={!!edit}\r\n    />\r\n}\r\n\r\nexport default LoadHistoryDetail;","import React from \"react\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport moment from \"moment\";\r\nimport {Box, IconButton, Stack, Typography} from \"@mui/material\";\r\nimport {getDollarPrefixedPrice} from \"../../utils/utils\";\r\nimport {Input} from \"../../components/Atoms\";\r\nimport {Link, Route} from \"react-router-dom\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay\";\r\nimport MoveToMyLoads from \"../../components/invoices/MoveToMyLoads\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport LoadHistoryDetail from \"./LoadHistoryDetail\";\r\n\r\nconst LoadHistory = (props) => {\r\n    const {edit} = UserSettings.getUserPermissionsByDashboardId('history');\r\n    const {match: {path} = {}} = props\r\n    const {data, loading, limit, page, isPaginationLoading, refetch, isRefetching, onPageChange,\r\n        onLimitChange, isSearching, searchQuery, handleSearch} = useFetchWithSearchPagination('/api/loadHistory')\r\n    const {totalCount, data: loads} = data;\r\n\r\n    const config = {\r\n        showRefresh: true,\r\n        rowCellPadding: 'normal',\r\n        count: totalCount,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        onPageSizeChange: onLimitChange,\r\n        onLimitChange,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n                renderer: ({row}) => <Typography sx={{textDecoration: 'underline'}} component={Link} to={`${path}/${row._id}`}>{row.loadNumber}</Typography>\r\n            },\r\n            {\r\n                id: 'pickup',\r\n                label: 'PickUp City/State',\r\n                renderer: ({row: {pickup = []} = {}}) => {\r\n                    const [{pickupCity = '', pickupState = ''}] = pickup;\r\n                    return `${pickupCity}, ${pickupState}`;\r\n                }\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({row: {pickup = []} = {}}) => {\r\n                    const [{pickupDate = ''}] = pickup;\r\n                    return moment(pickupDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: 'dropCity',\r\n                label: 'Drop City/State',\r\n                renderer: ({row: {drop = []} = {}}) => {\r\n                    const [{dropCity = '', dropState = ''}] = drop;\r\n                    return `${dropCity}, ${dropState}`;\r\n                }\r\n            },\r\n            {\r\n                id: 'dropDate',\r\n                label: 'Drop Date',\r\n                renderer: ({row: {drop = []} = {}}) => {\r\n                    const [{dropDate = ''}] = drop;\r\n                    return moment(dropDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n\r\n            {\r\n                id: 'brokerage',\r\n                label: 'Customer',\r\n                renderer: ({row: {brokerage = ''} = {}}) => {\r\n                    return brokerage;\r\n                }\r\n            },\r\n            {\r\n                id: 'user.firstName',\r\n                label: \"Assigned To\",\r\n                renderer: ({ row: { user: { name = '', firstName, lastName} = {} } ={} }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: \"accessorials\",\r\n                label: \"Accessorials\",\r\n                valueFormatter: (value) => (value || []).join(', ')\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--',\r\n                valueFormatter: (value) => value ? getDollarPrefixedPrice(value) : ''\r\n            },\r\n            {\r\n                id: 'updatedAt',\r\n                label: 'Updated At',\r\n                valueFormatter: (value) => new Date(value).toLocaleString()\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <IconButton\r\n                        component={Link}\r\n                        to={path + '/move/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <ReplayIcon/>\r\n                    </IconButton>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    function getLoadStatuses(loadStatuses=[]) {\r\n        return loadStatuses.map(status => {\r\n            if(status.id.equalsIgnoreCase('archived')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n    }\r\n\r\n    const actions = <Stack direction='row'>\r\n        <Input\r\n            value={searchQuery}\r\n            onChange={handleSearch}\r\n            placeholder='Search'\r\n            sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                    pr: 0\r\n                }\r\n            }}\r\n            autoFocus\r\n            InputProps={{\r\n                endAdornment: <IconButton onClick={() => handleSearch({value: ''})} sx={{visibility: searchQuery ? 'visible' : 'hidden'}}>\r\n                    <Close fontSize='small' />\r\n                </IconButton>\r\n            }}\r\n        />\r\n    </Stack>\r\n\r\n    const modalConfig = {\r\n        title: 'Move Load'\r\n    }\r\n\r\n    return <Box sx={{height: 'inherit'}}>\r\n        <EnhancedTable\r\n            data={loads}\r\n            config={config}\r\n            loading={loading}\r\n            actions={actions}\r\n            onRefetch={refetch}\r\n            isRefetching={isRefetching}\r\n            isPaginationLoading={isPaginationLoading || isSearching}\r\n        />\r\n        <Route\r\n            path={path + '/move/:id'}\r\n            render={(props) => <MoveToMyLoads onCloseUrl={path} refetch={refetch} getLoadStatuses={getLoadStatuses} modalConfig={modalConfig} {...props} />}/>\r\n        <Route path={path + '/:id'} component={LoadHistoryDetail} />\r\n    </Box>\r\n}\r\n\r\nexport default LoadHistory;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onLimitChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onLimitChange === 'function'){\r\n            onLimitChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            onLimitChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onLimitChange={onLimitChange || onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport {requestDelete, requestGet, requestPatch, requestPost} from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads = (page = 0, limit = 100, module = \"\", search='') => async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1}&limit=${limit}&module=${module}&search=${search}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const {data, success} = await requestPost({uri: '/api/load', body: formData})\r\n    if(success){\r\n      dispatch({\r\n        type: ADD_LOAD,\r\n        payload: data,\r\n      });\r\n\r\n      notification(\"Load Created\")\r\n      if (callback) {\r\n        callback(success, data)\r\n      }\r\n    } else {\r\n      notification(data.message, 'error')\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import axios from \"axios\";\r\nimport {notification, setAlert} from \"./alert\";\r\nimport { GET_DRIVERS, GET_DRIVER, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER, DRIVER_ERROR, DELETE_DRIVER_LOAD } from \"./types.js\";\r\n\r\n//get current users drivers\r\nexport const getDrivers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/drivers/me\");\r\n    Object.assign(res.data, {timestamp: new Date()})\r\n    dispatch({\r\n      type: GET_DRIVERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err?.response?.statusText, status: err?.response?.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addDriver = (formData, isEdit) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/drivers\", formData, config);\r\n\r\n    notification(res.data.message);\r\n    dispatch(getDrivers());\r\n\r\n  } catch (err) {\r\n    let error = err.errors && Array.isArray(err.errors) && err.errors.length ? err.errors[0].msg : err.message;\r\n    dispatch(setAlert( error, \"error\"));\r\n    // dispatch({\r\n    //   type: DRIVER_ERROR,\r\n    //   payload: { msg: err.response.statusText, status: err.response.status },\r\n    // });\r\n  }\r\n};\r\n\r\n//patch driver\r\nexport const patchDriverLoads = (driver_id, loads) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.patch(`/api/drivers/loads?driver_id=${driver_id}`, { loads: loads });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: PATCH_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver\r\nexport const deleteDriver = (driver_id, cb) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/`, { data: { driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers.splice(index, 1);\r\n    }\r\n    notification('Deleted Successfully')\r\n    cb && cb(res);\r\n    dispatch({\r\n      type: DELETE_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver load\r\nexport const deleteDriverLoads = (driver_id, load_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/loads`, { data: { load_id: load_id, driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: DELETE_DRIVER_LOAD,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport _ from 'lodash'\r\nimport {requestGet} from \"../utils/request\";\r\n\r\nconst useFetchWithSearchPagination = (url, debounceTime = 500) => {\r\n    const [data, setData] = useState([]),\r\n        [loading, setLoading] = useState(false),\r\n        [page, setPage] = useState(1),\r\n        [limit, setLimit] = useState(100),\r\n        [searchQuery, setSearchQuery] = useState(''),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false),\r\n        [isSearching, setIsSearching] = useState(false),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        isInitialLoad = useRef(true);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url, page, limit]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const debouncedSearch = _.debounce(() => {\r\n            if (!isInitialLoad.current) {\r\n                setIsSearching(true);\r\n                fetchData();\r\n            }\r\n        }, debounceTime);\r\n\r\n        debouncedSearch();\r\n\r\n        return debouncedSearch.cancel;\r\n    }, [searchQuery, debounceTime]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        requestGet({uri: `${url}?page=${page}&search=${searchQuery}&limit=${limit}`})\r\n            .then(res => {\r\n                const {data} = res;\r\n                setData(data);\r\n            })\r\n            .catch(e => {\r\n                console.error(e.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsPaginationLoading(false);\r\n                setIsSearching(false);\r\n                setIsRefetching(false);\r\n                if (isInitialLoad.current) {\r\n                    isInitialLoad.current = false;\r\n                }\r\n            })\r\n    }, [url, page, limit, searchQuery]);\r\n\r\n    const onPageChange = useCallback((e, pgNum) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(pgNum);\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(({value}) => {\r\n        setSearchQuery(value);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const onLimitChange = useCallback(({value}) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n        setLimit(value);\r\n    }, [])\r\n\r\n    const refetch = () => {\r\n        setPage(1);\r\n        setIsRefetching(true);\r\n        fetchData();\r\n    };\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        handleSearch,\r\n        refetch,\r\n        onLimitChange,\r\n        searchQuery,\r\n        isPaginationLoading,\r\n        isSearching,\r\n        isRefetching\r\n    };\r\n};\r\n\r\nexport default useFetchWithSearchPagination","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}","import {Button, Grid, Paper, Stack, Typography} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {getCheckStatusIcon} from \"../../../utils/utils\";\r\nimport Modal from \"../../Atoms/Modal\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {PRIMARY_BLUE} from \"../../layout/ui/Theme\";\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport {Alert} from \"../../Atoms\";\r\n\r\nconst FileContainer = styled(Paper)(({}) => ({\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    padding: 8,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n}))\r\n\r\nconst FileViewer = ({files = [], onClose, onRemoveAll}) => {\r\n    // console.log(files)\r\n    const config={\r\n        title: 'Edit File'\r\n    }\r\n    const Files = (files || []).map(file => {\r\n        return <FileContainer elevation={3}>\r\n            <DescriptionIcon sx={{color: PRIMARY_BLUE}} />\r\n            <Typography variant='subtitle2' align='center' sx={{width: 'inherit', overflow: 'hidden', textOverflow: 'ellipsis'}}>{file.name}</Typography>\r\n        </FileContainer>\r\n    })\r\n\r\n    return <Modal config={config} closeCallback={onClose}>\r\n        <Grid container spacing={2} sx={{display: 'grid'}}>\r\n            <Grid item>\r\n                <Alert config={{open: true, message: 'Previous files, if exist will be overwritten with new files.', severity: 'info'}} />\r\n            </Grid>\r\n            {files && <Grid item>\r\n                <Button variant='outlined' sx={{float: 'right'}} onClick={onRemoveAll} color='error'>Remove All</Button>\r\n            </Grid>}\r\n            <Grid item>\r\n                <Grid container gap={2} sx={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\r\n                    {Files}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nconst LoadDetailsUploadComponent = (props) => {\r\n    const [fileViewConfig, setFileViewConfig] = useState({open: false, config: {}})\r\n    const {\r\n        edit, rateConfirmation = [], proofDelivery = [], accessorialsFiles = [], handleFileChange, rateConfirmationRef,\r\n        proofDeliveryRef, accessorialsRef, state, rateConFile, podFile, formAccessorialsFiles\r\n    } = props;\r\n    // console.log(rateConFile)\r\n    // console.log(accessorialsFiles)\r\n\r\n    function viewClickHandler(file, name, e) {\r\n        e.stopPropagation()\r\n        setFileViewConfig({open: true, config: [...file], name})\r\n    }\r\n\r\n    function onFileViewClose() {\r\n        setFileViewConfig({open: false, config: null});\r\n    }\r\n\r\n    function onRemoveAll() {\r\n        handleFileChange({target: { name: fileViewConfig.name, files: null }})\r\n        onFileViewClose();\r\n    }\r\n\r\n    return (<Stack sx={{alignItems: 'end'}}>\r\n        {fileViewConfig.open && <FileViewer files={fileViewConfig.config} onClose={onFileViewClose} onRemoveAll={onRemoveAll} />}\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {rateConfirmation.length ? (rateConfirmation.map((roc, idx) => {\r\n                return (<><span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                          <a href={roc} target=\"_blank\">\r\n                            Rate Con-{idx + 1}\r\n                          </a>\r\n                        </span></>)\r\n            })) : (<span>Rate Con</span>)}\r\n            <span>\r\n                      {edit ? <Fragment>\r\n                              {rateConFile\r\n                                  ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, rateConFile, 'rateConfirmation')} startIcon={<OpenInNewIcon />}>\r\n                                        View\r\n                                    </Button>\r\n                                  : <label htmlFor=\"contained-button-file1\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"rateConfirmation\"\r\n                                      disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                      onChange={handleFileChange}\r\n                                      ref={rateConfirmationRef}\r\n                                      id=\"contained-button-file1\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      {'Attach'}\r\n                                  </Button>\r\n                              </label>}\r\n                      </Fragment>\r\n                          : getCheckStatusIcon(!!rateConfirmation.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {proofDelivery.length ? (proofDelivery.map((pod, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={pod} target=\"_blank\">\r\n                              POD-{idx + 1}\r\n                            </a>\r\n                          </span>\r\n                </>)\r\n            })) : (<span>POD</span>)}\r\n            <span>\r\n                      {edit ? podFile ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, podFile, 'proofDelivery')} startIcon={<OpenInNewIcon />}>\r\n                                  View\r\n                              </Button>\r\n                              : <label htmlFor=\"contained-button-file2\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"proofDelivery\"\r\n                                      disabled={!edit}\r\n                                      onChange={handleFileChange}\r\n                                      ref={proofDeliveryRef}\r\n                                      id=\"contained-button-file2\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      Attach\r\n                                  </Button>\r\n                              </label>\r\n                          : getCheckStatusIcon(!!proofDelivery.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2}>\r\n            {accessorialsFiles.length ? (accessorialsFiles.map((acc, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={acc} target=\"_blank\">\r\n                              Accessorials-{idx + 1}\r\n                            </a>\r\n                          </span></>)\r\n            })) : (<span>Accessorials</span>)}\r\n            <span>\r\n                      {edit ? formAccessorialsFiles\r\n                          ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, formAccessorialsFiles, 'accessorialsFiles')} startIcon={<OpenInNewIcon />}>\r\n                              View\r\n                          </Button>\r\n                          : <Fragment>\r\n                          <label htmlFor=\"contained-button-file3\">\r\n                              <input\r\n                                  style={{display: 'none'}}\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  name=\"accessorialsFiles\"\r\n                                  disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                  onChange={handleFileChange}\r\n                                  ref={accessorialsRef}\r\n                                  id=\"contained-button-file3\"\r\n                              />\r\n                              <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                  Attach\r\n                              </Button>\r\n                          </label>\r\n                      </Fragment> : getCheckStatusIcon(!!accessorialsFiles?.length)}\r\n                    </span>\r\n        </Stack>\r\n    </Stack>)\r\n}\r\n\r\nexport default LoadDetailsUploadComponent;","import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  MenuItem,\r\n  IconButton,\r\n  Select,\r\n  Modal,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {TimePicker} from '@mui/x-date-pickers/TimePicker';\r\nimport {DateTimePicker} from '@mui/x-date-pickers/DateTimePicker'\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport { green } from \"@mui/material/colors\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport {AdapterMoment} from '@mui/x-date-pickers/AdapterMoment';\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport LoadDetailsUploadComponent from \"./components/LoadDetailsUploadComponent\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport { useStyles } from \"./styles\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst DATE_PICKER_SLOT_PROPS = {\r\n  textField: {\r\n    helperText: 'DD/MM/YYYY hh:mm AM/PM',\r\n    size: 'small',\r\n    fullWidth: true\r\n  },\r\n},\r\n    TIME_PICKET_SLOT_PROPS = {\r\n      textField: {\r\n        size: 'small',\r\n        fullWidth: true\r\n      }\r\n    }\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose: onModalClose,\r\n  listBarType,\r\n  load, canUpdate\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const {data: {data: LoadStatuses = []} = {}} = useFetch('/api/loadStatuses')\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef();\r\n  const accessorialsRef = useRef(),\r\n      history = useHistory(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const {assignees = [] } = state.driver || {};\r\n  const assignedToOptions = assignees.map((item) => {\r\n    const { _id, firstName, lastName, role, user = {} } = item || {},\r\n        {name = '', role: assigneeRole, _id: assigneeId} = user || {};\r\n    return {\r\n      name, _id: assigneeId || _id, firstName, lastName, role: getRoleNameString(assigneeRole || role)\r\n    }\r\n  }) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user?._id,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onModalClose({history});\r\n  }\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if (isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n      setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }] });\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n      setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {\r\n      'proofDelivery': [],\r\n      'rateConfirmation': [],\r\n      'accessorialsFiles': []\r\n    };\r\n    alpha.forEach((item = {}, idx) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      bucketFiles[fileType].push(fileLocation)\r\n\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = [], proofDelivery = [], accessorialsFiles = [] } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }} className='staticInfo'>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center', pt: 3 }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <div style={{ width: '90%' }} className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"status\"\r\n                        value={form.status}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {(LoadStatuses || []).map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"assignedTo\"\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                        value={form.assignedTo}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((assignee) => (\r\n                          <MenuItem\r\n                            key={assignee._id}\r\n                            value={assignee._id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {`${assignee.firstName} ${assignee.lastName} (${assignee.role || '--'})`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                          { id: 'scale-ticket', label: 'Scale Ticket' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <Box sx={{ position: 'relative' }}>\r\n                    <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                      <DoneIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>\r\n                    {isProcessingAsyncRequest && <CircularProgress\r\n                      size={65}\r\n                      sx={{\r\n                        color: green[500],\r\n                        position: 'absolute',\r\n                        top: -6,\r\n                        left: -6,\r\n                        zIndex: 1,\r\n                      }}\r\n                    />}\r\n                  </Box>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                  <DateTimePicker\r\n                                      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\") || new Date()}\r\n                                      onChange={(date) => handleDateChange(date.toISOString(), \"pickup\")}\r\n                                      slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                      label='Pickup Date'\r\n                                  />\r\n                                </LocalizationProvider>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <DatePicker*/}\r\n                                {/*    value={*/}\r\n                                {/*      form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                                {/*    }*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleDateChange(date, \"pickup\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                              </Grid>\r\n                              {/*<Grid item xs={6}>*/}\r\n                              {/*    <TimePicker*/}\r\n                              {/*      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\")}*/}\r\n                              {/*      onChange={(date) =>*/}\r\n                              {/*        handleDateChange(date, \"pickup\")*/}\r\n                              {/*      }*/}\r\n                              {/*      label='Pickup Time'*/}\r\n                              {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                              {/*    />*/}\r\n                              {/*</Grid>*/}\r\n                              <Grid item xs={6}>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <TimePicker*/}\r\n                                {/*    label='In Time'*/}\r\n                                {/*    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                                <TimePicker\r\n                                    label='In Time'\r\n                                    value={moment( form.pickup[0] ? form.pickup[0].in_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                        handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={moment(form.pickup[0] ? form.pickup[0].out_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                  />\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DateTimePicker\r\n                                  value={moment(form.drop[0] ? form.drop[0].dropDate : \"\") || new Date()}\r\n                                  onChange={(date) => handleDateChange(date.toISOString(), \"drop\")}\r\n                                  slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                  label='Drop Date'\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <DatePicker*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                              {/*    onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            {/*<Grid item xs={6}>*/}\r\n                            {/*    <TimePicker*/}\r\n                            {/*        label='Drop Time'*/}\r\n                            {/*      value={moment(form.drop[0] ? form.drop[0].dropDate : \"\")}*/}\r\n                            {/*      onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                            {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                            {/*    />*/}\r\n                            {/*</Grid>*/}\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='In Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].in_time : \"\") || new Date()}\r\n                                  onChange={(date) => handleInOutTime(date, \"drop\", \"in_time\")}\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='In Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='Out Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].out_time : \"\")}\r\n                                  onChange={(date) =>\r\n                                      handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='Out Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <LoadDetailsUploadComponent\r\n                    edit={edit}\r\n                    rateConfirmation = {rateConfirmation}\r\n                    proofDelivery = {proofDelivery}\r\n                    accessorialsFiles = {accessorialsFiles}\r\n                    handleFileChange={handleFileChange}\r\n                    rateConfirmationRef={rateConfirmationRef}\r\n                    proofDeliveryRef={proofDeliveryRef}\r\n                    accessorialsRef={accessorialsRef}\r\n                    state={state}\r\n                    rateConFile={form.rateConfirmation}\r\n                    podFile={form.proofDelivery}\r\n                    formAccessorialsFiles={form.accessorialsFiles}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        </LocalizationProvider>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst Container = styled(Grid)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 'auto'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, refetch, getLoadStatuses = undefined, modalConfig, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveToMyLoads'),\r\n        statuses = getLoadStatuses ? getLoadStatuses(LOAD_STATUSES) : LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices && getInvoices();\r\n            refetch && refetch();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={modalConfig || config}>\r\n        <Container container component='form' spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    showNone={true}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Container>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"\n}), 'Replay');\nexports.default = _default;"],"sourceRoot":""}