{"version":3,"sources":["components/common/AuthContainer.js","views/auth/ForgotPassword.js","hooks/useMutation.js"],"names":["AuthContainer","styled","_Grid","_ref","theme","backgroundColor","boxShadow","ForgotPassword","_useState","useState","pass","confirmPass","_useState2","_slicedToArray","form","setForm","_useMutation","useMutation","loading","mutation","onChange","name","value","_objectSpread","_defineProperty","_jsx","className","style","verticalAlignStyle","children","_jsxs","container","direction","gap","p","component","onSubmit","e","preventDefault","_Typography","align","color","textTransform","item","sx","mb","CompanyText","pointer","xs","Password","label","m","LoadingButton","isLoading","type","loadingText","Link","to","LOGIN_LINK","display","getRequestCb","fn","requestPut","requestDelete","requestPatch","requestPost","url","callback","arguments","length","undefined","showTriggers","setLoading","_asyncToGenerator","_regeneratorRuntime","mark","_callee","body","afterSubmit","asyncApiCall","_args","wrap","_context","prev","next","toLowerCase","abrupt","uri","then","res","data","catch","err","finally","stop","_x","apply"],"mappings":"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","file":"static/js/25.ad7928e8.chunk.js","sourcesContent":["import {styled} from \"@mui/material/styles\";\r\nimport {Grid} from \"@mui/material\";\r\n\r\nconst AuthContainer = styled(Grid)(({theme}) => ({\r\n    backgroundColor: '#F7FAFC',\r\n    boxShadow: '0px 0px 80px rgba(34, 35, 58, 0.2)',\r\n}))\r\n\r\nexport default AuthContainer;","import {verticalAlignStyle} from \"../../utils/utils\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport {LoadingButton, Password} from \"../../components/Atoms\";\r\nimport {useState} from \"react\";\r\nimport AuthContainer from \"../../components/common/AuthContainer\";\r\nimport CompanyText from \"../../components/Atoms/CompanyText\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../../components/client/routes\";\r\n\r\nconst ForgotPassword = () => {\r\n    const [form, setForm] = useState({pass: '', confirmPass: ''}),\r\n        {mutation, loading} = useMutation('');\r\n\r\n    const onChange = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return <div className='auth-wrapper' style={verticalAlignStyle}>\r\n        <AuthContainer container direction='column' gap={2} p={8} component={'form'} onSubmit={onSubmit}>\r\n            <Typography align='center' color='error' textTransform='capitalize'>This feature is in Development.</Typography>\r\n            <Grid item sx={{mb: 3}}>\r\n                <CompanyText style={{pointer: 'default'}}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Password label='New Password' onChange={onChange} value={form.pass} name='pass'/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Password label='Confirm Password' onChange={onChange} value={form.confirmPass} name='confirmPass'/>\r\n            </Grid>\r\n            <Grid item xs={12} sx={{m: 'auto'}}>\r\n                <LoadingButton isLoading={loading} type='submit' loadingText='Please wait...'>Submit</LoadingButton>\r\n            </Grid>\r\n            <Grid item xs={12} sx={{m: 'auto'}}>\r\n                <Typography component={Link} to={LOGIN_LINK} sx={{display: 'block' }}>Login</Typography>\r\n            </Grid>\r\n        </AuthContainer>\r\n    </div>\r\n}\r\n\r\nexport default ForgotPassword","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri: url, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res.data\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;"],"sourceRoot":""}