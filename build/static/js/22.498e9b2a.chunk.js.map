{"version":3,"sources":["F:/projects/freightdokFrontend/src/views/ownerOperator/FormModal.js","F:/projects/freightdokFrontend/src/views/ownerOperator/OwnerOperator.js","F:/projects/freightdokFrontend/src/components/layout/Spinner.js","F:/projects/freightdokFrontend/src/components/Atoms/table/Pagination.jsx","F:/projects/freightdokFrontend/src/components/Atoms/table/Table.jsx","F:/projects/freightdokFrontend/src/hooks/useFetch.js","F:/projects/freightdokFrontend/node_modules/@mui/icons-material/Add.js","F:/projects/freightdokFrontend/src/hooks/useEnhancedFetch.js"],"names":["formTemplate","firstName","lastName","phone","FormModal","props","history","match","params","id","onCloseUrl","form","setForm","React","useState","errors","setErrors","mutation","loading","useMutation","isFetching","data","useFetch","ownerOpData","updateForm","_ref2","name","value","useEffect","onBlur","_ref3","afterSubmit","_ref4","success","message","triggerCustomEvent","notification","handleClose","push","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","PaperProps","sx","width","children","DialogTitle","color","blue","textAlign","fontWeight","letterSpacing","_jsx","DialogContent","Grid","container","component","noValidate","direction","rowSpacing","p","item","xs","Input","label","onChange","disabled","required","email","LoadingButton","type","onClick","e","preventDefault","body","_ref","isEmailValid","validateForm","_","isEmpty","isLoading","loadingText","OwnerOperator","path","useRouteMatch","edit","delete","canDelete","add","UserSettings","getUserPermissionsByDashboardId","queryData","isRefetching","refetch","page","limit","onLimitChange","onPageChange","isPaginationLoading","useEnhancedFetch","totalCount","useHistory","fetchOwnerOp","useCallback","addEvent","window","removeEvent","afterDelete","tableConfig","rowCellPadding","showRefresh","emptyMessage","count","onPageSizeChange","columns","emptyState","renderer","Fragment","row","_Button","variant","stopPropagation","concat","_id","mr","showDelete","uri","afterSuccessCb","Actions","Link","to","startIcon","AddIcon","EnhancedTable","config","onRefetch","actions","Route","render","CircularIndeterminate","_Box","height","display","justifyContent","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","StyledStack","Stack","flexWrap","TablePagination","length","setLength","Array","isArray","Typography","fontSize","Select","options","className","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","isFunction","bgcolor","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","_IconButton","bind","cell","i","valueFormatter","get","hover","cursor","getTableCell","_ref6","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","useRef","isValidElement","_Fragment","url","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","style","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","callback","arguments","setData","setLoading","error","setError","setIsRefetching","requestCall","queryParams","serialize","requestGet","showTriggers","then","result","finally","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","showPagination","pageOptions","setPageOptions","setIsPaginationLoading","object"],"mappings":"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","file":"static/js/22.498e9b2a.chunk.js","sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport _ from 'lodash';\r\nimport {blue} from \"../../components/layout/ui/Theme\";\r\nimport Grid from '@mui/material/Grid'\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid, triggerCustomEvent} from \"../../utils/utils\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {Input, LoadingButton} from \"../../components/Atoms\";\r\n\r\nconst validateForm = ({firstName, lastName, phone, email}) => {\r\n    let errors = {}\r\n    if (!firstName) {\r\n        errors.firstName = 'Please provide the First Name'\r\n    }\r\n    if (!lastName) {\r\n        errors.lastName = 'Please provide the Last Name'\r\n        // return [false, 'Please provide the Last Name', 'lastName']\r\n    }\r\n    if (!phone) {\r\n        errors.phone = 'Please provide the Phone Number'\r\n    }\r\n    if(!email) {\r\n        errors.email = 'Please provide the Email'\r\n    }\r\n    if(!isEmailValid(email)){\r\n        errors.email = 'Invalid Email'\r\n    }\r\n    return errors\r\n}\r\nconst formTemplate = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n}\r\n\r\n\r\nconst FormModal = (props) => {\r\n    const {history, match: {params: {id = ''} = {}} = {}, onCloseUrl} = props;\r\n    const [form, setForm] = React.useState(formTemplate);\r\n    const [errors, setErrors] = useState(formTemplate);\r\n    const {mutation, loading} = useMutation(\"/api/ownerOperator\"),\r\n        {loading: isFetching, data} = useFetch(\"/api/ownerOperator/\" + id),\r\n        {data: ownerOpData} = data || {};\r\n\r\n    const updateForm = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerOpData) {\r\n            setForm(ownerOpData);\r\n        }\r\n    }, [ownerOpData])\r\n\r\n    const onBlur = ({name, value}) => {\r\n        if (value) {\r\n            setErrors({...errors, [name]: ''});\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = {...form};\r\n        const errors = validateForm(body);\r\n        if (_.isEmpty(errors)) {\r\n            mutation(body, null, afterSubmit);\r\n        } else {\r\n            setErrors({...errors})\r\n        }\r\n    };\r\n\r\n    const afterSubmit = ({success, data}) => {\r\n        const {message} = data || {};\r\n        if (success) {\r\n            triggerCustomEvent('refreshOwnerOp');\r\n            notification(message || 'Owner operator created');\r\n            handleClose();\r\n        } else {\r\n            notification(message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        history.push(onCloseUrl);\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={false}\r\n            maxWidth={\"md\"}\r\n            open={true}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                sx: {\r\n                    width: 400\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" sx={{\r\n                color: blue,\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: 1\r\n            }}>\r\n                {id ? \"Edit\" : 'Add'} Owner Operator\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container component='form' noValidate direction='column' rowSpacing={3} p={1}>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Input\r\n                                name={\"firstName\"}\r\n                                label={\"First Name\"}\r\n                                onChange={updateForm}\r\n                                value={form.firstName || ''}\r\n                                errors={errors}\r\n                                onBlur={onBlur}\r\n                                fullWidth\r\n                                disabled={isFetching || loading}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"lastName\"}\r\n                            label={\"Last Name\"}\r\n                            onChange={updateForm}\r\n                            value={form.lastName || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"email\"}\r\n                            label={\"Email\"}\r\n                            onChange={updateForm}\r\n                            value={form.email || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"phone\"}\r\n                            label={\"Phone Number\"}\r\n                            onChange={updateForm}\r\n                            value={form.phone || ''}\r\n                            onBlur={onBlur}\r\n                            errors={errors}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            onClick={onSubmit}\r\n                            isLoading={loading || isFetching}\r\n                            loadingText={loading ? 'Updating...' : isFetching ? 'Please wait...' : null}\r\n                        >\r\n                            Update\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FormModal","import React, {Fragment, useCallback, useEffect} from \"react\";\r\nimport {Button} from \"@mui/material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Link, Route, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport FormModal from \"./FormModal\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport useEnhancedFetch from \"../../hooks/useEnhancedFetch\";\r\n\r\n\r\nconst OwnerOperator = () => {\r\n  const { path } = useRouteMatch(),\r\n      {edit, delete: canDelete, add} = UserSettings.getUserPermissionsByDashboardId('ownerOperator'),\r\n          {data: queryData = {}, isRefetching, loading, refetch, page, limit, onLimitChange, onPageChange, isPaginationLoading} = useEnhancedFetch('/api/ownerOperator', {\r\n          page: 1, limit: 10\r\n      }),\r\n      {data, totalCount} = queryData || {},\r\n    history = useHistory();\r\n\r\n  const fetchOwnerOp = useCallback(() => {\r\n        refetch();\r\n    }, [refetch]);\r\n\r\n  useEffect(() => {\r\n      addEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n\r\n      return () => removeEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n  }, [fetchOwnerOp])\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            fetchOwnerOp()\r\n        }\r\n    }\r\n\r\n\r\n  const tableConfig = {\r\n    rowCellPadding: \"normal\",\r\n    showRefresh: true,\r\n    emptyMessage: \"No Owner Operator Found\",\r\n    count: totalCount,\r\n      page,\r\n      limit,\r\n      onPageSizeChange: onLimitChange,\r\n      onPageChange,\r\n    columns: [\r\n      {\r\n        id: \"firstName\",\r\n        label: \"First Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"lastName\",\r\n        label: \"Last Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"role\",\r\n        label: \"Role\",\r\n        renderer: () => {\r\n          return <Fragment>Owner Operator</Fragment>;\r\n        },\r\n      },\r\n        {\r\n            id: 'email',\r\n            label: 'Email'\r\n        },\r\n      {\r\n        id: \"update\",\r\n        renderer: ({ row }) => {\r\n          return (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  history.push(path + `/edit/${row._id}`);\r\n                }}\r\n                sx={{mr: 1}}\r\n                disabled={!edit}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color={'error'}\r\n                  onClick={showDelete({\r\n                      uri: \"/api/ownerOperator/\"+ row._id,\r\n                      message: 'Are you sure you want to delete this Owner Operator?',\r\n                      afterSuccessCb: afterDelete\r\n                  })}\r\n                  disabled={!canDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Fragment>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const Actions = <Button\r\n      variant='contained'\r\n      component={Link}\r\n      to={path + '/add'}\r\n      disabled={!add}\r\n      startIcon={<AddIcon />}\r\n  >\r\n      Add\r\n  </Button>\r\n\r\n  return (\r\n    <div>\r\n      <EnhancedTable\r\n        config={tableConfig}\r\n        data={data}\r\n        loading={loading}\r\n        isRefetching={isRefetching}\r\n        onRefetch={refetch}\r\n        isPaginationLoading={isPaginationLoading}\r\n        actions={Actions}\r\n      />\r\n\r\n      <Route path={path + \"/add\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n      <Route path={path + \"/edit/:id\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnerOperator;\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useEnhancedFetch = (url, options = {}, callback = null) => {\r\n    const {showPagination = true, page, limit} = options,\r\n        [data, setData] = useState(undefined);\r\n    const [pageOptions, setPageOptions] = useState({page: (page || 1), limit: (limit || 10)});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false)\r\n\r\n    function requestCall(object) {\r\n        const {page, limit} = object || {};\r\n        let uri = url;\r\n        if(showPagination){\r\n            if(page && limit){\r\n                setPageOptions({page, limit})\r\n            }\r\n            uri = `${uri}?page=${page || pageOptions.page}&limit=${limit || pageOptions.limit}`\r\n        }\r\n        if (options.queryParams) {\r\n            uri = `${uri}&${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n                setIsPaginationLoading(false);\r\n            })\r\n    }\r\n\r\n    const onLimitChange = ({value}) => {\r\n        // setPageOptions({...pageOptions, limit: value});\r\n        setIsPaginationLoading(true);\r\n        requestCall({limit: value, page: pageOptions.page})\r\n    }\r\n\r\n    const onPageChange = (e, pgNum) => {\r\n        // setPageOptions({...pageOptions, page: pgNum});\r\n        setIsPaginationLoading(true);\r\n        requestCall({page: pgNum, limit: pageOptions.limit})\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall({page, limit: pageOptions.limit});\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching,\r\n        onLimitChange, onPageChange, isPaginationLoading, ...pageOptions\r\n    }\r\n}\r\n\r\nexport default useEnhancedFetch;"],"sourceRoot":""}