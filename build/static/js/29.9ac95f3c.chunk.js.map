{"version":3,"sources":["actions/users.js","components/users/UserForm.js","components/users/UsersList.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","utils/helper.js"],"names":["fetchUsers","page","arguments","length","undefined","limit","async","dispatch","type","FETCH_USERS","success","data","requestGet","uri","concat","notification","message","FETCH_USERS_SUCCEED","payload","err","FETCH_USERS_FAILED","openModal","OPEN_USER_MODAL","initialState","email","password","role","ADD_USERS_ROLES_PERMITTED","ROLES","superadmin","admin","UserForm","mutation","loading","isSaving","useMutation","form","setForm","useState","open","error","user","useSelector","state","users","updateUser","isSavingUpdate","_id","auth","roles","useDispatch","userRoles","setUserRoles","hasAddPermission","includes","useEffect","equalsIgnoreCase","newRoles","filter","item","handleClose","f","handleChange","_ref","name","value","RESET_SELECTED_USER","afterSubmit","_ref2","_jsxs","_Fragment","children","_jsx","Button","color","variant","onClick","handleClickOpen","Dialog","fullWidth","maxWidth","onClose","PaperProps","sx","width","DialogTitle","id","textAlign","PRIMARY_BLUE","style","DialogContent","p","overflow","className","noValidate","onSubmit","e","preventDefault","dataToUpdate","getDiff","local","actual","diffWithVal","localKeys","Object","keys","key","alert","isEmailValid","Grid","container","spacing","direction","Input","label","onChange","autoFocus","Password","Select","options","map","capitalizeFirstLetter","xs","justifyContent","display","LoadingButton","isLoading","UsersList","list","total","afterDelete","allowedRolesForDispatch","config","emptyMessage","count","onPageChange","handleChangePage","event","newPage","rowCellPadding","showRefresh","onPageSizeChange","columns","emptyState","renderer","_ref3","row","firstName","lastName","valueFormatter","getRoleNameString","_ref4","userRole","Fragment","_Button","mr","SELECT_USER_TO_EDIT","selectUserToEdit","showDelete","afterSuccessCb","Actions","_Box","EnhancedTable","onRefetch","actions","StyledPagination","styled","Pagination","theme","breakpoints","down","height","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","alignItems","Typography","fontSize","Math","ceil","size","pgNum","CircularIndeterminate","marginLeft","CircularProgress","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","headerCellSx","hasDelete","headers","useMemo","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","bind","disabled","cell","i","get","hover","cursor","getTableCell","_ref6","history","isRefetching","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","ref","React","useRef","isValidElement","url","push","stopPropagation","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","current","table","calculatedHeight","offsetHeight","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","window","position","Spinner","_Table","el","stickyHeader","withRouter","memo","string","charAt","toUpperCase","slice","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor"],"mappings":"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","file":"static/js/29.9ac95f3c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    FETCH_USERS_SUCCEED,\r\n    FETCH_USERS_FAILED,\r\n    FETCH_USERS,\r\n    ADMIN_REG_USER,\r\n    ADMIN_REG_USER_FAILED,\r\n    SELECT_USER_TO_EDIT,\r\n    RESET_SELECTED_USER,\r\n    INIT_ADMIN_UPDATE_USER,\r\n    ADMIN_UPDATE_USER_SUCCEED,\r\n    ADMIN_UPDATE_USER_FAILED,\r\n    ADMIN_DELETE_USER_FAILED,\r\n    OPEN_USER_MODAL,\r\n    CLOSE_USER_MODAL\r\n} from './types';\r\nimport {notification} from \"./alert\";\r\nimport {requestDelete, requestGet} from \"../utils/request\";\r\n\r\nexport const callApi = () => ({\r\n    type: FETCH_USERS\r\n});\r\n\r\nexport const fetchUsers = (page = 0, limit = 5) => async dispatch => {\r\n    try {\r\n        dispatch({type: FETCH_USERS});\r\n        const {success, data} = await requestGet({uri: `/api/users?page=${page + 1}&limit=${limit}`});\r\n        if(!success){\r\n            notification(data.message, 'error');\r\n        }\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCEED,\r\n            payload: data || []\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: FETCH_USERS_FAILED\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = ({email, password, role}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: ADMIN_REG_USER});\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({email, password, role});\r\n        const api = await axios.post('/api/users', body, config);\r\n        if (api.status === 200) {\r\n            notification(\"User Added\")\r\n            const {limit} = getState().users;\r\n            dispatch(fetchUsers(0, +limit));\r\n        }\r\n    } catch (err) {\r\n        let errorToSend = err.message;\r\n        if (err.response && err.response.data) {\r\n            errorToSend = err.response.data.errors[0].msg\r\n        }\r\n        dispatch({\r\n            type: ADMIN_REG_USER_FAILED,\r\n            payload: errorToSend\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUserToEdit = (user) => ({\r\n    type: SELECT_USER_TO_EDIT,\r\n    payload: user\r\n});\r\n\r\nexport const updateUser = (user, id) => async dispatch => {\r\n    try {\r\n        dispatch({type: INIT_ADMIN_UPDATE_USER});\r\n        const res = await axios.put(`/api/users/${id}`, user);\r\n        if(res.status === 200){\r\n            notification('User Updated')\r\n            dispatch({\r\n                type: ADMIN_UPDATE_USER_SUCCEED,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_UPDATE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id, callback) => async (dispatch, getState) => {\r\n    try {\r\n        const {data: data = '', success} = await requestDelete({uri: `/api/users/${id}`});\r\n        if(success) {\r\n            const {page, limit} = getState().users;\r\n            notification(data);\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n        else {\r\n            notification(data.message, 'error')\r\n        }\r\n        if(callback) callback({success, data});\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADMIN_DELETE_USER_FAILED,\r\n            payload: e.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const resetUserSelected = () => ({type: RESET_SELECTED_USER});\r\n\r\nexport const openModal = () => ({type: OPEN_USER_MODAL});\r\nexport const closeModal = () => ({type: CLOSE_USER_MODAL});\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    resetUserSelected,\r\n    fetchUsers,\r\n    openModal,\r\n} from \"../../actions/users\";\r\nimport {capitalizeFirstLetter} from \"../../utils/helper\";\r\nimport {PRIMARY_BLUE} from \"../layout/ui/Theme\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {isEmailValid} from \"../../utils/utils\";\r\nimport {ROLES} from \"../constants\";\r\nimport {Input, LoadingButton, Password, Select} from \"../Atoms\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"dispatch\",\r\n};\r\n\r\nconst ADD_USERS_ROLES_PERMITTED = [ROLES.superadmin, ROLES.admin, ROLES.dispatch];\r\n\r\nconst UserForm = () => {\r\n    const {mutation, loading: isSaving} = useMutation('/api/users')\r\n    const [form, setForm] = useState({...initialState});\r\n    const {loading, open, error, user, page, limit} = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const {mutation: updateUser, loading: isSavingUpdate} = useMutation(`/api/users/${user?._id}`)\r\n    const {user: auth = {}} = useSelector((state) => state.auth);\r\n    const {roles = []} = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [userRoles, setUserRoles] = useState(),\r\n        hasAddPermission = ADD_USERS_ROLES_PERMITTED.includes(auth?.role);\r\n\r\n    useEffect(() => {\r\n        if(auth?.role.equalsIgnoreCase(ROLES.superadmin)) {\r\n            setUserRoles(roles)\r\n        } else {\r\n            const newRoles = roles.filter(\r\n                (item) =>\r\n                    item === \"driver\" ||\r\n                    item === \"afterhours\" ||\r\n                    item === \"load planner\" ||\r\n                    item === \"support\" ||\r\n                    item === 'dispatch' ||\r\n                    item === 'ownerOperator'\r\n            );\r\n            setUserRoles(newRoles);\r\n        }\r\n    }, [roles]);\r\n\r\n    useEffect(() => {\r\n        if (!open) handleClose();\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (+page === 0 && open) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            const {email, role} = user;\r\n            setForm((f) => ({...f, email, role}));\r\n            dispatch(openModal());\r\n        }\r\n    }, [user]);\r\n\r\n    const handleChange = ({name, value}) => {\r\n        setForm((f) => ({...f, [name]: value}));\r\n    };\r\n    const handleClose = () => {\r\n        setForm({...initialState});\r\n        dispatch(resetUserSelected());\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        dispatch(openModal());\r\n    };\r\n\r\n    const getDiff = (local, actual) => {\r\n        const diffWithVal = {};\r\n        const localKeys = Object.keys(local);\r\n        for (let key of localKeys) {\r\n            if (key !== \"password\" && actual[key] !== local[key])\r\n                diffWithVal[key] = local[key];\r\n            if (key === \"password\" && local[key]) diffWithVal[key] = local[key];\r\n        }\r\n        return diffWithVal;\r\n    };\r\n\r\n    function afterSubmit({success, data}) {\r\n        if (success) {\r\n            handleClose();\r\n            dispatch(fetchUsers(+page, +limit));\r\n            notification((user._id ? 'Updated ' : 'Saved ') + 'Successfully');\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!loading) {\r\n            if (!user) {\r\n                const {email, password, role} = form;\r\n                if (!email || !password || !role)\r\n                    return alert(\"All fields are required\");\r\n                else if (!isEmailValid(email)) {\r\n                    return alert('Email is not valid');\r\n                } else if (password.length < 6) {\r\n                    return alert('Please enter password with 6 or more characters');\r\n                }\r\n                await mutation(form, '', afterSubmit);\r\n            } else {\r\n                const dataToUpdate = getDiff(form, user);\r\n                await updateUser(dataToUpdate, 'put', afterSubmit);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {hasAddPermission && <Button\r\n                color=\"primary\"\r\n                variant={'contained'}\r\n                onClick={handleClickOpen}\r\n            >\r\n                Add User\r\n            </Button>}\r\n            <Dialog\r\n                fullWidth={false}\r\n                maxWidth={\"md\"}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                PaperProps={{\r\n                    sx: {\r\n                        width: 400\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\" sx={{textAlign: 'center', color: PRIMARY_BLUE}}>\r\n                    {user ? \"Update\" : \"Add\"} User\r\n                </DialogTitle>\r\n                {error ? <p style={{textAlign: \"center\"}}>{error}</p> : \"\"}\r\n                <DialogContent sx={{p: 0, overflow: 'hidden'}}>\r\n                    <div className=\"\">\r\n                        <form noValidate onSubmit={onSubmit}>\r\n                            <Grid container spacing={2} direction={'column'} sx={{p: 3}}>\r\n                                <Grid item>\r\n                                    <Input\r\n                                        name={\"email\"}\r\n                                        label={\"Email\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.email}\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Password\r\n                                        name={\"password\"}\r\n                                        label={\"Password\"}\r\n                                        onChange={handleChange}\r\n                                        value={form.password}\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Select\r\n                                        onChange={handleChange}\r\n                                        label={\"Role\"}\r\n                                        name=\"role\"\r\n                                        value={form.role}\r\n                                        options={userRoles &&\r\n                                            userRoles.map((role) => ({id: role, label: capitalizeFirstLetter(role)}))}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} justifyContent='center' display={'flex'}>\r\n                                    <LoadingButton\r\n                                        isLoading={isSaving || isSavingUpdate}\r\n                                        className=\"\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Submit\r\n                                    </LoadingButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, {Fragment, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUsers, selectUserToEdit} from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {ROLES} from \"../constants\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page = 0, limit = 10, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const { user } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage - 1, +limit));\r\n    };\r\n\r\n    const onPageSizeChange = ({value}) => {\r\n        dispatch(fetchUsers(0, value));\r\n    };\r\n\r\n    const allowedRolesForDispatch = [\r\n        ROLES.dispatch,\r\n        ROLES.admin,\r\n        ROLES.superadmin,\r\n    ];\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users found',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        showRefresh: true,\r\n        onPageSizeChange,\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '', firstName, lastName } }) => name || `${firstName || '--'} ${lastName || ''}`\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role',\r\n                valueFormatter: getRoleNameString\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role } = {}, role: userRole }) => {\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        {allowedRolesForDispatch.includes(userRole) && (\r\n                                <Button variant='contained' sx={{mr: 1}} onClick={() => {\r\n                                    dispatch(selectUserToEdit({ _id, email, role }))\r\n                                }}>\r\n                                    Update\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {user &&\r\n                            [ROLES.admin, ROLES.superadmin].includes(user.role) &&\r\n                            <Button variant='contained' color='error' onClick={showDelete({\r\n                                message: 'Are you sure you want to delete '+ email + '?',\r\n                                uri: `/api/users/${_id}`,\r\n                                afterSuccessCb: afterDelete\r\n                            })}>\r\n                                Delete\r\n                            </Button>}\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    const Actions = () => {\r\n        return <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n            <UserForm />\r\n        </Box>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} onRefetch={() => dispatch(fetchUsers(+page, +limit))} actions={<Actions />}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            {count > 10 &&\r\n                <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {data.length} of {count} entries</Typography>}\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page + 1}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, []);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}"],"sourceRoot":""}