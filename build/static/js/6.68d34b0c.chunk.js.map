{"version":3,"sources":["components/Atoms/form/Input.js","components/Atoms/form/Switch.js","components/Atoms/Tooltip.js","components/client/constants.js","components/Atoms/UserMenu.js","components/Atoms/form/LoadingButton.js","hooks/useMutation.js","components/Atoms/form/Password.jsx","components/Atoms/form/Select.js","actions/component.action.js","components/Atoms/form/RadioButtons.js","components/Atoms/form/DateRangePicker.js","components/Atoms/Alert.js","views/auth/utils.js"],"names":["InputFieldPure","_ref","errorText","handleBlur","handleChange","hasError","className","name","value","InputProps","readOnly","inputProps","helperText","fullWidth","rest","_objectWithoutProperties","_excluded","_jsx","_FormControl","component","children","_TextField","_objectSpread","error","onChange","onBlur","size","InputField","memo","Input","props","label","_props$errors","errors","_props$isCapitalize","classNameRoot","isCapitalize","_props$inputProps","_props$type","type","_props$fullWidth","_props$trimValue","trimValue","_excluded2","e","_e$target","target","capitalize","trim","_e$target2","max","min","_","isFunction","styled","_Switch","theme","width","height","padding","BootstrapTooltip","MuiTooltip","arrow","classes","popper","_ref2","_ref3","_defineProperty","concat","tooltipClasses","color","palette","common","black","tooltip","backgroundColor","Tooltip","_ref4","title","_ref4$placement","placement","proptype","PropTypes","string","isRequired","element","oneOf","ROLE_NAMES","superAdmin","dispatch","admin","ownerOperator","getRoleNameString","role","stringToColor","i","hash","length","charCodeAt","toString","slice","stringAvatar","userName","split","sx","bgcolor","UserMenu","history","_React$useState","React","useState","_React$useState2","_slicedToArray","anchorElUser","setAnchorElUser","_getUserDetail$user","getUserDetail","user","_getUserDetail$user2","_getUserDetail$user2$","_getUserDetail$user2$2","email","_getUserDetail$user2$3","useDispatch","settings","onClick","changePasswordModal","logout","replace","LOGIN_LINK","onClose","callback","_jsxs","_Box","_IconButton","event","currentTarget","p","_Avatar","_Menu","mt","MenuListProps","minWidth","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","bind","px","py","display","flexDirection","_Typography","fontWeight","variant","_Divider","map","setting","_MenuItem","textAlign","withRouter","LoadingButton","_ref$variant","_ref$isLoading","isLoading","loadingText","disabled","text","isDisabled","_Button","startIcon","_CircularProgress","undefined","getRequestCb","fn","requestPut","requestDelete","requestPatch","requestPost","useMutation","url","arguments","showTriggers","_useState","_useState2","loading","setLoading","mutation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","body","afterSubmit","asyncApiCall","_args","wrap","_context","prev","next","toLowerCase","abrupt","uri","then","res","catch","err","finally","stop","_x","apply","Password","_ref$label","_ref$errors","startAdornment","showPassword","setShowPassword","endAdornment","_InputAdornment","position","show","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","func","Select","_ref$options","options","_ref$labelKey","labelKey","_ref$valueKey","valueKey","_ref$renderValue","renderValue","_ref$showNone","showNone","_ref$className","items","useMemo","item","_InputLabel","_Select","labelId","border","_FormHelperText","array","object","node","bool","showDelete","message","afterSuccessCb","stopPropagation","store","DELETE_COMPONENT","payload","removeDelete","data","getState","app","deleteComponent","CHANGE_PASSWORD","RadioButtonsGroupControlled","radioTitle","_props$options","_props$labelPlacement","labelPlacement","defaultValue","_props$disabled","alldisabled","_props$displayAsRow","displayAsRow","_props$classNameGrp","classNameGrp","radios","forEach","option","_option$label","info","_option$tooltipText","tooltipText","_option$shouldDisplay","shouldDisplay","_option$disabled","_option$labelClassNam","labelClassName","_option$labelSx","labelSx","push","Fragment","_Tooltip","_FormControlLabel","control","_Radio","componentsProps","typography","_FormLabel","_RadioGroup","row","RadioButtonPure","RadioButtonsGroup","_ref$config","config","containerSx","parentValue","_config$options","_config$defaultValue","setValue","_Grid","container","staticRanges","isSelected","range","startDate","startOfDay","Date","endDate","endOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","getDateString","s","moment","format","DateRangePicker","setOpen","_useState3","_useState4","setAnchorEl","_useState5","key","_useState6","selectionRange","setSelectionRange","_useState7","_useState8","setStartDate","_useState9","_useState10","setEndDate","_useState11","_useState12","textField","setTextField","togglePicker","_DateRange","_Popover","fontSize","bottom","Picker","ranges","_ranges$selection","selection","_ranges$selection2","Alert","_ref$classname","classname","_ref$inStyles","inStyles","_config$message","_config$severity","severity","_config$onClose","_config$variant","alertProps","_Collapse","in","_Alert","validatePasswords","currentPass","pass","confirmPass","isValid","validatePasswordsPreLogin","otp"],"mappings":"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","file":"static/js/6.68d34b0c.chunk.js","sourcesContent":["import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport {FormControl, FormControlLabel, Switch as MuiSwitch} from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst SwitchStyled = styled(MuiSwitch)(({theme}) => ({\r\n        width: 50,\r\n        height: 27,\r\n        padding: 7,\r\n        '& .MuiSwitch-switchBase': {\r\n\r\n        },\r\n        '& .MuiSwitch-thumb': {\r\n            width: 20,\r\n            height: 20,\r\n            '&:before': {\r\n\r\n            }\r\n        },\r\n        '&.MuiSwitch-track': {\r\n\r\n        }\r\n    })\r\n)\r\n\r\nconst Switch = ({label, name, placement = 'start', value, onChange, disabled, sx, shouldDisplay = true}) => {\r\n    const handleChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        if (onChange) onChange({name, value: checked});\r\n    }\r\n\r\n    return <FormControl component='fieldset' sx={{display: shouldDisplay ? 'inline' : 'none', ...sx}}>\r\n        <FormControlLabel\r\n            control={<SwitchStyled\r\n                color={'primary'}\r\n                onChange={handleChange}\r\n                checked={!!value}\r\n                name={name}\r\n            />}\r\n            label={label}\r\n            labelPlacement={placement}\r\n            disabled={disabled}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nexport default Switch;","import MuiTooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport {styled} from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }) => (\r\n    <MuiTooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default function Tooltip({title, children, placement=\"right\", ...props}) {\r\n    return (\r\n        <BootstrapTooltip title={title} placement={placement} {...props}>\r\n            {children}\r\n        </BootstrapTooltip>\r\n    );\r\n}\r\n\r\nTooltip.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    placement: PropTypes.oneOf(['right', 'left', 'bottom', 'top'])\r\n}","const ROLE_NAMES = {\r\n    superAdmin: 'Super Admin',\r\n    dispatch: 'Dispatch',\r\n    admin: 'Admin',\r\n    ownerOperator: 'Owner Operator'\r\n}\r\n\r\nexport const getRoleNameString = function (role) {\r\n    return ROLE_NAMES[role] || role;\r\n}","import {Avatar, Box, Divider, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {Tooltip} from \"./index\";\r\nimport React, {memo} from 'react'\r\nimport {getUserDetail} from \"../../utils/utils\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../constants\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {changePasswordModal} from \"../../actions/component.action\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    let userName = ''\r\n    if (!!name.split(' ')[0]) {\r\n        userName = (name.split(' ')[0][0])\r\n    }\r\n    if (!!name.split(' ') && name.split(' ')[1]) {\r\n        userName += (name.split(' ')[1][0]);\r\n    }\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: userName\r\n    };\r\n}\r\n\r\nconst UserMenu = ({history}) => {\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const {user: {name = '', email = '', role = ''} = {}} = getUserDetail();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = [\r\n        {title: 'Change Password', onClick: handlePasswordChange},\r\n        {title: 'Logout', onClick: onLogout},\r\n    ];\r\n\r\n    function handlePasswordChange() {\r\n        changePasswordModal(true);\r\n    }\r\n\r\n    const onOpen = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const onClose = (callback) => {\r\n        setAnchorElUser(null);\r\n        if (typeof callback === 'function') callback();\r\n    };\r\n\r\n    function onLogout() {\r\n        dispatch(logout());\r\n        history.replace(LOGIN_LINK);\r\n    }\r\n\r\n    return <Box>\r\n        <Tooltip title=\"Open settings\" placement='bottom'>\r\n            <IconButton onClick={onOpen} sx={{p: 0}}>\r\n                <Avatar {...stringAvatar(name || '')} />\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            sx={{mt: '45px'}}\r\n            MenuListProps={{\r\n                sx: {\r\n                    minWidth: '8em'\r\n                }\r\n            }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorElUser}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorElUser)}\r\n            onClose={onClose.bind(null)}\r\n        >\r\n            <Box sx={{px: 2, py: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontWeight={600}>{name || 'No Name'}</Typography>\r\n                <Typography variant='caption'>{email}</Typography>\r\n                <Typography variant='caption'>{getRoleNameString(role)}</Typography>\r\n            </Box>\r\n            <Divider/>\r\n            {settings.map((setting) => (\r\n                <MenuItem key={setting.title} onClick={onClose.bind(null, setting.onClick)}>\r\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                </MenuItem>\r\n            ))}\r\n        </Menu>\r\n    </Box>\r\n}\r\n\r\nexport default withRouter(memo(UserMenu, () => true))","import { Button, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoadingButton = ({ children, variant = 'contained', isLoading = false, loadingText, disabled, ...rest }) => {\r\n    const text = isLoading ? !!loadingText ? loadingText: children : children\r\n    const isDisabled = isLoading || disabled;\r\n    return (\r\n        <Button\r\n            disabled={isDisabled}\r\n            variant={variant}\r\n            {...rest}\r\n            startIcon={isLoading ? <CircularProgress size={20} color='inherit' /> : undefined}\r\n        >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nLoadingButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\r\n    loadingText: PropTypes.string\r\n}\r\n\r\nexport default LoadingButton","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri: url, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","import {FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst Select = ({ options = [], labelKey = 'label', valueKey = 'id', label, value, name, onChange, errors={},\r\n                    renderValue = null, showNone=false, className='' }) => {\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n    const items = useMemo(() => {\r\n        return (options || []).map(item => {\r\n            return <MenuItem value={item[valueKey]} key={item[valueKey]} disabled={!!item['disabled']}>\r\n                {item[labelKey]}\r\n            </MenuItem>\r\n        })\r\n    }, [options])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if(onChange){\r\n            onChange({name, value});\r\n        }\r\n    }\r\n\r\n    return  <FormControl error={hasError} fullWidth size='small' className={className}>\r\n        <InputLabel id=\"demo-simple-select-error-label\">{label}</InputLabel>\r\n        <MuiSelect\r\n            name={name}\r\n            labelId=\"demo-simple-select-error-label\"\r\n            id=\"demo-simple-select-error\"\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            renderValue={renderValue}\r\n            sx={{\r\n                '.MuiOutlinedInput-input': {\r\n                    border: 'none !important'\r\n                }\r\n            }}\r\n        >\r\n            {showNone && <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>}\r\n            {items}\r\n        </MuiSelect>\r\n        {hasError && <FormHelperText>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nSelect.proptype = {\r\n    options: PropTypes.array.isRequired,\r\n    labelKey: PropTypes.string,\r\n    valueKey: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    renderValue: PropTypes.node,\r\n    className: PropTypes.string,\r\n    showNone: PropTypes.bool\r\n}\r\n\r\nexport default Select;","import store from \"../store\";\r\nimport {CHANGE_PASSWORD, DELETE_COMPONENT} from \"./types\";\r\n\r\n\r\nconst showDelete = ({message, uri, afterSuccessCb}) => (e) => {\r\n    e.stopPropagation();\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {open: true, message, uri, afterSuccessCb}})\r\n}\r\n\r\nconst removeDelete = () => {\r\n    const data = store.getState().app.deleteComponent;\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {...data, open: false}})\r\n}\r\n\r\nconst changePasswordModal = (open) => {\r\n    store.dispatch({type: CHANGE_PASSWORD, payload: { open }})\r\n}\r\n\r\nexport {\r\n    showDelete,\r\n    removeDelete,\r\n    changePasswordModal\r\n}","import {Fragment, memo, useState} from \"react\";\r\nimport {FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Tooltip} from \"@mui/material\";\r\n\r\nconst RadioButtonsGroupControlled = (props) => {\r\n    const {\r\n        name, value, handleChange, radioTitle, options = [], labelPlacement = 'end',\r\n        className, defaultValue, disabled: alldisabled = false, displayAsRow = true, classNameGrp = ''\r\n    } = props;\r\n\r\n    let radios = []\r\n    options.forEach((option, i) => {\r\n        const {\r\n            label = '',\r\n            value,\r\n            info,\r\n            tooltipText = '',\r\n            shouldDisplay = true,\r\n            disabled = false,\r\n            labelClassName = '',\r\n            labelSx = {}\r\n        } = option;\r\n        if (shouldDisplay && shouldDisplay === 'function') {\r\n            const show = shouldDisplay(props)\r\n            if (!show) return;\r\n        }\r\n        radios.push(\r\n            <Fragment key={i}>\r\n                <Tooltip title={tooltipText} arrow>\r\n                    <FormControlLabel\r\n                        control={<Radio/>}\r\n                        label={label}\r\n                        disabled={alldisabled || disabled}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        className={labelClassName ? `${labelClassName} ${className}` : className}\r\n                        role='radio'\r\n                        componentsProps={{\r\n                            typography: {\r\n                                sx: labelSx\r\n                            }\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                {info && <span className='radioInfo'>{info}</span>}\r\n            </Fragment>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>{radioTitle}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={radioTitle}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                row={displayAsRow}\r\n                defaultValue={defaultValue}\r\n                className={classNameGrp}\r\n            >\r\n                {radios}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst RadioButtonPure = memo(RadioButtonsGroupControlled)\r\n\r\nconst RadioButtonsGroup = ({config = {}, onChange, containerSx, parentValue}) => {\r\n    const {title, options = [], defaultValue = '', ...rest} = config;\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value, type} = {}} = e;\r\n        setValue(value);\r\n        if (onChange) onChange({value, name, type});\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={containerSx}>\r\n            <RadioButtonPure\r\n                handleChange={handleChange}\r\n                value={parentValue || value}\r\n                radioTitle={title}\r\n                options={options}\r\n                {...rest}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioButtonsGroup","import { DateRangePicker as Picker } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport { endOfDay, startOfDay, startOfWeek, startOfMonth, startOfQuarter, startOfYear } from 'date-fns'\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport React, { Fragment, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    InputAdornment,\r\n    IconButton,\r\n    Popover,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { DateRange } from \"@mui/icons-material\";\r\nimport './dateRangePicker.css'\r\n\r\nconst staticRanges = [\r\n    {\r\n        label: 'Today',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfDay(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Week',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfWeek(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Month',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfMonth(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Quarter',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfQuarter(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Year',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfYear(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    }\r\n]\r\n\r\nconst getDateString = (s, e) => {\r\n    return moment(s).format('MM/DD/YYYY') + ' - ' + moment(e).format('MM/DD/YYYY')\r\n}\r\n\r\nconst DateRangePicker = ({ value, onChange, label, name }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const id = open && Boolean(anchorEl) ? 'transition-popper' : undefined;\r\n    const [selectionRange, setSelectionRange] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [textField, setTextField] = useState(getDateString())\r\n\r\n    function handleSelect(ranges) {\r\n        const { selection: { startDate, endDate } = {} } = ranges;\r\n        setStartDate(() => startDate)\r\n        setEndDate(() => endDate)\r\n        setTextField(getDateString(startDate, endDate))\r\n        setSelectionRange({ startDate, endDate, key: 'selection' })\r\n        if (onChange) onChange({ name, value: { startDate, endDate } })\r\n    }\r\n\r\n\r\n    const togglePicker = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                name={name}\r\n                value={textField}\r\n                label={label}\r\n                size={'small'}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle Date range picker\"\r\n                            onClick={togglePicker}\r\n                            edge=\"end\"\r\n                            aria-describedby={id}\r\n                        >\r\n                            <DateRange />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n                readOnly\r\n            />\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={togglePicker} anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    bgcolor: 'background.paper',\r\n                    '&.rdrStaticRangeLabel': { fontSize: \"14px!important\" },\r\n                    '& .rdrDayNumber span::after': {\r\n                        bottom: '1px !important'\r\n                    }\r\n                }}\r\n                >\r\n                    <Picker\r\n                        ranges={[selectionRange]}\r\n                        onChange={handleSelect}\r\n                        className={'basePicker'}\r\n                        staticRanges={staticRanges}\r\n                    />\r\n                </Box>\r\n            </Popover>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DateRangePicker","import {Collapse, Alert as MuiAlert} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Alert = ({config, classname='', inStyles = {}}) => {\r\n    const {open, message = '', severity = '', onClose = undefined, variant = 'standard'} = config;\r\n\r\n    const alertProps = {\r\n        severity: severity || undefined,\r\n        variant\r\n    }\r\n    if(typeof onClose === 'function'){\r\n        alertProps.onClose = onClose;\r\n    }\r\n\r\n    return <Collapse in={open} sx={inStyles}>\r\n        <MuiAlert className={'alertbase ' + classname} {...alertProps}>\r\n            {message}\r\n        </MuiAlert>\r\n    </Collapse>\r\n}\r\n\r\nexport default Alert;","const validatePasswords = (currentPass, pass, confirmPass) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!currentPass) {\r\n        isValid = false\r\n        err.currentPass = 'Please enter Current Password'\r\n    }\r\n    if (!pass) {\r\n        err.pass = 'Please enter Password'\r\n        isValid = false\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    return {isValid, err};\r\n}\r\n\r\nconst validatePasswordsPreLogin = ({pass, confirmPass, otp}) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!pass) {\r\n        isValid = false\r\n        err.pass = 'Please enter Password'\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    if (!otp) {\r\n        isValid = false;\r\n        err.otp = 'Please enter OTP'\r\n    }\r\n\r\n    return {isValid, err};\r\n}\r\n\r\nexport {\r\n    validatePasswords,\r\n    validatePasswordsPreLogin\r\n}"],"sourceRoot":""}