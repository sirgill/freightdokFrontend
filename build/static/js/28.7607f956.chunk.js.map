{"version":3,"sources":["components/auth/signUpWithFMCSA/UserOnboard.js","hooks/useMutation.js","components/Atoms/form/Input.js","components/Atoms/form/Password.jsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"names":["UserOnboard","props","match","params","email","history","formData","setFormData","useState","errors","setErrors","loading","mutation","useMutation","validateOtpMutation","validateOtpLoading","useEffect","then","res","success","data","disabled","notification","message","console","error","onChange","_ref","name","value","afterSubmit","_ref2","push","LOGIN_LINK","_jsx","_Grid","container","className","children","_jsxs","style","verticalAlignStyle","CompanyText","_Box","sx","flex","display","alignItems","spacing","component","onSubmit","async","e","preventDefault","isValid","otp","password","firstName","lastName","String","length","trim","item","xs","Input","label","fullWidth","required","trimValue","type","inputProps","max","placeholder","Password","textAlign","_Button","variant","url","callback","arguments","undefined","showTriggers","options","setLoading","body","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","catch","err","finally","InputFieldPure","errorText","handleBlur","handleChange","hasError","InputProps","readOnly","helperText","formControlSx","rest","_FormControl","_TextField","onBlur","size","InputField","memo","classNameRoot","isCapitalize","target","capitalize","min","_","isFunction","startAdornment","showPassword","setShowPassword","React","id","endAdornment","_InputAdornment","position","_IconButton","onClick","handleClickShowPassword","show","onMouseDown","event","edge","Visibility","VisibilityOff","proptype","PropTypes","string","isRequired","func","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/28.7607f956.chunk.js","sourcesContent":["import { Box, Button, Grid } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { verticalAlignStyle } from \"../../../utils/utils\";\r\nimport CompanyText from \"../../Atoms/CompanyText\";\r\nimport Input from \"../../Atoms/form/Input\";\r\nimport Password from \"../../Atoms/form/Password\";\r\nimport { notification } from \"../../../actions/alert\";\r\nimport { LOGIN_LINK } from \"../../constants\";\r\nimport useMutation from \"../../../hooks/useMutation\";\r\n\r\nconst UserOnboard = (props) => {\r\n    const { match: { params: { email } = {} } = {}, history } = props;\r\n    const [formData, setFormData] = useState({});\r\n    const [errors, setErrors] = useState({}),\r\n        {loading, mutation} = useMutation('/api/onBoarding/register'),\r\n        {mutation: validateOtpMutation, loading: validateOtpLoading} = useMutation('/api/onBoarding/validateOtp');\r\n\r\n    useEffect(() => {\r\n        validateOtpMutation({email})\r\n            .then(res => {\r\n                const { success, data } = res || {}\r\n                if (!success) {\r\n                    setFormData({ ...formData, disabled: true });\r\n                    if (!data?.success){\r\n                        notification(data?.message || 'Server Error', 'error');\r\n                        console.error('Server Error')\r\n                    }\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    const onChange = ({ name, value }) => {\r\n        setFormData({ ...formData, [name]: value })\r\n        setErrors((errors) => ({ ...errors, [name]: '' }));\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        let isValid = true;\r\n        const { otp, password, firstName = '', lastName = ''} = formData;\r\n        if(!firstName){\r\n            isValid = false;\r\n            setErrors(errors => ({...errors, firstName: 'Please Enter First Name'}));\r\n        }\r\n        if (!otp) {\r\n            isValid = false;\r\n            setErrors(errors => ({ ...errors, otp: 'Please enter OTP' }));\r\n        } else if (String(otp).length !== 6) {\r\n            isValid = false;\r\n            setErrors(errors => ({ ...errors, otp: 'OTP should be of six digits' }));\r\n        }\r\n        if (!password) {\r\n            isValid = false;\r\n            setErrors(errors => ({ ...errors, password: 'Please enter Password' }))\r\n        } else if (password.length < 8) {\r\n            return setErrors(errors => ({ ...errors, password: 'Password must be 8 letters' }))\r\n        }\r\n        isValid && mutation({ email, password, otp, firstName: firstName.trim(), lastName: lastName.trim() }, null, afterSubmit);\r\n    }\r\n\r\n    const afterSubmit = ({success, data}) => {\r\n        if (success) {\r\n            notification(data.message);\r\n            history.push(LOGIN_LINK);\r\n        }\r\n    }\r\n\r\n    return <Grid container className='login'>\r\n        <div className='auth-wrapper auth-inner' style={verticalAlignStyle}>\r\n            <CompanyText />\r\n            <Box sx={{ flex: 1, display: 'flex', alignItems: 'center' }}>\r\n                <Grid container spacing={2} component='form' onSubmit={onSubmit}>\r\n                    <Grid item xs={12}>\r\n                        <Input name='email' value={email} disabled label='Email' fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input name='firstName' required errors={errors} value={formData['firstName']} label='First Name' fullWidth trimValue onChange={onChange} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input name='lastName' value={formData['lastName']} label='Last Name' onChange={onChange} fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input fullWidth name='otp' required errors={errors} type='number' inputProps={{ max: 999999 }} value={formData['otp']} label='OTP' placeholder='Enter OTP' onChange={onChange} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Password name='password' required errors={errors} value={formData['password']} onChange={onChange} />\r\n                    </Grid>\r\n                    <Grid item textAlign='center' xs={12}>\r\n                        <Button type='submit' variant='contained' disabled={formData['disabled'] || loading || validateOtpLoading}>\r\n                            {validateOtpLoading ? 'Validating User...' : loading ? 'Submitting...' : 'Submit'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    </Grid>\r\n}\r\n\r\nexport default UserOnboard;","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            formControlSx,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth} sx={formControlSx}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, formControlSx = {}, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            formControlSx={formControlSx}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, onBlur, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = e => {\r\n        const {name, value} = e.target\r\n        if(onBlur){\r\n            onBlur({name, value})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"sourceRoot":""}