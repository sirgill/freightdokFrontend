{"version":3,"sources":["components/users/UsersList.js"],"names":["UsersList","_useSelector","useSelector","state","users","list","loading","page","limit","total","user","auth","dispatch","useDispatch","_useState","useState","open","config","_useState2","_slicedToArray","dialog","setDialog","onDialogClose","_objectSpread","onDelete","_id","e","stopPropagation","title","_jsxs","_Grid","container","alignItems","sx","p","gap","children","_jsx","ErrorOutlineIcon","color","_Typography","fontSize","fontWeight","okText","onOk","deleteUser","content","_DialogContentText","useEffect","fetchUsers","allowedRolesForDispatch","emptyMessage","count","onPageChange","event","newPage","headerCellSx","pt","pb","rowCellPadding","columns","id","label","renderer","_ref","_ref$row$name","row","name","_ref2","_ref2$row","_ref2$row2","email","role","Fragment","_Button","mr","variant","onClick","selectUserToEdit","includes","bind","EnhancedTable","data","Dialog","className","onClose"],"mappings":"oOAmHeA,UA3GG,WACd,IAAAC,EAA8CC,aAC1C,SAACC,GAAK,OAAKA,EAAMC,KAAK,IADlBC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QAASC,EAAIN,EAAJM,KAAMC,EAAKP,EAALO,MAAOC,EAAKR,EAALQ,MAG5BC,EAASR,aAAY,SAACC,GAAK,OAAKA,EAAMQ,IAAI,IAA1CD,KACFE,EAAWC,cACjBC,EAA4BC,mBAAS,CAACC,MAAM,EAAOC,OAAQ,CAAC,IAAGC,EAAAC,YAAAL,EAAA,GAAxDM,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAgB,WAAH,OAASD,EAASE,wBAAC,CAAC,EAAGH,GAAM,IAAEJ,MAAM,IAAO,EAEzDQ,EAAW,SAACC,EAAKC,GACnBA,EAAEC,kBAWFN,EAAU,CAACL,MAAM,EAAMC,OATR,CACXW,MAAO,kBAAMC,eAAAC,IAAA,CAAMC,WAAS,EAACC,WAAW,SAASC,GAAI,CAAEC,EAAG,aAAeC,IAAK,EAAEC,SAAA,CAC5EC,cAACC,IAAgB,CAACC,MAAM,UACxBF,cAAAG,IAAA,CAAYP,GAAI,CAAEQ,SAAU,UAAWC,WAAY,KAAOH,MAAM,QAAOH,SAAC,aACrE,EACPO,OAAQ,SACRC,KAAM,kBAAMhC,EAASiC,YAAWpB,EAAKH,GAAe,EACpDwB,QAAS,kBAAMT,cAAAU,IAAA,CAAmBd,GAAI,CAACM,MAAO,QAAQH,SAAC,6CAA6D,IAG5H,EAEAY,qBAAU,WACNpC,EAASqC,aAAY1C,GAAOC,GAChC,GAAG,IAEH,IASM0C,EAA0B,CAC5B,SACA,aACA,eACA,WAGEjC,EAAS,CACXkC,aAAc,WACd5C,OACA6C,MAAO3C,EACPD,QACA6C,aArBqB,SAACC,EAAOC,GAC7B3C,EAASqC,YAAWM,EAAU,GAAI/C,GACtC,EAoBIgD,aAAc,CAAEC,GAAI,EAAGC,GAAI,GAC3BC,eAAgB,UAChBC,QAAS,CACL,CACIC,GAAI,OACJC,MAAO,OACPC,SAAU,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,IAAOC,KAAS,YAAL,IAAAF,EAAG,GAAEA,IAAiB,IAAI,GAEtD,CACIJ,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,UACJC,MAAO,UACPC,SAAU,SAAAK,GAAyC,IAADC,EAAAD,EAArCF,IAAGI,OAAA,IAAAD,EAAyB,CAAC,EAACA,EAAvB5C,EAAG6C,EAAH7C,IAAK8C,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAC5B,OAAO3C,eAAC4C,WAAQ,CAAArC,SAAA,CACX1B,GAAsB,aAAdA,EAAK8D,KACVnC,cAAAqC,IAAA,CAAQzC,GAAI,CAAE0C,GAAI,GAAKC,QAAQ,YAAYC,QAAS,WAChDjE,EAASkE,YAAiB,CAAErD,MAAK8C,QAAOC,SAC5C,EAAEpC,SAAC,WAIHc,EAAwB6B,SAASP,IAC7BnC,cAAAqC,IAAA,CAAQE,QAAQ,YAAYC,QAAS,WACjCjE,EAASkE,YAAiB,CAAErD,MAAK8C,QAAOC,SAC5C,EAAEpC,SAAC,WAKV1B,IACkB,SAAdA,EAAK8D,MAAiC,UAAd9D,EAAK8D,OAChB,aAAd9D,EAAK8D,MACLnC,cAAAqC,IAAA,CAAQE,QAAQ,YAAYrC,MAAM,QAAQsC,QAASrD,EAASwD,K,UAAWvD,GAAKW,SAAC,aAIzF,KAKZ,OACIP,eAAC4C,WAAQ,CAAArC,SAAA,CACLC,cAAC4C,IAAa,CAAC3E,QAASA,EAAS4E,KAAM7E,EAAMY,OAAQA,IACrDoB,cAAC8C,IAAM,CAACC,UAAU,uBAAuBpE,KAAMI,EAAOJ,KAAMC,OAAQG,EAAOH,OAAQoE,QAAS/D,MAGxG,C","file":"static/js/15.7d40b585.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers, selectUserToEdit, deleteUser } from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Button, DialogContentText, Grid, Typography} from \"@mui/material\";\r\nimport Dialog from \"../Atoms/Dialog\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page, limit, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const { user } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [dialog, setDialog] = useState({open: false, config: {}});\r\n\r\n    const onDialogClose = () => setDialog({...dialog, open: false})\r\n\r\n    const onDelete = (_id, e) => {\r\n        e.stopPropagation();\r\n\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{ p: '16px 24px' }} gap={1}>\r\n                <ErrorOutlineIcon color='error' />\r\n                <Typography sx={{ fontSize: '1.25rem', fontWeight: 550 }} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => dispatch(deleteUser(_id, onDialogClose)),\r\n            content: () => <DialogContentText sx={{color: '#000'}}>Are you sure you want to delete the user?</DialogContentText>\r\n        }\r\n        setDialog({open: true, config});\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage - 1, +limit));\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const new_limit = event.target.value;\r\n        dispatch(fetchUsers(0, new_limit));\r\n    };\r\n\r\n    const allowedRolesForDispatch = [\r\n        \"driver\",\r\n        \"afterhours\",\r\n        \"load planner\",\r\n        \"support\",\r\n    ];\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        headerCellSx: { pt: 1, pb: 1 },\r\n        rowCellPadding: 'inherit',\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                renderer: ({ row: { name = '' } }) => name || '--'\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role'\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role } = {} }) => {\r\n                    return <Fragment>\r\n                        {user && user.role !== \"dispatch\" ? (\r\n                            <Button sx={{ mr: 1 }} variant='contained' onClick={() => {\r\n                                dispatch(selectUserToEdit({ _id, email, role }))\r\n                            }}>\r\n                                Update\r\n                            </Button>\r\n                        ) : (\r\n                            allowedRolesForDispatch.includes(role) && (\r\n                                <Button variant='contained' onClick={() => {\r\n                                    dispatch(selectUserToEdit({ _id, email, role }))\r\n                                }}>\r\n                                    Update\r\n                                </Button>\r\n                            )\r\n                        )}\r\n                        {user &&\r\n                            (user.role === \"user\" || user.role === \"admin\") &&\r\n                            user.role !== \"dispatch\" &&\r\n                            <Button variant='contained' color='error' onClick={onDelete.bind(this, _id)}>\r\n                                Delete\r\n                            </Button>}\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} />\r\n            <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose} />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n"],"sourceRoot":""}