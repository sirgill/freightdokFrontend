{"version":3,"sources":["components/loads/LoadsStatus.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","actions/load.js","components/Atoms/form/InputField.js","actions/driver.js","utils/helper.js","components/loads/styles.js","components/loads/components/LoadDetailsUploadComponent.js","components/loads/LoadDetailModal.js"],"names":["useStyles","makeStyles","TableContainer","borderBottom","loadSearchbar","textAlign","paddingBottom","LoadsStatus","_ref","resetSearchField","listBarType","dispatch","useDispatch","loads","loads_pagination","limit","total","currPage","rowsPerPage","search","query","sLoads","page","sPage","sLimit","sTotal","useSelector","state","load","modal","setModal","useState","open","data","loading","setLoading","useEffect","getLoads","setTimeout","resetLoadsSearch","tableConfig","onPageChange","handleChangePage","event","newPage","searchLoads","rowCellPadding","parseInt","count","hover","onRowClick","row","columns","id","label","renderer","_ref2","pickup","pickupData","pickupCity","_ref3","date","moment","pickUpByDate","isValid","format","_jsx","Fragment","children","_ref4","drop","dropData","dropCity","_ref5","deliverBy","_ref6","modesString","standard","getParsedLoadEquipment","_jsxs","emptyState","EnhancedTable","config","LoadDetailModal","modalEdit","handleClose","selectLoad","CircularIndeterminate","props","_Box","sx","height","display","justifyContent","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","width","StyledStack","Stack","flexWrap","TablePagination","onPageSizeChange","length","setLength","Array","isArray","direction","Typography","color","fontSize","Select","name","value","options","className","onChange","Math","ceil","variant","size","e","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","onClick","bind","_id","disabled","cell","i","valueFormatter","get","preventDefault","cursor","getTableCell","history","onRefetch","isRefetching","actions","isPaginationLoading","tableState","setTableState","dialog","setDialog","hasOnClickUrl","emptyMessage","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","React","useRef","Actions","isValidElement","_Fragment","url","push","stopPropagation","title","_Grid","container","p","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","style","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","window","item","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","Dialog","onClose","withRouter","memo","arguments","module","async","success","requestGet","uri","concat","type","GET_LOADS","payload","notification","message","err","setAlert","getInvoiceLoads","INVOICE_LOAD_FETCHED","response","axios","totalPages","res","RETURNED_SEARCHED_LOADS","getState","RESET_SEARCHED_LOADS","input","SELECT_LOAD","addLoad","formData","callback","post","ADD_LOAD","status","updateLoad","bucketFiles","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","requestPatch","body","deleteLoad","load_id","requestDelete","DELETE_LOAD","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","toLowerCase","console","error","opts","opt","unshift","Input","InputField","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","target","values","l","selected","getDrivers","assign","timestamp","GET_DRIVERS","_err$response","_err$response2","log","DRIVER_ERROR","msg","statusText","addDriver","isEdit","errors","patchDriverLoads","driver_id","drivers","driver","patch","find","o","PATCH_DRIVER","deleteDriver","cb","delete","splice","DELETE_DRIVER","deleteDriverLoads","DELETE_DRIVER_LOAD","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","root","minWidth","maxWidth","marginBottom","borderRadius","borderWidth","borderStyle","borderColor","cardcontent","flexDirection","wrap","paddingLeft","paddingTop","h4","margin","loadp","playIcon","textField","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","palette","background","shadows","spacing","top","left","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","FileContainer","overflow","FileViewer","onRemoveAll","Files","elevation","DescriptionIcon","PRIMARY_BLUE","align","textOverflow","Modal","closeCallback","Alert","severity","_Button","float","gridTemplateColumns","LoadDetailsUploadComponent","fileViewConfig","setFileViewConfig","edit","rateConfirmation","proofDelivery","accessorialsFiles","handleFileChange","rateConfirmationRef","proofDeliveryRef","accessorialsRef","rateConFile","podFile","formAccessorialsFiles","viewClickHandler","onFileViewClose","roc","idx","href","startIcon","OpenInNewIcon","auth","getCheckStatusIcon","pod","acc","formInitialState","rate","assignedTo","trailorNumber","accessorials","invoice_created","MenuProps","PaperProps","ITEM_HEIGHT","DATE_PICKER_SLOT_PROPS","helperText","fullWidth","TIME_PICKET_SLOT_PROPS","TextPlaceHolder","canUpdate","brokerage","loadNumber","bktFiles","classes","setEdit","setForm","isProcessingAsyncRequest","setIsProcessingAsyncRequest","SelectElement","OutlinedInput","FilledInput","assignees","assignedToOptions","firstName","lastName","assigneeRole","assigneeId","getRoleNameString","setupDrivers","resetFileInputs","afterSubmit","isSuccess","handleSubmit","handleOnChange","handlePickDropChange","keyToUpdate","childKey","handleDateChange","handleInOutTime","parent_key","child_key","getRole","alpha","forEach","fileType","fileLocation","StaticDataShow","heading","sxObject","pt","_Modal","LocalizationProvider","dateAdapter","AdapterMoment","_Close","onSubmit","xs","pl","pr","sm","FormControl","m","InputLabel","_Select","notched","LOAD_STATUSES","_MenuItem","_ref7","assignee","labelId","_ref8","split","_Divider","_Done","_CircularProgress","green","_Edit","handleCancel","createCopy","_FileCopyOutlined","mr","placeholder","shipperName","pickupAddress","pickupState","pickupZip","DateTimePicker","pickupDate","slotProps","TimePicker","in_time","out_time","mt","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropState","dropZip","dropDate","dropPo","dropReference","dropDeliverNumber","f"],"mappings":"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","file":"static/js/17.fb164283.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { resetLoadsSearch } from \"../../actions/load.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoads, searchLoads, selectLoad } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport LoadDetailModal from \"./LoadDetailModal\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n    TableContainer: {\r\n        borderBottom: \"none\",\r\n    },\r\n    loadSearchbar: {\r\n        textAlign: \"right\",\r\n        paddingBottom: 10,\r\n    },\r\n});\r\n\r\nexport default function LoadsStatus({ resetSearchField, listBarType }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(),\r\n        { loads = [], loads_pagination: { limit = 15, total, currPage } = {}, rowsPerPage = 15,\r\n            search: { query, loads: sLoads, page: sPage, limit: sLimit, total: sTotal } = {} } = useSelector(state => state.load),\r\n        [modal, setModal] = useState({ open: false, data: {} });\r\n    // const { query, loads: sLoads, page: sPage, limit, total: sTotal } = search;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getLoads())\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        if (query)\r\n            dispatch(searchLoads(newPage - 1, limit, query, listBarType));\r\n        else\r\n            dispatch(getLoads(newPage - 1, rowsPerPage, listBarType));\r\n    };\r\n\r\n    const tableConfig = {\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'inherit',\r\n        page: parseInt(currPage) - 1,\r\n        count: total,\r\n        limit,\r\n        hover: true,\r\n        onRowClick: (row) => {\r\n            if (listBarType === 'history') {\r\n                setModal({ open: true, data: row })\r\n            }\r\n        },\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number'\r\n            },\r\n\r\n            {\r\n                id: 'pickupCity',\r\n                label: 'Pickup City/State',\r\n                renderer: ({ row: { pickup = [] } = {} }) => {\r\n                    const [pickupData = {}] = pickup,\r\n                        { pickupCity = '' } = pickupData;\r\n                    return pickupCity;\r\n                }\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: 'dropCity',\r\n                label: 'Drop City/State',\r\n                renderer: ({ row: { drop = [] } = {} }) => {\r\n                    const [dropData = {}] = drop,\r\n                        { dropCity = '' } = dropData;\r\n                    // console.log('row for pickup city', row)\r\n                    return dropCity\r\n                }\r\n            },\r\n\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row)\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: () => {\r\n                    return \"C.H Robinson\"\r\n                },\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <EnhancedTable config={tableConfig} data={loads} loading={loading} />\r\n                {modal.open && <LoadDetailModal\r\n                    listBarType={listBarType}\r\n                    modalEdit={true}\r\n                    open={true}\r\n                    load={modal.data}\r\n                    handleClose={() => {\r\n                        setModal({ open: false, data: {} });\r\n                        // enableEdit(false);\r\n                        selectLoad();\r\n                    }}\r\n                />}\r\n            </Fragment>\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport { requestDelete, requestGet, requestPatch } from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 15, module = \"\") =>\r\n    async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1\r\n            }&limit=${limit}&module=${module}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n    async (dispatch) => {\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { data: [], loading: true },\r\n      });\r\n\r\n      try {\r\n        const url = `/api/load/invoice_loads?page=${page + 1\r\n          }&limit=${limit}&search=${search}`;\r\n        const response = await axios.get(url);\r\n        const { loads, total, totalPages } = response.data;\r\n        dispatch({\r\n          type: INVOICE_LOAD_FETCHED,\r\n          payload: { data: loads, page, limit, search, total, totalPages, loading: false },\r\n        });\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/load\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_LOAD,\r\n      payload: res.data,\r\n    });\r\n\r\n    notification(\"Load Created\")\r\n    if (callback) {\r\n      callback(res.status === 200, res.data)\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport {notification, setAlert} from \"./alert\";\r\nimport { GET_DRIVERS, GET_DRIVER, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER, DRIVER_ERROR, DELETE_DRIVER_LOAD } from \"./types.js\";\r\n\r\n//get current users drivers\r\nexport const getDrivers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/drivers/me\");\r\n    Object.assign(res.data, {timestamp: new Date()})\r\n    dispatch({\r\n      type: GET_DRIVERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err?.response?.statusText, status: err?.response?.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addDriver = (formData, isEdit) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/drivers\", formData, config);\r\n\r\n    notification(res.data.message);\r\n    dispatch(getDrivers());\r\n\r\n  } catch (err) {\r\n    let error = err.errors && Array.isArray(err.errors) && err.errors.length ? err.errors[0].msg : err.message;\r\n    dispatch(setAlert( error, \"error\"));\r\n    // dispatch({\r\n    //   type: DRIVER_ERROR,\r\n    //   payload: { msg: err.response.statusText, status: err.response.status },\r\n    // });\r\n  }\r\n};\r\n\r\n//patch driver\r\nexport const patchDriverLoads = (driver_id, loads) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.patch(`/api/drivers/loads?driver_id=${driver_id}`, { loads: loads });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: PATCH_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver\r\nexport const deleteDriver = (driver_id, cb) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/`, { data: { driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers.splice(index, 1);\r\n    }\r\n    notification('Deleted Successfully')\r\n    cb && cb(res);\r\n    dispatch({\r\n      type: DELETE_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver load\r\nexport const deleteDriverLoads = (driver_id, load_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/loads`, { data: { load_id: load_id, driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: DELETE_DRIVER_LOAD,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}","import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import {Button, Grid, Paper, Stack, Typography} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {getCheckStatusIcon} from \"../../../utils/utils\";\r\nimport Modal from \"../../Atoms/Modal\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {PRIMARY_BLUE} from \"../../layout/ui/Theme\";\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport {Alert} from \"../../Atoms\";\r\n\r\nconst FileContainer = styled(Paper)(({}) => ({\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    padding: 8,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n}))\r\n\r\nconst FileViewer = ({files = [], onClose, onRemoveAll}) => {\r\n    // console.log(files)\r\n    const config={\r\n        title: 'Edit File'\r\n    }\r\n    const Files = (files || []).map(file => {\r\n        return <FileContainer elevation={3}>\r\n            <DescriptionIcon sx={{color: PRIMARY_BLUE}} />\r\n            <Typography variant='subtitle2' align='center' sx={{width: 'inherit', overflow: 'hidden', textOverflow: 'ellipsis'}}>{file.name}</Typography>\r\n        </FileContainer>\r\n    })\r\n\r\n    return <Modal config={config} closeCallback={onClose}>\r\n        <Grid container spacing={2} sx={{display: 'grid'}}>\r\n            <Grid item>\r\n                <Alert config={{open: true, message: 'Previous files, if exist will be overwritten with new files.', severity: 'info'}} />\r\n            </Grid>\r\n            {files && <Grid item>\r\n                <Button variant='outlined' sx={{float: 'right'}} onClick={onRemoveAll} color='error'>Remove All</Button>\r\n            </Grid>}\r\n            <Grid item>\r\n                <Grid container gap={2} sx={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\r\n                    {Files}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nconst LoadDetailsUploadComponent = (props) => {\r\n    const [fileViewConfig, setFileViewConfig] = useState({open: false, config: {}})\r\n    const {\r\n        edit, rateConfirmation = [], proofDelivery = [], accessorialsFiles = [], handleFileChange, rateConfirmationRef,\r\n        proofDeliveryRef, accessorialsRef, state, rateConFile, podFile, formAccessorialsFiles\r\n    } = props;\r\n    // console.log(rateConFile)\r\n    // console.log(accessorialsFiles)\r\n\r\n    function viewClickHandler(file, name, e) {\r\n        e.stopPropagation()\r\n        setFileViewConfig({open: true, config: [...file], name})\r\n    }\r\n\r\n    function onFileViewClose() {\r\n        setFileViewConfig({open: false, config: null});\r\n    }\r\n\r\n    function onRemoveAll() {\r\n        handleFileChange({target: { name: fileViewConfig.name, files: null }})\r\n        onFileViewClose();\r\n    }\r\n\r\n    return (<Stack sx={{alignItems: 'end'}}>\r\n        {fileViewConfig.open && <FileViewer files={fileViewConfig.config} onClose={onFileViewClose} onRemoveAll={onRemoveAll} />}\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {rateConfirmation.length ? (rateConfirmation.map((roc, idx) => {\r\n                return (<><span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                          <a href={roc} target=\"_blank\">\r\n                            Rate Con-{idx + 1}\r\n                          </a>\r\n                        </span></>)\r\n            })) : (<span>Rate Con</span>)}\r\n            <span>\r\n                      {edit ? <Fragment>\r\n                              {rateConFile\r\n                                  ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, rateConFile, 'rateConfirmation')} startIcon={<OpenInNewIcon />}>\r\n                                        View\r\n                                    </Button>\r\n                                  : <label htmlFor=\"contained-button-file1\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"rateConfirmation\"\r\n                                      disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                      onChange={handleFileChange}\r\n                                      ref={rateConfirmationRef}\r\n                                      id=\"contained-button-file1\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      {'Attach'}\r\n                                  </Button>\r\n                              </label>}\r\n                      </Fragment>\r\n                          : getCheckStatusIcon(!!rateConfirmation.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {proofDelivery.length ? (proofDelivery.map((pod, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={pod} target=\"_blank\">\r\n                              POD-{idx + 1}\r\n                            </a>\r\n                          </span>\r\n                </>)\r\n            })) : (<span>POD</span>)}\r\n            <span>\r\n                      {edit ? podFile ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, podFile, 'proofDelivery')} startIcon={<OpenInNewIcon />}>\r\n                                  View\r\n                              </Button>\r\n                              : <label htmlFor=\"contained-button-file2\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"proofDelivery\"\r\n                                      disabled={!edit}\r\n                                      onChange={handleFileChange}\r\n                                      ref={proofDeliveryRef}\r\n                                      id=\"contained-button-file2\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      Attach\r\n                                  </Button>\r\n                              </label>\r\n                          : getCheckStatusIcon(!!proofDelivery.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2}>\r\n            {accessorialsFiles.length ? (accessorialsFiles.map((acc, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={acc} target=\"_blank\">\r\n                              Accessorials-{idx + 1}\r\n                            </a>\r\n                          </span></>)\r\n            })) : (<span>Accessorials</span>)}\r\n            <span>\r\n                      {edit ? formAccessorialsFiles\r\n                          ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, formAccessorialsFiles, 'accessorialsFiles')} startIcon={<OpenInNewIcon />}>\r\n                              View\r\n                          </Button>\r\n                          : <Fragment>\r\n                          <label htmlFor=\"contained-button-file3\">\r\n                              <input\r\n                                  style={{display: 'none'}}\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  name=\"accessorialsFiles\"\r\n                                  disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                  onChange={handleFileChange}\r\n                                  ref={accessorialsRef}\r\n                                  id=\"contained-button-file3\"\r\n                              />\r\n                              <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                  Attach\r\n                              </Button>\r\n                          </label>\r\n                      </Fragment> : getCheckStatusIcon(!!accessorialsFiles?.length)}\r\n                    </span>\r\n        </Stack>\r\n    </Stack>)\r\n}\r\n\r\nexport default LoadDetailsUploadComponent;","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  MenuItem,\r\n  IconButton,\r\n  Select,\r\n  Modal,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport moment from \"moment\";\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport \"./style.css\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { useStyles } from \"./styles\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n// import TimePicker from '@mui/lab/TimePicker';\r\n// import DatePicker from '@mui/lab/DatePicker';\r\nimport {TimePicker} from '@mui/x-date-pickers/TimePicker';\r\nimport {DateTimePicker} from '@mui/x-date-pickers/DateTimePicker'\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {AdapterMoment} from '@mui/x-date-pickers/AdapterMoment';\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport { LOAD_STATUSES } from \"../constants\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport LoadDetailsUploadComponent from \"./components/LoadDetailsUploadComponent\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst DATE_PICKER_SLOT_PROPS = {\r\n  textField: {\r\n    helperText: 'DD/MM/YYYY hh:mm AM/PM',\r\n    size: 'small',\r\n    fullWidth: true\r\n  },\r\n},\r\n    TIME_PICKET_SLOT_PROPS = {\r\n      textField: {\r\n        size: 'small',\r\n        fullWidth: true\r\n      }\r\n    }\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose,\r\n  listBarType,\r\n  load, canUpdate\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef();\r\n  const accessorialsRef = useRef(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const {assignees = [] } = state.driver || {};\r\n  const assignedToOptions = assignees.map((item) => {\r\n    const { _id, firstName, lastName, role, user = {} } = item || {},\r\n        {name = '', role: assigneeRole, _id: assigneeId} = user || {};\r\n    return {\r\n      name, _id: assigneeId || _id, firstName, lastName, role: getRoleNameString(assigneeRole || role)\r\n    }\r\n  }) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user?._id,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n  useEffect(() => {\r\n    const drivers = state.driver.drivers;\r\n    if (drivers.length > 0) {\r\n      // console.log(user._id, state.driver.drivers);\r\n      // setForm({ ...form, assignedTo: user });\r\n      // for (let driver of drivers) {\r\n      //     if (driver.loads.length > 0) {\r\n      //         for (let load of driver.loads) {\r\n      //             if (load._id === _id) {\r\n      //                 setForm({ ...form, assignedTo: user._id });\r\n      //             }\r\n      //         }\r\n      //     }\r\n      // }\r\n    }\r\n  }, [state.driver.drivers]);\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if (isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n      setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }] });\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n      setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {\r\n      'proofDelivery': [],\r\n      'rateConfirmation': [],\r\n      'accessorialsFiles': []\r\n    };\r\n    alpha.forEach((item = {}, idx) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      bucketFiles[fileType].push(fileLocation)\r\n\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = [], proofDelivery = [], accessorialsFiles = [] } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }} className='staticInfo'>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center', pt: 3 }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <div style={{ width: '90%' }} className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"status\"\r\n                        value={form.status}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {LOAD_STATUSES.map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"assignedTo\"\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                        value={form.assignedTo}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((assignee) => (\r\n                          <MenuItem\r\n                            key={assignee._id}\r\n                            value={assignee._id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {`${assignee.firstName} ${assignee.lastName} (${assignee.role || '--'})`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <Box sx={{ position: 'relative' }}>\r\n                    <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                      <DoneIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>\r\n                    {isProcessingAsyncRequest && <CircularProgress\r\n                      size={65}\r\n                      sx={{\r\n                        color: green[500],\r\n                        position: 'absolute',\r\n                        top: -6,\r\n                        left: -6,\r\n                        zIndex: 1,\r\n                      }}\r\n                    />}\r\n                  </Box>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                  <DateTimePicker\r\n                                      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\") || new Date()}\r\n                                      onChange={(date) => handleDateChange(date, \"pickup\")}\r\n                                      slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                      label='Pickup Date'\r\n                                  />\r\n                                </LocalizationProvider>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <DatePicker*/}\r\n                                {/*    value={*/}\r\n                                {/*      form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                                {/*    }*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleDateChange(date, \"pickup\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                              </Grid>\r\n                              {/*<Grid item xs={6}>*/}\r\n                              {/*    <TimePicker*/}\r\n                              {/*      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\")}*/}\r\n                              {/*      onChange={(date) =>*/}\r\n                              {/*        handleDateChange(date, \"pickup\")*/}\r\n                              {/*      }*/}\r\n                              {/*      label='Pickup Time'*/}\r\n                              {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                              {/*    />*/}\r\n                              {/*</Grid>*/}\r\n                              <Grid item xs={6}>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <TimePicker*/}\r\n                                {/*    label='In Time'*/}\r\n                                {/*    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                                <TimePicker\r\n                                    label='In Time'\r\n                                    value={moment( form.pickup[0] ? form.pickup[0].in_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                        handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={moment(form.pickup[0] ? form.pickup[0].out_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                  />\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DateTimePicker\r\n                                  value={moment(form.drop[0] ? form.drop[0].dropDate : \"\") || new Date()}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                  label='Drop Date'\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <DatePicker*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                              {/*    onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            {/*<Grid item xs={6}>*/}\r\n                            {/*    <TimePicker*/}\r\n                            {/*        label='Drop Time'*/}\r\n                            {/*      value={moment(form.drop[0] ? form.drop[0].dropDate : \"\")}*/}\r\n                            {/*      onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                            {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                            {/*    />*/}\r\n                            {/*</Grid>*/}\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='In Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].in_time : \"\") || new Date()}\r\n                                  onChange={(date) => handleInOutTime(date, \"drop\", \"in_time\")}\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='In Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='Out Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].out_time : \"\")}\r\n                                  onChange={(date) =>\r\n                                      handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='Out Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <LoadDetailsUploadComponent\r\n                    edit={edit}\r\n                    rateConfirmation = {rateConfirmation}\r\n                    proofDelivery = {proofDelivery}\r\n                    accessorialsFiles = {accessorialsFiles}\r\n                    handleFileChange={handleFileChange}\r\n                    rateConfirmationRef={rateConfirmationRef}\r\n                    proofDeliveryRef={proofDeliveryRef}\r\n                    accessorialsRef={accessorialsRef}\r\n                    state={state}\r\n                    rateConFile={form.rateConfirmation}\r\n                    podFile={form.proofDelivery}\r\n                    formAccessorialsFiles={form.accessorialsFiles}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        </LocalizationProvider>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n"],"sourceRoot":""}