{"version":3,"sources":["components/common/AuthContainer.js","components/Atoms/form/OTPInput.js","views/auth/ForgotPassword.js","components/Atoms/form/Switch.js","components/Atoms/UserMenu.js","components/Atoms/form/LoadingButton.js","components/Atoms/FullScreenLoader.js","hooks/useMutation.js","components/Atoms/Tooltip.js","components/Atoms/form/Input.js","components/layout/Spinner.js","components/Atoms/form/Password.jsx","components/Atoms/form/Select.js","components/Atoms/form/RadioButtons.js","components/Atoms/form/DateRangePicker.js","components/Atoms/Alert.js","actions/component.action.js","components/client/constants.js","../node_modules/@mui/icons-material/MailOutline.js","views/auth/utils.js"],"names":["Container","styled","_Grid","_ref","backgroundColor","boxShadow","AuthContainer","_ref2","children","alertConfig","rest","_jsxs","_jsx","item","sx","mb","CompanyText","style","pointer","xs","Alert","config","OTPInput","length","onChange","name","errors","otp","setOtp","useState","Array","fill","refs","useRef","errorText","handleChange","index","e","value","target","newOtp","substring","join","current","nextField","focus","prevField","onClick","setSelectionRange","useEffect","_FormControl","_FormLabel","error","fontSize","container","width","spacing","map","_TextField","bind","inputRef","ref","autoComplete","size","onKeyDown","handleKeyDown","key","concat","_FormHelperText","ChangePasswordForm","form","loading","_Fragment","Password","label","pass","confirmPass","m","LoadingButton","isLoading","type","loadingText","_Typography","component","Link","to","LOGIN_LINK","display","ForgotPassword","history","setForm","email","setErrors","isOtpSent","setIsOtpSent","alert","setAlert","open","message","severity","mutation","useMutation","changePasswordMutation","isChangingPassword","_ref3","comp","Input","InputProps","startAdornment","_InputAdornment","position","_MailOutline","className","verticalAlignStyle","direction","gap","px","py","onSubmit","preventDefault","isValid","err","validatePasswordsPreLogin","newPass","then","_ref5","success","data","notification","push","catch","isEmailValid","_ref4","_Switch","theme","height","padding","Switch","stringToColor","string","i","hash","charCodeAt","color","toString","slice","stringAvatar","userName","split","bgcolor","UserMenu","anchorElUser","setAnchorElUser","React","user","role","getUserDetail","dispatch","useDispatch","settings","title","changePasswordModal","logout","replace","onClose","callback","_Box","Tooltip","placement","_IconButton","event","currentTarget","p","_Avatar","_Menu","mt","MenuListProps","minWidth","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","flexDirection","fontWeight","variant","getRoleNameString","_Divider","setting","_MenuItem","textAlign","withRouter","memo","disabled","text","isDisabled","_Button","startIcon","_CircularProgress","undefined","FullScreenLoader","_Backdrop","zIndex","drawer","Spinner","url","arguments","showTriggers","options","setLoading","async","body","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","res","finally","BootstrapTooltip","props","MuiTooltip","arrow","classes","popper","tooltipClasses","palette","common","black","tooltip","proptype","PropTypes","isRequired","element","oneOf","InputFieldPure","handleBlur","hasError","readOnly","inputProps","helperText","fullWidth","formControlSx","onBlur","InputField","classNameRoot","isCapitalize","trimValue","capitalize","trim","max","min","_","isFunction","CircularIndeterminate","justifyContent","alignItems","marginLeft","CircularProgress","showPassword","setShowPassword","endAdornment","handleClickShowPassword","show","onMouseDown","edge","Visibility","VisibilityOff","func","Select","labelKey","valueKey","menuLabelCb","renderValue","showNone","required","items","useMemo","option","_InputLabel","_Select","labelId","border","array","object","node","bool","RadioButtonsGroupControlled","radioTitle","labelPlacement","defaultValue","alldisabled","displayAsRow","classNameGrp","radios","forEach","info","tooltipText","shouldDisplay","labelClassName","labelSx","Fragment","_Tooltip","_FormControlLabel","control","_Radio","componentsProps","typography","_RadioGroup","row","RadioButtonPure","RadioButtonsGroup","containerSx","parentValue","setValue","staticRanges","isSelected","range","startDate","startOfDay","Date","endDate","endOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","getDateString","s","moment","format","DateRangePicker","setOpen","setAnchorEl","selectionRange","setStartDate","setEndDate","textField","setTextField","togglePicker","_DateRange","_Popover","bottom","Picker","ranges","selection","classname","inStyles","alertProps","_Collapse","in","_Alert","showDelete","afterSuccessCb","stopPropagation","store","DELETE_COMPONENT","payload","removeDelete","getState","app","deleteComponent","CHANGE_PASSWORD","ROLE_NAMES","superAdmin","admin","ownerOperator","driver","support","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","validatePasswords","currentPass"],"mappings":"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","file":"static/js/13.f20997dc.chunk.js","sourcesContent":["import {styled} from \"@mui/material/styles\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {Alert} from \"../Atoms\";\r\nimport CompanyText from \"../Atoms/CompanyText\";\r\n\r\nconst Container = styled(Grid)(({}) => ({\r\n    backgroundColor: '#F7FAFC',\r\n    boxShadow: '0px 0px 80px rgba(34, 35, 58, 0.2)',\r\n}))\r\n\r\nconst AuthContainer = ({children, alertConfig ={}, ...rest}) => {\r\n    return <Container {...rest}>\r\n        <Grid item sx={{mb: 3}}>\r\n            <CompanyText style={{pointer: 'default'}}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Alert config={alertConfig}/>\r\n        </Grid>\r\n        {children}\r\n    </Container>\r\n}\r\n\r\nexport default AuthContainer;","import {useEffect, useRef, useState} from \"react\";\r\nimport {FormControl, FormHelperText, FormLabel, Grid, TextField} from \"@mui/material\";\r\n\r\nconst OTPInput = ({length = 6, onChange, name, errors={}}) => {\r\n    const [otp, setOtp] = useState(new Array(length).fill(''));\r\n    const refs = useRef([]),\r\n        errorText = errors[name];\r\n\r\n    const handleChange = (index, e) => {\r\n        const {value} = e.target;\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value.substring(value.length - 1);\r\n        setOtp(newOtp);\r\n        if(newOtp.join('').length === length){\r\n            onChange && onChange({value: newOtp.join(''), name})\r\n        }\r\n        //if next element exists then focus it.\r\n        if (newOtp[index] && index <= length-1 && refs.current[+index + 1]) {\r\n            const nextField = refs.current[+index + 1]\r\n            nextField && nextField.focus();\r\n        }\r\n        //if prev element exists focus on it.\r\n        else if(!newOtp[index]) {\r\n            if(index === 0){\r\n                return refs.current[0].focus()\r\n            }\r\n            const prevField = refs.current[+index - 1];\r\n            prevField && prevField.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const onClick = (index) => {\r\n        refs.current[index].setSelectionRange(1,1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (refs.current[0]) {\r\n            refs.current[0].focus()\r\n        }\r\n    }, [])\r\n\r\n    const handleKeyDown = (index, e) => {\r\n        if (e.key === 'Backspace' && index > 0 && !otp[index]) {\r\n            const prevField = refs.current[index - 1];\r\n            prevField && prevField.focus();\r\n        }\r\n    };\r\n\r\n    return <FormControl aria-autocomplete='none'>\r\n        <FormLabel error={!!errorText} sx={{fontSize: 14}}>OTP</FormLabel>\r\n        <Grid container width={'100%'} spacing={1}>\r\n            {otp.map((value, index) => {\r\n                return <Grid item xs={12 / length}>\r\n                    <TextField\r\n                        key={`${index}`}\r\n                        onClick={onClick.bind(this, index)}\r\n                        inputRef={ref => refs.current[index] = ref}\r\n                        value={value}\r\n                        onChange={handleChange.bind(this, index)}\r\n                        autoComplete='false'\r\n                        size='small'\r\n                        error={!!errorText}\r\n                        onKeyDown={(e) => handleKeyDown(index, e)}\r\n                        sx={{\r\n                            '.MuiInputBase-root': {\r\n                                width: 37\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        {errorText && <FormHelperText error={!!errorText}>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nexport default OTPInput;","import {Grid, InputAdornment, Typography} from \"@mui/material\";\r\nimport {MailOutline} from \"@mui/icons-material\";\r\nimport {Input, LoadingButton, Password} from \"../../components/Atoms\";\r\nimport {isEmailValid, verticalAlignStyle} from \"../../utils/utils\";\r\nimport {useState} from \"react\";\r\nimport AuthContainer from \"../../components/common/AuthContainer\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../../components/client/routes\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {validatePasswordsPreLogin} from \"./utils\";\r\nimport OTPInput from \"../../components/Atoms/form/OTPInput\";\r\n\r\nconst ChangePasswordForm = ({form, onChange, loading, errors}) => {\r\n    return <>\r\n        <Grid item xs={12}>\r\n            {/*<Input type='number' label='OTP' onChange={onChange} value={form.otp} name='otp' errors={errors}/>*/}\r\n            <OTPInput length={6} onChange={onChange} name='otp' errors={errors} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Password label='New Password' onChange={onChange} value={form.pass} name='pass' errors={errors}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Password label='Confirm Password' onChange={onChange} value={form.confirmPass} name='confirmPass'\r\n                      errors={errors} autoComplete={'false'}/>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{m: 'auto'}}>\r\n            <LoadingButton isLoading={loading} type='submit' loadingText='Please wait...'>Submit</LoadingButton>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{m: 'auto'}}>\r\n            <Typography component={Link} to={LOGIN_LINK} sx={{display: 'block'}}>Sign In</Typography>\r\n        </Grid>\r\n    </>\r\n}\r\nconst ForgotPassword = ({history}) => {\r\n    const [form, setForm] = useState({pass: '', confirmPass: '', email: '', otp: ''}),\r\n        [errors, setErrors] = useState({pass: '', confirmPass: '', email: '', otp: ''}),\r\n        [isOtpSent, setIsOtpSent] = useState(false),\r\n        [alert, setAlert] = useState({open: false, message: '', severity: 'error'}),\r\n        {mutation, loading} = useMutation('/api/forgotPassword'),\r\n        {mutation: changePasswordMutation, loading: isChangingPassword} = useMutation('/api/forgotPassword');\r\n\r\n    const onChange = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n        setErrors({...errors, [name]: ''})\r\n    }\r\n\r\n    const closeAlert = () => {\r\n        setAlert({...alert, open: false});\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        closeAlert();\r\n        e.preventDefault();\r\n        if (!isOtpSent) {\r\n            if (!isEmailValid(form.email)) {\r\n                return setErrors({...errors, email: 'Please enter valid Email'})\r\n            }\r\n            mutation({email: form.email}, 'post')\r\n                .then(({success, data}) => {\r\n                    if (success) {\r\n                        setIsOtpSent(true);\r\n                    } else {\r\n                        setAlert({...alert, open: true, message: data.message})\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setAlert({...alert, open: true, message: err.message})\r\n                })\r\n        } else {\r\n            const {confirmPass, pass, otp, email} = form;\r\n            const {isValid, err} = validatePasswordsPreLogin({confirmPass, pass, otp});\r\n            if (!isValid) {\r\n                return setErrors(err);\r\n            }\r\n            if (confirmPass !== pass) {\r\n                setAlert({...alert, open: true, message: 'Passwords do not match'})\r\n            } else {\r\n                changePasswordMutation({confirmPass, email, otp, newPass: form.pass}, 'put')\r\n                    .then(({success, data}) => {\r\n                        if (success) {\r\n                            notification(data?.message);\r\n                            history.push(LOGIN_LINK);\r\n                        } else {\r\n                            setAlert({...alert, open: true, message: data.message});\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        setAlert({...alert, open: true, message: err?.message || 'Error'})\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    let comp;\r\n    if (isOtpSent) {\r\n        comp = <ChangePasswordForm form={form} onChange={onChange} loading={isChangingPassword} errors={errors}/>\r\n    } else {\r\n        comp = <>\r\n            <Grid item xs={12}>\r\n                <Input\r\n                    label='Email'\r\n                    onChange={onChange}\r\n                    value={form.email}\r\n                    name='email'\r\n                    errors={errors}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">\r\n                            <MailOutline/>\r\n                        </InputAdornment>,\r\n                    }}/>\r\n            </Grid>\r\n            <Grid item xs={12} sx={{m: 'auto'}}>\r\n                <LoadingButton isLoading={loading} type='submit' loadingText='Please wait...'>Verify</LoadingButton>\r\n            </Grid>\r\n        </>\r\n    }\r\n\r\n    return <div className='auth-wrapper' style={verticalAlignStyle}>\r\n        <AuthContainer container direction='column' gap={2} px={8} py={4} component={'form'} onSubmit={onSubmit}\r\n                       alertConfig={alert}>\r\n            {comp}\r\n        </AuthContainer>\r\n    </div>\r\n}\r\n\r\nexport default ForgotPassword","import React from 'react';\r\nimport {FormControl, FormControlLabel, Switch as MuiSwitch} from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst SwitchStyled = styled(MuiSwitch)(({theme}) => ({\r\n        width: 50,\r\n        height: 27,\r\n        padding: 7,\r\n        '& .MuiSwitch-switchBase': {\r\n\r\n        },\r\n        '& .MuiSwitch-thumb': {\r\n            width: 20,\r\n            height: 20,\r\n            '&:before': {\r\n\r\n            }\r\n        },\r\n        '&.MuiSwitch-track': {\r\n\r\n        }\r\n    })\r\n)\r\n\r\nconst Switch = ({label, name, placement = 'start', value, onChange, disabled, sx, shouldDisplay = true}) => {\r\n    const handleChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        if (onChange) onChange({name, value: checked});\r\n    }\r\n\r\n    return <FormControl component='fieldset' sx={{display: shouldDisplay ? 'inline' : 'none', ...sx}}>\r\n        <FormControlLabel\r\n            control={<SwitchStyled\r\n                color={'primary'}\r\n                onChange={handleChange}\r\n                checked={!!value}\r\n                name={name}\r\n            />}\r\n            label={label}\r\n            labelPlacement={placement}\r\n            disabled={disabled}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nexport default Switch;","import {Avatar, Box, Divider, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {Tooltip} from \"./index\";\r\nimport React, {memo} from 'react'\r\nimport {getUserDetail} from \"../../utils/utils\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../constants\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {changePasswordModal} from \"../../actions/component.action\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    let userName = ''\r\n    if (!!name.split(' ')[0]) {\r\n        userName = (name.split(' ')[0][0])\r\n    }\r\n    if (!!name.split(' ') && name.split(' ')[1]) {\r\n        userName += (name.split(' ')[1][0]);\r\n    }\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: userName\r\n    };\r\n}\r\n\r\nconst UserMenu = ({history}) => {\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const {user: {name = '', email = '', role = ''} = {}} = getUserDetail();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = [\r\n        {title: 'Change Password', onClick: handlePasswordChange},\r\n        {title: 'Logout', onClick: onLogout},\r\n    ];\r\n\r\n    function handlePasswordChange() {\r\n        changePasswordModal(true);\r\n    }\r\n\r\n    const onOpen = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const onClose = (callback) => {\r\n        setAnchorElUser(null);\r\n        if (typeof callback === 'function') callback();\r\n    };\r\n\r\n    function onLogout() {\r\n        dispatch(logout());\r\n        history.replace(LOGIN_LINK);\r\n    }\r\n\r\n    return <Box>\r\n        <Tooltip title=\"Open settings\" placement='bottom'>\r\n            <IconButton onClick={onOpen} sx={{p: 0}}>\r\n                <Avatar {...stringAvatar(name || '')} />\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            sx={{mt: '45px'}}\r\n            MenuListProps={{\r\n                sx: {\r\n                    minWidth: '8em'\r\n                }\r\n            }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorElUser}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorElUser)}\r\n            onClose={onClose.bind(null)}\r\n        >\r\n            <Box sx={{px: 2, py: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontWeight={600}>{name || 'No Name'}</Typography>\r\n                <Typography variant='caption'>{email}</Typography>\r\n                <Typography variant='caption'>{getRoleNameString(role)}</Typography>\r\n            </Box>\r\n            <Divider/>\r\n            {settings.map((setting) => (\r\n                <MenuItem key={setting.title} onClick={onClose.bind(null, setting.onClick)}>\r\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                </MenuItem>\r\n            ))}\r\n        </Menu>\r\n    </Box>\r\n}\r\n\r\nexport default withRouter(memo(UserMenu, () => true))","import { Button, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoadingButton = ({ children, variant = 'contained', isLoading = false, loadingText, disabled, ...rest }) => {\r\n    const text = isLoading ? !!loadingText ? loadingText: children : children\r\n    const isDisabled = isLoading || disabled;\r\n    return (\r\n        <Button\r\n            disabled={isDisabled}\r\n            variant={variant}\r\n            {...rest}\r\n            startIcon={isLoading ? <CircularProgress size={20} color='inherit' /> : undefined}\r\n        >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nLoadingButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\r\n    loadingText: PropTypes.string\r\n}\r\n\r\nexport default LoadingButton","import Spinner from \"../layout/Spinner\";\r\nimport {Backdrop} from \"@mui/material\";\r\n\r\nconst FullScreenLoader = ({color = 'inherit'}) => {\r\n    return <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={true}\r\n    >\r\n        <Spinner sx={{color}} />\r\n    </Backdrop>\r\n}\r\n\r\nexport default FullScreenLoader;","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import MuiTooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport {styled} from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }) => (\r\n    <MuiTooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default function Tooltip({title, children, placement=\"right\", ...props}) {\r\n    return (\r\n        <BootstrapTooltip title={title} placement={placement} {...props}>\r\n            <span>{children}</span>\r\n        </BootstrapTooltip>\r\n    );\r\n}\r\n\r\nTooltip.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    placement: PropTypes.oneOf(['right', 'left', 'bottom', 'top'])\r\n}","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            formControlSx,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth} sx={formControlSx}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, formControlSx = {}, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            formControlSx={formControlSx}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, onBlur, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = e => {\r\n        const {name, value} = e.target\r\n        if(onBlur){\r\n            onBlur({name, value})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","import {FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst Select = ({ options = [], labelKey = 'label', valueKey = 'id', label, menuLabelCb, value, name, onChange, errors={},\r\n                    renderValue = null, showNone=false, className='',disabled=false, required=false }) => {\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n    const items = useMemo(() => {\r\n        return (options || []).map(item => {\r\n            return <MenuItem value={item[valueKey]} key={item[valueKey]} disabled={!!item['disabled']}>\r\n                {menuLabelCb ? menuLabelCb({labelKey, option: item}) : item[labelKey]}\r\n            </MenuItem>\r\n        })\r\n    }, [options])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if(onChange){\r\n            onChange({name, value});\r\n        }\r\n    }\r\n\r\n    return  <FormControl required={required} error={hasError} fullWidth size='small' className={className} disabled={disabled}>\r\n        <InputLabel id=\"demo-simple-select-error-label\">{label}</InputLabel>\r\n        <MuiSelect\r\n            name={name}\r\n            labelId=\"demo-simple-select-error-label\"\r\n            id=\"demo-simple-select-error\"\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            renderValue={renderValue}\r\n            sx={{\r\n                '.MuiOutlinedInput-input': {\r\n                    border: 'none !important'\r\n                }\r\n            }}\r\n        >\r\n            {showNone && <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>}\r\n            {items}\r\n        </MuiSelect>\r\n        {hasError && <FormHelperText>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nSelect.proptype = {\r\n    options: PropTypes.array.isRequired,\r\n    labelKey: PropTypes.string,\r\n    valueKey: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    renderValue: PropTypes.node,\r\n    className: PropTypes.string,\r\n    showNone: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    menuLabelCb: PropTypes.func\r\n}\r\n\r\nexport default Select;","import {Fragment, memo, useState} from \"react\";\r\nimport {FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Tooltip} from \"@mui/material\";\r\n\r\nconst RadioButtonsGroupControlled = (props) => {\r\n    const {\r\n        name, value, handleChange, radioTitle, options = [], labelPlacement = 'end',\r\n        className, defaultValue, disabled: alldisabled = false, displayAsRow = true, classNameGrp = ''\r\n    } = props;\r\n\r\n    let radios = []\r\n    options.forEach((option, i) => {\r\n        const {\r\n            label = '',\r\n            value,\r\n            info,\r\n            tooltipText = '',\r\n            shouldDisplay = true,\r\n            disabled = false,\r\n            labelClassName = '',\r\n            labelSx = {}\r\n        } = option;\r\n        if (shouldDisplay && shouldDisplay === 'function') {\r\n            const show = shouldDisplay(props)\r\n            if (!show) return;\r\n        }\r\n        radios.push(\r\n            <Fragment key={i}>\r\n                <Tooltip title={tooltipText} arrow>\r\n                    <FormControlLabel\r\n                        control={<Radio/>}\r\n                        label={label}\r\n                        disabled={alldisabled || disabled}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        className={labelClassName ? `${labelClassName} ${className}` : className}\r\n                        role='radio'\r\n                        componentsProps={{\r\n                            typography: {\r\n                                sx: labelSx\r\n                            }\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                {info && <span className='radioInfo'>{info}</span>}\r\n            </Fragment>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>{radioTitle}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={radioTitle}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                row={displayAsRow}\r\n                defaultValue={defaultValue}\r\n                className={classNameGrp}\r\n            >\r\n                {radios}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst RadioButtonPure = memo(RadioButtonsGroupControlled)\r\n\r\nconst RadioButtonsGroup = ({config = {}, onChange, containerSx, parentValue}) => {\r\n    const {title, options = [], defaultValue = '', ...rest} = config;\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value, type} = {}} = e;\r\n        setValue(value);\r\n        if (onChange) onChange({value, name, type});\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={containerSx}>\r\n            <RadioButtonPure\r\n                handleChange={handleChange}\r\n                value={parentValue || value}\r\n                radioTitle={title}\r\n                options={options}\r\n                {...rest}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioButtonsGroup","import { DateRangePicker as Picker } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport { endOfDay, startOfDay, startOfWeek, startOfMonth, startOfQuarter, startOfYear } from 'date-fns'\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport React, { Fragment, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    InputAdornment,\r\n    IconButton,\r\n    Popover,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { DateRange } from \"@mui/icons-material\";\r\nimport './dateRangePicker.css'\r\n\r\nconst staticRanges = [\r\n    {\r\n        label: 'Today',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfDay(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Week',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfWeek(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Month',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfMonth(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Quarter',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfQuarter(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Year',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfYear(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    }\r\n]\r\n\r\nconst getDateString = (s, e) => {\r\n    return moment(s).format('MM/DD/YYYY') + ' - ' + moment(e).format('MM/DD/YYYY')\r\n}\r\n\r\nconst DateRangePicker = ({ value, onChange, label, name }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const id = open && Boolean(anchorEl) ? 'transition-popper' : undefined;\r\n    const [selectionRange, setSelectionRange] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [textField, setTextField] = useState(getDateString())\r\n\r\n    function handleSelect(ranges) {\r\n        const { selection: { startDate, endDate } = {} } = ranges;\r\n        setStartDate(() => startDate)\r\n        setEndDate(() => endDate)\r\n        setTextField(getDateString(startDate, endDate))\r\n        setSelectionRange({ startDate, endDate, key: 'selection' })\r\n        if (onChange) onChange({ name, value: { startDate, endDate } })\r\n    }\r\n\r\n\r\n    const togglePicker = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                name={name}\r\n                value={textField}\r\n                label={label}\r\n                size={'small'}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle Date range picker\"\r\n                            onClick={togglePicker}\r\n                            edge=\"end\"\r\n                            aria-describedby={id}\r\n                        >\r\n                            <DateRange />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n                readOnly\r\n            />\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={togglePicker} anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    bgcolor: 'background.paper',\r\n                    '&.rdrStaticRangeLabel': { fontSize: \"14px!important\" },\r\n                    '& .rdrDayNumber span::after': {\r\n                        bottom: '1px !important'\r\n                    }\r\n                }}\r\n                >\r\n                    <Picker\r\n                        ranges={[selectionRange]}\r\n                        onChange={handleSelect}\r\n                        className={'basePicker'}\r\n                        staticRanges={staticRanges}\r\n                    />\r\n                </Box>\r\n            </Popover>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DateRangePicker","import {Collapse, Alert as MuiAlert} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Alert = ({config, classname='', onClose = undefined, inStyles = {}}) => {\r\n    const {open, message = '', severity = '', variant = 'standard'} = config;\r\n\r\n    const alertProps = {\r\n        severity: severity || undefined,\r\n        variant\r\n    }\r\n    if(typeof onClose === 'function'){\r\n        alertProps.onClose = onClose;\r\n    }\r\n\r\n    return <Collapse in={open} sx={inStyles}>\r\n        <MuiAlert className={'alertbase ' + classname} {...alertProps}>\r\n            {message}\r\n        </MuiAlert>\r\n    </Collapse>\r\n}\r\n\r\nexport default Alert;","import store from \"../store\";\r\nimport {CHANGE_PASSWORD, DELETE_COMPONENT} from \"./types\";\r\n\r\n\r\nconst showDelete = ({message, uri, afterSuccessCb}) => (e) => {\r\n    e.stopPropagation();\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {open: true, message, uri, afterSuccessCb}})\r\n}\r\n\r\nconst removeDelete = () => {\r\n    const data = store.getState().app.deleteComponent;\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {...data, open: false}})\r\n}\r\n\r\nconst changePasswordModal = (open) => {\r\n    store.dispatch({type: CHANGE_PASSWORD, payload: { open }})\r\n}\r\n\r\nexport {\r\n    showDelete,\r\n    removeDelete,\r\n    changePasswordModal\r\n}","const ROLE_NAMES = {\r\n    superAdmin: 'Super Admin',\r\n    dispatch: 'Dispatch',\r\n    admin: 'Admin',\r\n    ownerOperator: 'Owner Operator',\r\n    driver: 'Driver',\r\n    support: 'Support',\r\n}\r\n\r\nexport const getRoleNameString = function (role) {\r\n    return ROLE_NAMES[role] || role;\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\nexports.default = _default;","const validatePasswords = (currentPass, pass, confirmPass) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!currentPass) {\r\n        isValid = false\r\n        err.currentPass = 'Please enter Current Password'\r\n    }\r\n    if (!pass) {\r\n        err.pass = 'Please enter Password'\r\n        isValid = false\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    return {isValid, err};\r\n}\r\n\r\nconst validatePasswordsPreLogin = ({pass, confirmPass, otp}) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!pass) {\r\n        isValid = false\r\n        err.pass = 'Please enter Password'\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    if (!otp) {\r\n        isValid = false;\r\n        err.otp = 'Please enter OTP'\r\n    }\r\n\r\n    return {isValid, err};\r\n}\r\n\r\nexport {\r\n    validatePasswords,\r\n    validatePasswordsPreLogin\r\n}"],"sourceRoot":""}