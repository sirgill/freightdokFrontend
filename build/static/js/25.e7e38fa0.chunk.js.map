{"version":3,"sources":["views/ownerOperator/FormModal.js","views/ownerOperator/OwnerOperator.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","hooks/useFetch.js","hooks/useEnhancedFetch.js"],"names":["formTemplate","firstName","lastName","phone","FormModal","props","history","match","params","id","onCloseUrl","form","setForm","React","useState","errors","setErrors","mutation","loading","useMutation","isFetching","data","useFetch","ownerOpData","updateForm","_ref2","name","value","useEffect","onBlur","_ref3","afterSubmit","_ref4","success","message","triggerCustomEvent","notification","handleClose","push","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","PaperProps","sx","width","children","DialogTitle","color","blue","textAlign","fontWeight","letterSpacing","_jsx","DialogContent","Grid","container","component","noValidate","direction","rowSpacing","p","item","xs","Input","label","onChange","disabled","required","LoadingButton","type","onClick","e","preventDefault","body","_ref","validateForm","_","isEmpty","isLoading","loadingText","OwnerOperator","path","useRouteMatch","edit","delete","canDelete","UserSettings","getUserPermissionsByDashboardId","queryData","isRefetching","refetch","page","limit","onLimitChange","onPageChange","useEnhancedFetch","totalCount","useHistory","fetchOwnerOp","addEvent","window","removeEvent","afterDelete","tableConfig","rowCellPadding","showRefresh","emptyMessage","count","onPageSizeChange","columns","emptyState","renderer","Fragment","row","_Button","variant","stopPropagation","concat","_id","mr","showDelete","uri","afterSuccessCb","EnhancedTable","config","onRefetch","Route","render","CircularIndeterminate","_Box","height","display","justifyContent","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","StyledStack","Stack","flexWrap","TablePagination","length","setLength","Array","isArray","Typography","fontSize","Select","options","className","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","isFunction","bgcolor","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","_IconButton","bind","cell","i","valueFormatter","get","hover","cursor","getTableCell","_ref6","actions","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","useRef","Actions","isValidElement","_Fragment","url","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","style","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","callback","arguments","setData","setLoading","error","setError","setIsRefetching","requestCall","queryParams","serialize","requestGet","showTriggers","then","result","finally","showPagination","pageOptions","setPageOptions","object"],"mappings":"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","file":"static/js/25.e7e38fa0.chunk.js","sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport _ from 'lodash';\r\nimport {blue} from \"../../components/layout/ui/Theme\";\r\nimport Grid from '@mui/material/Grid'\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {triggerCustomEvent} from \"../../utils/utils\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {Input, LoadingButton} from \"../../components/Atoms\";\r\n\r\nconst validateForm = ({firstName, lastName, phone}) => {\r\n    let errors = {}\r\n    if (!firstName) {\r\n        errors.firstName = 'Please provide the First Name'\r\n    }\r\n    if (!lastName) {\r\n        errors.lastName = 'Please provide the Last Name'\r\n        // return [false, 'Please provide the Last Name', 'lastName']\r\n    }\r\n    if (!phone) {\r\n        errors.phone = 'Please provide the Phone Number'\r\n    }\r\n    return errors\r\n}\r\nconst formTemplate = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n}\r\n\r\n\r\nconst FormModal = (props) => {\r\n    const {history, match: {params: {id = ''} = {}} = {}, onCloseUrl} = props;\r\n    const [form, setForm] = React.useState(formTemplate);\r\n    const [errors, setErrors] = useState(formTemplate);\r\n    const {mutation, loading} = useMutation(\"/api/ownerOperator\"),\r\n        {loading: isFetching, data} = useFetch(\"/api/ownerOperator/\" + id),\r\n        {data: ownerOpData} = data || {};\r\n\r\n    const updateForm = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerOpData) {\r\n            setForm(ownerOpData);\r\n        }\r\n    }, [ownerOpData])\r\n\r\n    const onBlur = ({name, value}) => {\r\n        if (value) {\r\n            setErrors({...errors, [name]: ''});\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = {...form};\r\n        const errors = validateForm(body);\r\n        if (_.isEmpty(errors)) {\r\n            mutation(body, null, afterSubmit);\r\n        } else {\r\n            setErrors({...errors})\r\n        }\r\n    };\r\n\r\n    const afterSubmit = ({success, data}) => {\r\n        const {message} = data || {};\r\n        if (success) {\r\n            triggerCustomEvent('refreshOwnerOp');\r\n            notification(message || 'Owner operator created');\r\n            handleClose();\r\n        } else {\r\n            notification(message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        history.push(onCloseUrl);\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={false}\r\n            maxWidth={\"md\"}\r\n            open={true}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                sx: {\r\n                    width: 400\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" sx={{\r\n                color: blue,\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: 1\r\n            }}>\r\n                {id ? \"Edit\" : 'Add'} Owner Operator\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container component='form' noValidate direction='column' rowSpacing={3} p={1}>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Input\r\n                                name={\"firstName\"}\r\n                                label={\"First Name\"}\r\n                                onChange={updateForm}\r\n                                value={form.firstName || ''}\r\n                                errors={errors}\r\n                                onBlur={onBlur}\r\n                                fullWidth\r\n                                disabled={isFetching || loading}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"lastName\"}\r\n                            label={\"Last Name\"}\r\n                            onChange={updateForm}\r\n                            value={form.lastName || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"phone\"}\r\n                            label={\"Phone Number\"}\r\n                            onChange={updateForm}\r\n                            value={form.phone || ''}\r\n                            onBlur={onBlur}\r\n                            errors={errors}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            onClick={onSubmit}\r\n                            isLoading={loading || isFetching}\r\n                            loadingText={loading ? 'Updating...' : isFetching ? 'Please wait...' : null}\r\n                        >\r\n                            Update\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FormModal","import React, {Fragment, useEffect} from \"react\";\r\nimport {Button} from \"@mui/material\";\r\nimport {Route, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport FormModal from \"./FormModal\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useEnhancedFetch from \"../../hooks/useEnhancedFetch\";\r\n\r\n\r\nconst OwnerOperator = () => {\r\n  const { path } = useRouteMatch(),\r\n      {edit, delete: canDelete} = UserSettings.getUserPermissionsByDashboardId('ownerOperator'),\r\n          {data: queryData = {}, isRefetching, loading, refetch, page, limit, onLimitChange, onPageChange} = useEnhancedFetch('/api/ownerOperator', {\r\n          page: 1, limit: 10\r\n      }),\r\n      {data, totalCount} = queryData || {},\r\n    history = useHistory();\r\n\r\n  function fetchOwnerOp() {\r\n      refetch();\r\n  }\r\n\r\n  useEffect(() => {\r\n      addEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n\r\n      return () => removeEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n  }, [])\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            fetchOwnerOp()\r\n        }\r\n    }\r\n\r\n\r\n  const tableConfig = {\r\n    rowCellPadding: \"inherit\",\r\n    showRefresh: true,\r\n    emptyMessage: \"No Owner Operator Found\",\r\n    count: totalCount,\r\n      page,\r\n      limit,\r\n      onPageSizeChange: onLimitChange,\r\n      onPageChange,\r\n    columns: [\r\n      {\r\n        id: \"firstName\",\r\n        label: \"First Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"lastName\",\r\n        label: \"Last Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"role\",\r\n        label: \"Role\",\r\n        renderer: () => {\r\n          return <Fragment>Owner Operator</Fragment>;\r\n        },\r\n      },\r\n        {\r\n            id: 'email',\r\n            label: 'Email'\r\n        },\r\n      {\r\n        id: \"update\",\r\n        renderer: ({ row }) => {\r\n          return (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  history.push(path + `/edit/${row._id}`);\r\n                }}\r\n                sx={{mr: 1}}\r\n                disabled={!edit}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color={'error'}\r\n                  onClick={showDelete({\r\n                      uri: \"/api/ownerOperator/\"+ row._id,\r\n                      message: 'Are you sure you want to delete this Owner Operator?',\r\n                      afterSuccessCb: afterDelete\r\n                  })}\r\n                  disabled={!canDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Fragment>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <EnhancedTable\r\n        config={tableConfig}\r\n        data={data}\r\n        loading={loading}\r\n        isRefetching={isRefetching}\r\n        onRefetch={refetch}\r\n      />\r\n        {/*<Button*/}\r\n        {/*    variant='contained'*/}\r\n        {/*    component={Link}*/}\r\n        {/*    to={path + '/add'}*/}\r\n        {/*    className={'addNewOwnerOp'}*/}\r\n        {/*    sx={{position: 'absolute', right: 10}}*/}\r\n        {/*>*/}\r\n        {/*    Add Owner Operator*/}\r\n        {/*</Button>*/}\r\n      <Route path={path + \"/add\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n      <Route path={path + \"/edit/:id\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnerOperator;\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, []);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useEnhancedFetch = (url, options = {}, callback = null) => {\r\n    const {showPagination = true, page, limit} = options,\r\n        [data, setData] = useState(undefined);\r\n    const [pageOptions, setPageOptions] = useState({page: (page || 1), limit: (limit || 10)});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false)\r\n\r\n    function requestCall(object) {\r\n        const {page, limit} = object || {};\r\n        let uri = url;\r\n        if(showPagination){\r\n            if(page && limit){\r\n                setPageOptions({page, limit})\r\n            }\r\n            uri = `${uri}?page=${page || pageOptions.page}&limit=${limit || pageOptions.limit}`\r\n        }\r\n        if (options.queryParams) {\r\n            uri = `${uri}&${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    const onLimitChange = ({value}) => {\r\n        // setPageOptions({...pageOptions, limit: value});\r\n        requestCall({limit: value, page: pageOptions.page})\r\n    }\r\n\r\n    const onPageChange = (e, pgNum) => {\r\n        // setPageOptions({...pageOptions, page: pgNum});\r\n        requestCall({page: pgNum, limit: pageOptions.limit})\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall({page, limit: pageOptions.limit});\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching,\r\n        onLimitChange, onPageChange, ...pageOptions\r\n    }\r\n}\r\n\r\nexport default useEnhancedFetch;"],"sourceRoot":""}