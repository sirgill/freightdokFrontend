{"version":3,"sources":["components/users/UsersList.js"],"names":["UsersList","_useSelector","useSelector","state","users","list","loading","page","limit","total","user","auth","dispatch","useDispatch","afterDelete","_ref","success","fetchUsers","useEffect","allowedRolesForDispatch","ROLES","admin","superadmin","config","emptyMessage","count","onPageChange","event","newPage","rowCellPadding","columns","id","label","emptyState","renderer","_ref2","_ref2$row$name","row","name","_ref3","_ref3$row","_ref3$row2","_id","email","role","userRole","_jsxs","Fragment","children","includes","_jsx","_Button","variant","sx","mr","onClick","selectUserToEdit","color","showDelete","message","uri","concat","afterSuccessCb","EnhancedTable","data","_Box","display","justifyContent","UserForm"],"mappings":"kMAwGeA,UA/FG,WACd,IAAAC,EAA8CC,aAC1C,SAACC,GAAK,OAAKA,EAAMC,KAAK,IADlBC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QAASC,EAAIN,EAAJM,KAAMC,EAAKP,EAALO,MAAOC,EAAKR,EAALQ,MAG5BC,EAASR,aAAY,SAACC,GAAK,OAAKA,EAAMQ,IAAI,IAA1CD,KACFE,EAAWC,cAGXC,EAAc,SAAHC,GAAYA,EAAPC,SAEdJ,EAASK,aAAYV,GAAOC,GAEpC,EAGAU,qBAAU,WACNN,EAASK,aAAYV,GAAOC,GAChC,GAAG,CAACI,IAEJ,IASMO,EAA0B,CAC5BC,IAAMR,SACNQ,IAAMC,MACND,IAAME,YAGJC,EAAS,CACXC,aAAc,WACdjB,OACAkB,MAAOhB,EACPD,QACAkB,aApBqB,SAACC,EAAOC,GAC7BhB,EAASK,YAAWW,EAAU,GAAIpB,GACtC,EAmBIqB,eAAgB,SAChBC,QAAS,CACL,CACIC,GAAI,OACJC,MAAO,OACPC,WAAY,KACZC,SAAU,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,IAAOC,KAAS,YAAL,IAAAF,EAAG,GAAEA,CAAa,GAE9C,CACIL,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,UACJC,MAAO,UACPE,SAAU,SAAAK,GAAyD,IAADC,EAAAD,EAArDF,IAAGI,OAAA,IAAAD,EAAyB,CAAC,EAACA,EAAvBE,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAmBC,EAAQN,EAAdK,KAEzC,OAAOE,eAACC,WAAQ,CAAAC,SAAA,CACX7B,EAAwB8B,SAASJ,IAC1BK,cAAAC,IAAA,CAAQC,QAAQ,YAAYC,GAAI,CAACC,GAAI,GAAIC,QAAS,WAC9C3C,EAAS4C,YAAiB,CAAEd,MAAKC,QAAOC,SAC5C,EAAEI,SAAC,WAKVtC,GACG,CAACU,IAAMC,MAAOD,IAAME,YAAY2B,SAASvC,EAAKkC,OAC9CM,cAAAC,IAAA,CAAQC,QAAQ,YAAYK,MAAM,QAAQF,QAAS,kBAAMG,YAAW,CAChEC,QAAS,4CACTC,IAAI,cAADC,OAAgBnB,GACnBoB,eAAgBhD,GAClB,EAACkC,SAAC,aAIhB,KAKZ,OACIF,eAACC,WAAQ,CAAAC,SAAA,CACLE,cAACa,IAAa,CAACzD,QAASA,EAAS0D,KAAM3D,EAAMkB,OAAQA,IACrD2B,cAAAe,IAAA,CAAKZ,GAAI,CAACa,QAAS,OAAQC,eAAgB,YAAYnB,SACnDE,cAACkB,IAAQ,QAIzB,C","file":"static/js/9.51a50d16.chunk.js","sourcesContent":["import React, {Fragment, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers, selectUserToEdit } from \"../../actions/users\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\nimport {ROLES} from \"../constants\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\n\r\nconst UsersList = () => {\r\n    const { list, loading, page, limit, total } = useSelector(\r\n        (state) => state.users\r\n    );\r\n    const { user } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            dispatch(fetchUsers(+page, +limit));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers(+page, +limit));\r\n    }, [dispatch]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(fetchUsers(newPage - 1, +limit));\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const new_limit = event.target.value;\r\n        dispatch(fetchUsers(0, new_limit));\r\n    };\r\n\r\n    const allowedRolesForDispatch = [\r\n        ROLES.dispatch,\r\n        ROLES.admin,\r\n        ROLES.superadmin,\r\n    ];\r\n\r\n    const config = {\r\n        emptyMessage: 'No Users',\r\n        page,\r\n        count: total,\r\n        limit,\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'normal',\r\n        columns: [\r\n            {\r\n                id: 'name',\r\n                label: 'Name',\r\n                emptyState: '--',\r\n                renderer: ({ row: { name = '' } }) => name\r\n            },\r\n            {\r\n                id: 'email',\r\n                label: 'Email'\r\n            },\r\n            {\r\n                id: 'role',\r\n                label: 'Role'\r\n            },\r\n            {\r\n                id: 'actions',\r\n                label: 'Actions',\r\n                renderer: ({ row: { _id, email, role } = {}, role: userRole }) => {\r\n                    // onDelete.bind(this, _id)\r\n                    return <Fragment>\r\n                        {allowedRolesForDispatch.includes(userRole) && (\r\n                                <Button variant='contained' sx={{mr: 1}} onClick={() => {\r\n                                    dispatch(selectUserToEdit({ _id, email, role }))\r\n                                }}>\r\n                                    Update\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        {user &&\r\n                            [ROLES.admin, ROLES.superadmin].includes(user.role) &&\r\n                            <Button variant='contained' color='error' onClick={() => showDelete({\r\n                                message: 'Are you sure you want to delete the user?',\r\n                                uri: `/api/users/${_id}`,\r\n                                afterSuccessCb: afterDelete\r\n                            })}>\r\n                                Delete\r\n                            </Button>}\r\n                    </Fragment>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <EnhancedTable loading={loading} data={list} config={config} />\r\n            <Box sx={{display :'flex', justifyContent: 'flex-end'}}>\r\n                <UserForm />\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n"],"sourceRoot":""}