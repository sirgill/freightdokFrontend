{"version":3,"sources":["views/ownerOperator/Modal.js","actions/openBoard.action.js","views/openBoard/NewTrulLoadDetails.js","views/openBoard/PickupDetails.js","views/openBoard/LoadDetails.js"],"names":["BootstrapDialog","styled","Dialog","_ref","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","showClose","other","_objectWithoutProperties","_excluded","_jsxs","DialogTitle","_objectSpread","sx","m","p","textAlign","_jsx","IconButton","onClick","position","left","top","color","palette","grey","CloseIcon","Modal","_props$config","config","_config$title","title","_config$closeUrl","closeUrl","_config$showClose","okButtonText","_config$onOk","onOk","_config$paperProps","_","noop","paperProps","_config$maxWidth","maxWidth","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","handleClose","Transition","useMemo","ref","history","useHistory","_Zoom","onExited","push","TransitionComponent","PaperProps","id","DialogContent","dividers","borderTop","bidChRobinsonLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadNumber","body","callback","response","data","success","wrap","_context","prev","next","axios","post","getGoUrl","concat","sent","abrupt","t0","console","log","stop","_x","_x2","_x3","apply","arguments","bookChRobinsonLoad","_ref2","_callee2","_context2","_x4","_x5","_x6","placeNewTrulBid","_ref3","_callee3","_yield$requestPost","_yield$requestPost2","_success","_data","_context3","requestPost","uri","loadDetail","baseUrl","notification","status","message","_x7","_x8","_x9","placeNewTrulCounterOffer","_callee4","_yield$requestPost3","_context4","newTrulFinalOffer","_callee5","_yield$requestPost4","_context5","saveCHLoadToDb","_ref9","_callee8","row","isBooked","payload","_args8","_context8","length","undefined","getBaseUrl","getNewLoads","filters","_ref12","_callee11","dispatch","_yield$requestPost6","_yield$requestPost6$d","_context11","type","GET_SHIPMENTS","results","totalResults","loading","getBabylonianServerUrl","_x13","LeftDetails","_ref2$stops","state","stops","_stops","_stops$","_stops$$geo","geo","early_datetime","late_datetime","appointment_required","city","stateCode","Details","location","date","moment","format","appointment","avgLoadTime","loadBy","loadByType","RightDetails","_ref4","_state$stops","_ref5","_ref6$","_ref6$$geo","_ref7","NewTrulLoadDetails","_props$location","_props$location2$stat","_props$callDetail","callDetail","isSizeSm","_useMediaQuery","loaded_miles","weight","equipment","_state$client","client","_state$client2","_state$client2$compli","compliance_link","client_name","postDetailToNewTrul","useCallback","CARRIER_EMAIL","MC_NUMBER","useEffect","_Grid","container","gap","item","xs","_Typography","align","variant","BasicLoadDetails","trip","fontSize","justifyContent","sm","className","ArrowDownwardIcon","ArrowForwardIcon","textDecoration","component","href","target","_ref$title","_ref$location","name","_ref$type","_ref$appointment","_ref$avgLoadTime","_Fragment","_Stack","direction","mr","Typo","_ref$label","label","_ref$value","value","_ref$labelSx","labelSx","formatTimeZone","timeDate","tz","utcOffset","_ref2$loadNumber","_ref2$equipment","_Box","display","alignItems","LoadDetails","_getParsedLoadEquipme","getParsedLoadEquipment","_getParsedLoadEquipme2","modesString","_getParsedLoadEquipme3","standard","_data$loadNumber","_data$distance","distance","_data$distance2$miles","miles","_data$weight","_data$weight2$pounds","pounds","_data$origin","origin","_data$origin2","_data$origin2$name","_data$origin2$postalC","postalCode","_data$origin2$city","pickupScheduleRequest","_data$destination","destination","_data$destination2","_data$destination2$na","destinationName","destinationStateCode","_data$destination2$po","destinationPostal","_data$destination2$ci","destinationCity","_data$destination2$sc","scheduleRequest","dropScheduleRequest","_data$pickUpByDate","pickUpByDate","_data$deliverBy","deliverBy","_data$calculatedPickU","calculatedPickUpByDateTime","_data$calculatedDeliv","calculatedDeliverByDateTime","_data$stops","timeZonePickup","_tzm","timeZoneDeliveryBy","originDetails","calculatedArriveByEndDateTime","calculatedArriveByStartDateTime","originReadyByRange","destinationDetails","destEndDateTime","destStartDateTime","deliverByRange"],"mappings":"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","file":"static/js/0.cf5ab485.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Zoom } from \"@mui/material\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose,showClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center' }} {...other}>\r\n      {showClose ? (\r\n          <IconButton\r\n              aria-label=\"close\"\r\n              onClick={onClose}\r\n              sx={{\r\n                position: \"absolute\",\r\n                left: 8,\r\n                top: 8,\r\n                color: (theme) => theme.palette.grey[500],\r\n              }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n      ) : null}\r\n      {children}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n  const { config = {}, children } = props,\r\n    {\r\n      title = \"\",\r\n      closeUrl = \"\",\r\n      okButtonText = \"Save\",\r\n      showClose = true,\r\n      onOk = _.noop(),\r\n      paperProps = {},\r\n      maxWidth='xl'\r\n    } = config;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onOkHandler = () => {\r\n    if (_.isFunction(onOk)) {\r\n      onOk();\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const Transition = useMemo(() => {\r\n    return React.forwardRef(function Transition(props, ref) {\r\n      const history = useHistory();\r\n      return (\r\n        <Zoom\r\n          ref={ref}\r\n          {...props}\r\n          onExited={() => {\r\n            return history.push(closeUrl || \"/dashboard\");\r\n          }}\r\n        />\r\n      );\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        maxWidth={maxWidth}\r\n        TransitionComponent={Transition}\r\n        PaperProps={paperProps}\r\n      >\r\n        {title && <BootstrapDialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={handleClose}\r\n            showClose={showClose}\r\n        >\r\n          {title}\r\n        </BootstrapDialogTitle>}\r\n        <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n        {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n      </BootstrapDialog>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { notification } from \"./alert\";\r\nimport { GET_CHROBINSON_LOADS, GET_SHIPMENTS } from \"./types\";\r\nimport { getBabylonianServerUrl, getBaseUrl, getGoUrl } from \"../config\";\r\nimport { requestGet, requestPost } from \"../utils/request\";\r\n\r\nexport const bidChRobinsonLoad = async (loadNumber, body, callback) => {\r\n    try {\r\n        const response = await axios.post(getGoUrl() + '/CHBidding' + `?loadNumber=${loadNumber}`, body);\r\n        const { data, success } = response;\r\n        if (callback) callback(success, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const bookChRobinsonLoad = async (loadNumber, body, callback) => {\r\n    try {\r\n        const response = await axios.post(getGoUrl() + '/bookload', body);\r\n        const { data, success } = response;\r\n        if (callback) callback(success, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const placeNewTrulBid = async (body, loadNumber, callback) => {\r\n    try {\r\n        const { success, data } = await requestPost({ uri: \"/api/bid/newTrulBidding/\" + loadNumber, body });\r\n        if (success) {\r\n            delete body.loadDetail;\r\n            const { success, data } = await requestPost({ baseUrl: getGoUrl(), uri: '/newTrulBidLoad', body })\r\n            if (success) {\r\n                notification('Bid submitted successfully');\r\n            }\r\n            if (callback) callback(success, data);\r\n            if (data.status === 'error') {\r\n                notification(data.message, 'error')\r\n            }\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const placeNewTrulCounterOffer = (body, callback) => async () => {\r\n    try {\r\n        const { success, data } = await requestPost({ baseUrl: getGoUrl(), uri: '/newTrulCounterOffer', body });\r\n        if (callback) callback(success, data);\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        notification(e.message, 'error')\r\n    }\r\n}\r\n\r\nexport const newTrulFinalOffer = (body, callback) => async () => {\r\n    try {\r\n        const { success, data } = await requestPost({ baseUrl: getGoUrl(), uri: '/newTrulFinalOffer', body });\r\n        if (callback) callback(success, data);\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        notification(e.message, 'error')\r\n    }\r\n}\r\n\r\nexport const getShipments = (payload) => {\r\n    const config = {\r\n        method: \"post\",\r\n        url: getGoUrl() + \"/shipments\",\r\n        data: payload,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        return new Promise((resolve, reject) => {\r\n            axios(config)\r\n                .then(function (response) {\r\n                    resolve(response);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    reject(error)\r\n                    notification(error.message || '', 'error')\r\n                });\r\n        });\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport const getAllBiddings = async () => {\r\n    try {\r\n        const { success, data } = await requestGet({ uri: '/api/bid/biddings' })\r\n        if (success) return data;\r\n        else {\r\n            return {\r\n                totalCount: 0,\r\n                data: []\r\n            }\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n/**\r\n * {\r\n *     pagesize,\r\n *     pageNum\r\n *     origin state, city\r\n *     destination state, city\r\n *     equipment,\r\n *     start Date range\r\n *     end date range\r\n * }\r\n */\r\n\r\nexport const getBiddings = (payload) => (dispatch) => {\r\n    const config = {\r\n        method: \"get\",\r\n        url: getBaseUrl() + \"/api/bid/biddings\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    dispatch({ type: GET_SHIPMENTS, payload: { data: {}, loading: true } });\r\n    try {\r\n        axios(config)\r\n            .then(async function ({ data: { data: dbData = [] } = {} }) {\r\n                const shipmentsResData = await getShipments(payload);\r\n\r\n                const { data: { results = [], totalResults, statusCode, message = '' } = {} } = shipmentsResData;\r\n                if (statusCode === 401) {\r\n                    notification(message, 'error');\r\n                }\r\n\r\n                results.forEach(function (shipment, index) {\r\n                    const { loadNumber } = shipment;\r\n                    dbData.forEach(function (bid) {\r\n                        if (\r\n                            parseInt(bid.loadNumber) === loadNumber &&\r\n                            bid.status === true\r\n                        ) {\r\n                            results.splice(index, 1);\r\n                        }\r\n                    });\r\n                });\r\n                //--------------------------\r\n                dispatch({\r\n                    type: GET_SHIPMENTS,\r\n                    payload: {\r\n                        data: { results, totalResults: totalResults },\r\n                        loading: false,\r\n                    },\r\n                });\r\n                //--------------------------\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                notification(error.message, 'error')\r\n                dispatch({\r\n                    type: GET_SHIPMENTS,\r\n                    payload: { data: {}, loading: false, message: error.message },\r\n                });\r\n            });\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport const saveCHLoadToDb = async (row = {}, isBooked = false) => {\r\n    try {\r\n        let payload = { isBooked, loadNumber: row.loadNumber, loadDetail: row };\r\n        return await axios.post(getBaseUrl() + '/api/chRobinson', payload);\r\n    } catch (e) {\r\n        console.log('response', e.response)\r\n    }\r\n}\r\n\r\nexport const getCHLoads = (onlyDelivered = false) => async (dispatch) => {\r\n    try {\r\n        let { success, data } = await requestGet({ uri: '/api/chRobinson' })\r\n        if (success) {\r\n            if (onlyDelivered) {\r\n                const { loads } = data;\r\n                data.loads = loads.filter(load => load.isDelivered)\r\n            }\r\n            dispatch({ type: GET_CHROBINSON_LOADS, payload: data });\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const getNewTrulLoads = (pageSize, pageIndex, params) => async dispatch => {\r\n    dispatch({\r\n        type: GET_SHIPMENTS,\r\n        payload: {\r\n            newTrulLoads: { data: [], totalResults: 0 },\r\n            loading: true,\r\n        },\r\n    });\r\n    const { data: allBiddings } = await getAllBiddings();\r\n    const { success, data = {} } = await requestPost({\r\n        uri: '/newTrulGetAllLoads', baseUrl: getGoUrl(),\r\n        body: {\r\n            \"page\": pageIndex + 1,\r\n            \"pagesize\": pageSize,\r\n            \"params\": params ? params : ''\r\n        }\r\n    }\r\n    )\r\n\r\n    if (success) {\r\n        const { pagination: { total_items } = {}, data: list = [] } = data\r\n        if (allBiddings) {\r\n            list.forEach(load => {\r\n                allBiddings.forEach(bidding => {\r\n                    if (+bidding.loadNumber === +load.id) {\r\n                        load.bidAmount = bidding.bidAmount;\r\n                        load.bidLevel = bidding.bidLevel;\r\n                        load.status = bidding.status;\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: list, totalResults: total_items },\r\n                loading: false,\r\n            },\r\n        });\r\n    }\r\n\r\n    if (!success) {\r\n        notification(data.message, 'error')\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0 },\r\n                loading: false,\r\n            },\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const getNewLoads = (filters) => async (dispatch) => {\r\n    dispatch({\r\n        type: GET_SHIPMENTS,\r\n        payload: {\r\n            data: { results: [], totalResults: 0 }, loading: true\r\n        }\r\n    });\r\n    try {\r\n        const { success, data = [] } = await requestPost({ baseUrl: getBabylonianServerUrl(), uri: '/fetchOpenBoardLoads', body: filters })\r\n        if (success) {\r\n            dispatch({\r\n                type: GET_SHIPMENTS,\r\n                payload: {\r\n                    data: { results: data.data, totalResults: data.totalResults }, loading: false\r\n                }\r\n            });\r\n            return\r\n        }\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0 }, loading: false\r\n            }\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0 }, loading: false\r\n            }\r\n        });\r\n    }\r\n}","import Modal from \"../ownerOperator/Modal\";\r\nimport {Grid, Typography, useMediaQuery} from \"@mui/material\";\r\nimport Details from \"./PickupDetails\";\r\nimport moment from \"moment\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { BasicLoadDetails } from \"./LoadDetails\";\r\nimport { requestPost } from \"../../utils/request\";\r\nimport { getGoUrl } from \"../../config\";\r\nimport { CARRIER_EMAIL, MC_NUMBER } from \"./constants\";\r\n\r\nconst LeftDetails = ({ state }) => {\r\n    const { stops = [] } = state || {};\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [_, { geo = {}, early_datetime, late_datetime, appointment_required }] = stops;\r\n    const { city, state: stateCode } = geo || {};\r\n    return <Details\r\n        title={'Pickup'}\r\n        // name={name}\r\n        location={`${city}${stateCode ? \", \" + stateCode : ''}`}\r\n        type={'Pickup Date'}\r\n        date={moment(early_datetime).format('MM/DD/yyyy')}\r\n        appointment={appointment_required ? 'Yes' : 'No'}\r\n        avgLoadTime={'--'}\r\n        loadBy={`${moment(early_datetime).format('HH:mm:ss')} ${late_datetime ? \"- \" + moment(late_datetime).format('HH:mm:ss') : ''}`}\r\n        loadByType='Ready By'\r\n    />\r\n}\r\n\r\nconst RightDetails = ({ state }) => {\r\n    const { stops = [] } = state;\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [{ geo = {}, early_datetime, late_datetime, appointment_required }] = stops || [{}];\r\n    const { city, state: stateCode } = geo || {};\r\n    return <Details\r\n        title={'Delivery'}\r\n        // name={destinationName}\r\n        location={`${city}${stateCode ? \", \" + stateCode : ''}`}\r\n        type={'Delivery Date'}\r\n        date={moment(early_datetime).format('MM/DD/yyyy')}\r\n        appointment={appointment_required ? 'Yes' : 'No'}\r\n        avgLoadTime={'--'}\r\n        loadBy={`${moment(early_datetime).format('HH:mm:ss')} ${late_datetime ? \"- \" + moment(late_datetime).format('HH:mm:ss') : ''}`}\r\n        loadByType='Deliver By'\r\n    />\r\n}\r\n\r\nconst NewTrulLoadDetails = (props) => {\r\n    const { location: { state = {} } = {}, callDetail = true } = props;\r\n    const isSizeSm = useMediaQuery('(max-width:600px)');\r\n    const { id: loadNumber, loaded_miles, weight, equipment, client: { compliance_link = '', client_name } = {} } = state\r\n    // console.log(state)\r\n    const config = {\r\n        title: \"\",\r\n        maxWidth: 'xs'\r\n    };\r\n\r\n    const postDetailToNewTrul = useCallback(async () => {\r\n        let body = {\r\n            \"event_type\": \"LOAD_VIEW_DETAILS\",\r\n            \"event_data\": {\r\n                \"load_id\": loadNumber,\r\n                \"carrier_email\": CARRIER_EMAIL,\r\n                \"mc_number\": MC_NUMBER,\r\n                \"first_name\": \"Sunny\",\r\n                \"last_name\": \"Freight\",\r\n                \"phone_number\": \"3179654608\"\r\n            }\r\n        }\r\n        requestPost({ uri: '/newTrulShowLoadDetails', baseUrl: getGoUrl(), body })\r\n    }, [loadNumber])\r\n\r\n    useEffect(() => {\r\n        callDetail && postDetailToNewTrul();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [postDetailToNewTrul])\r\n\r\n    return (\r\n        <Modal config={config}>\r\n            <Grid container gap={3} sx={{ p: 0 }}>\r\n                <Grid item xs={12}>\r\n                    <Typography align='center' variant='h4'>New Trul</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    <BasicLoadDetails loadNumber={loadNumber} trip={loaded_miles} weight={weight}\r\n                        equipment={equipment} />\r\n                    {client_name && <Typography fontSize={24}>Company: {client_name}</Typography>}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent={'center'}>\r\n                        <Grid item sm={5} xs={12} textAlign={'center'} className={'openBoardPickupDetails'}>\r\n                            <LeftDetails state={state} />\r\n                        </Grid>\r\n                        <Grid item sm={2} xs={12} textAlign={'center'}>\r\n                            {isSizeSm ? <ArrowDownwardIcon sx={{fontSize: '8rem'}}/> : <ArrowForwardIcon sx={{fontSize: '8rem'}}/>}\r\n                        </Grid>\r\n                        <Grid item sm={5} xs={12} textAlign={'center'}>\r\n                            <RightDetails state={state} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    {compliance_link &&\r\n                        <Typography sx={{ textDecoration: 'underline' }} component='a' href={compliance_link}\r\n                            target='_blank'>{compliance_link}</Typography>}\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NewTrulLoadDetails","import {Stack, Typography} from '@mui/material';\r\nimport React, {Fragment} from \"react\";\r\n\r\nconst Details = ({title = '', location = '', name, type = '', date, appointment='', avgLoadTime='', loadBy, loadByType}) => {\r\n    return <>\r\n        <Typography sx={{fontSize: 24}}>{title}</Typography>\r\n        <Typography sx={{fontSize: 24}}>{name}</Typography>\r\n        <Typography sx={{fontSize: 24}}>{location}</Typography>\r\n        {type && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>{type}: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{date}</Typography>\r\n        </Stack>}\r\n        {loadBy && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>{loadByType}: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{loadBy}</Typography>\r\n        </Stack>}\r\n        {appointment && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>Appointment: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{appointment}</Typography>\r\n        </Stack>}\r\n        {avgLoadTime && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>Average Load Time: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{avgLoadTime}</Typography>\r\n        </Stack>}\r\n    </>\r\n}\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Grid, Stack, Typography\r\n} from \"@mui/material\";\r\nimport moment from 'moment'\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport Modal from \"../ownerOperator/Modal\";\r\nimport Details from \"./PickupDetails\";\r\nimport {getParsedLoadEquipment} from \"./constants\";\r\n\r\nconst Typo = ({label = '', value = '', labelSx = {}}) => {\r\n    return <Stack direction={'row'}>\r\n        <Typography sx={{mr: 1, ...labelSx}}>{label}:</Typography>\r\n        <Typography sx={labelSx}>{value}</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst formatTimeZone = (timeDate, tz = '-0500') => {\r\n    return moment(timeDate).utcOffset(tz).format('HH:mm:ss')\r\n}\r\n\r\nconst BasicLoadDetails = ({loadNumber = '', trip, weight, equipment = ''}) => {\r\n    return (\r\n        <Box display={'flex'} justifyContent={'center'}>\r\n            <Stack alignItems={'center'}>\r\n                <Typo value={loadNumber} label={'Load Number'} labelSx={{fontSize: 32}}/>\r\n                <Typo value={equipment} label={'Equipment'} labelSx={{fontSize: 24}}/>\r\n                <Typo value={weight + ' lbs'} label={'Weight'} labelSx={{fontSize: 24}}/>\r\n                <Typo value={(trip ?? 0) + ' miles'} label={'Trip'} labelSx={{fontSize: 24}}/>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst LoadDetails = (props) => {\r\n    const {location: {state: data = {}} = {}} = props,\r\n        {modesString = '', standard = ''} = getParsedLoadEquipment(data),\r\n        equipment = modesString + ' ' + standard,\r\n        {\r\n            loadNumber = '', distance: {miles = ''} = {}, weight: {pounds = ''} = {},\r\n            origin: {name = '', stateCode, postalCode = '', city = '', pickupScheduleRequest} = {},\r\n            destination: {\r\n                name: destinationName = '', stateCode: destinationStateCode, postalCode: destinationPostal = '',\r\n                city: destinationCity = '', scheduleRequest: dropScheduleRequest = ''\r\n            } = {},\r\n            pickUpByDate = '',\r\n            deliverBy = '',\r\n            calculatedPickUpByDateTime = '',\r\n            calculatedDeliverByDateTime = '',\r\n            stops = []\r\n        } = data;\r\n    const timeZonePickup = moment(calculatedPickUpByDateTime)._tzm\r\n    const timeZoneDeliveryBy = moment(calculatedDeliverByDateTime)._tzm\r\n\r\n    const originDetails = stops[0] || {},\r\n        {calculatedArriveByEndDateTime, calculatedArriveByStartDateTime} = originDetails,\r\n\r\n        originReadyByRange = `${formatTimeZone(calculatedArriveByStartDateTime, timeZonePickup)} - ${formatTimeZone(calculatedArriveByEndDateTime, timeZonePickup)}`;\r\n\r\n    const destinationDetails = stops[1] || {},\r\n        {calculatedArriveByEndDateTime: destEndDateTime, calculatedArriveByStartDateTime: destStartDateTime} = destinationDetails,\r\n        deliverByRange = `${formatTimeZone(destStartDateTime, timeZoneDeliveryBy)} - ${formatTimeZone(destEndDateTime, timeZoneDeliveryBy)}`;\r\n    const config = {\r\n        title: \"\",\r\n    };\r\n    \r\n    return (\r\n        <Modal config={config}>\r\n            <Grid container spacing={2} sx={{p: 2}}>\r\n                <Grid item xs={12}>\r\n                    <Typography align='center' variant='h4'>CH Robinson</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    <BasicLoadDetails loadNumber={loadNumber} trip={miles} weight={pounds} equipment={equipment}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent={'center'}>\r\n                        <Grid xs={4} textAlign={'center'} className={'openBoardPickupDetails'}>\r\n                            <Details\r\n                                title={'Pickup'}\r\n                                name={name}\r\n                                location={`${city}${stateCode ? \", \" + stateCode : ''} ${postalCode}`}\r\n                                type={'Pickup Date'}\r\n                                date={moment(pickUpByDate).format('MM/DD/yyyy')}\r\n                                appointment={pickupScheduleRequest === 'A' ? 'Yes' : 'No'}\r\n                                avgLoadTime={'--'}\r\n                                loadBy={originReadyByRange}\r\n                                loadByType='Ready By'\r\n                            />\r\n                        </Grid>\r\n                        <Grid xs={4} textAlign={'center'}>\r\n                            <ArrowForwardIcon sx={{fontSize: '8rem'}}/>\r\n                        </Grid>\r\n                        <Grid xs={4} textAlign={'center'}>\r\n                            <Details\r\n                                title={'Delivery'}\r\n                                name={destinationName}\r\n                                location={`${destinationCity}${destinationStateCode ? \", \" + destinationStateCode : ''} ${destinationPostal}`}\r\n                                type={'Delivery Date'}\r\n                                date={moment(deliverBy).format('MM/DD/yyyy')}\r\n                                appointment={dropScheduleRequest === 'A' ? 'Yes' : 'No'}\r\n                                avgLoadTime={'--'}\r\n                                loadBy={deliverByRange}\r\n                                loadByType='Deliver By'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport {\r\n    LoadDetails,\r\n    Typo,\r\n    formatTimeZone,\r\n    BasicLoadDetails\r\n};\r\n"],"sourceRoot":""}