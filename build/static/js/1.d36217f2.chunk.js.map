{"version":3,"sources":["components/loads/styles.js","components/loads/LoadDetailModal.js","../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/FileCopyOutlined.js","../node_modules/@mui/icons-material/ArrowForwardIos.js"],"names":["useStyles","makeStyles","theme","root","minWidth","maxWidth","marginBottom","backgroundColor","borderRadius","borderWidth","borderStyle","borderColor","cardcontent","flexDirection","wrap","paddingLeft","paddingTop","paddingBottom","pickup","fontSize","alignItems","h4","margin","padding","loadp","display","playIcon","height","width","marginLeft","textField","color","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","position","palette","background","boxShadow","shadows","spacing","top","left","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","formInitialState","status","rate","assignedTo","trailorNumber","rateConfirmation","proofDelivery","accessorials","drop","invoice_created","MenuProps","PaperProps","style","ITEM_HEIGHT","TextPlaceHolder","_ref","value","LoadDetailModal","_ref2","modalEdit","open","handleClose","listBarType","load","_ref3","_id","loadNumber","brokerage","user","_ref3$status","_ref3$accessorials","_ref3$bucketFiles","bucketFiles","bktFiles","_","cloneDeep","classes","dispatch","useDispatch","state","useSelector","_React$useState","React","useState","_React$useState2","_slicedToArray","edit","setEdit","_React$useState3","_objectSpread","_React$useState4","form","setForm","_useState","_useState2","isProcessingAsyncRequest","setIsProcessingAsyncRequest","rateConfirmationRef","useRef","proofDeliveryRef","SelectElement","OutlinedInput","FilledInput","assignedToOptions","driver","drivers","map","_ref4","_ref4$user","_ref5","_ref5$name","name","_ref5$_id","filter","useEffect","setupDrivers","resetFileInputs","length","error","msg","getDrivers","afterSubmit","isSuccess","handleSubmit","event","preventDefault","updateLoad","handleOnChange","_event$target","target","_defineProperty","handlePickDropChange","_ref6","keyToUpdate","childKey","handleDateChange","date","key","concat","handleFileChange","_ref7","_ref7$target","files","f","current","handleInOutTime","parent_key","child_key","getRole","auth","role","e","alpha","_toConsumableArray","forEach","item","arguments","undefined","_item$fileType","fileType","_item$fileLocation","fileLocation","Object","assign","_ref8","_ref8$rateConfirmatio","_ref8$proofDelivery","StaticDataShow","_ref9","heading","_ref9$values","values","_ref9$spacing","_ref9$sxObject","sxObject","_jsxs","_Stack","sx","children","_jsx","_Typography","fontWeight","textAlign","_Fragment","_Modal","onClose","className","direction","justifyContent","mb","_IconButton","_Close","id","onClick","onSubmit","_Grid","container","xs","pl","pr","sm","FormControl","m","size","fullWidth","InputLabel","_Select","onChange","_ref10","input","label","notched","disabled","_MenuItem","_ref11","labelId","multiple","_ref12","split","_Divider","_Box","_Done","title","_Edit","body","changeObjectKey","addLoad","_FileCopyOutlined","InputField","labelStyle","Fragment","mr","placeholder","shipperName","variant","pickupAddress","pickupCity","pickupState","pickupZip","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","pickupDate","renderInput","params","_TextField","TimePicker","in_time","out_time","mt","moment","format","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","type","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropCity","dropState","dropZip","dropDate","dropPo","dropReference","dropDeliverNumber","href","htmlFor","ref","_Button","component","getCheckStatusIcon","memo","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/1.d36217f2.chunk.js","sourcesContent":["import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import React, {Fragment, useEffect, useRef, useState} from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  Modal\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport moment from \"moment\";\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport \"./style.css\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { useStyles } from \"./styles\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport TimePicker from '@mui/lab/TimePicker';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport { getCheckStatusIcon } from \"../../utils/utils\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose,\r\n  listBarType,\r\n  load,\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const assignedToOptions = state.driver.drivers.map(({ user = {} }) => {\r\n    const { name = '', _id = '' } = user || '';\r\n    return {\r\n      name, _id\r\n    }\r\n  }).filter((driver) => !!driver?._id) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n  useEffect(() => {\r\n    const drivers = state.driver.drivers;\r\n    if (drivers.length > 0) {\r\n      // console.log(user._id, state.driver.drivers);\r\n      // setForm({ ...form, assignedTo: user });\r\n      // for (let driver of drivers) {\r\n      //     if (driver.loads.length > 0) {\r\n      //         for (let load of driver.loads) {\r\n      //             if (load._id === _id) {\r\n      //                 setForm({ ...form, assignedTo: user._id });\r\n      //             }\r\n      //         }\r\n      //     }\r\n      // }\r\n    }\r\n  }, [state.driver.drivers]);\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if(isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = (  { target: { value } },  keyToUpdate,  childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n        setForm({...form, pickup: [{...form.pickup[0], [childKey]: value}]});\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n        setForm({...form, drop: [{...form.drop[0], [childKey]: value}]});\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {};\r\n    alpha.forEach((item = {}) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      Object.assign(bucketFiles, { [fileType]: fileLocation });\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = \"\", proofDelivery = \"\" } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }}>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n      >\r\n        <div className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                    <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                          id=\"multiple-name\"\r\n                          name=\"status\"\r\n                          value={form.status}\r\n                          onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                          input={<SelectElement size='small' label=\"\" notched={false} sx={{  }} />}\r\n                          MenuProps={MenuProps}\r\n                          disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {[\r\n                          { id: 'loadCheckIn', label: 'Load Check-In' },\r\n                          { id: 'pickupCompete', label: 'Pickup Complete' },\r\n                          { id: 'arrivedAtDelivery', label: 'Arrived at Delivery' },\r\n                          { id: 'arrivedAtPickup', label: 'Arrived at Pickup' },\r\n                          { id: 'delivered', label: 'Delivered' },\r\n                          { id: 'unloadComplete', label: 'Unload Complete' },\r\n                          { id: 'enRoute', label: 'En Route to Delivery' },\r\n                        ].map((name) => (\r\n                            <MenuItem\r\n                                key={name.id}\r\n                                value={name.id}\r\n                                // style={getStyles(name, personName, theme)}\r\n                            >\r\n                              {name.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                          id=\"multiple-name\"\r\n                          name=\"assignedTo\"\r\n                          disabled={!edit || state.auth.user.role === \"driver\"}\r\n                          value={form.assignedTo}\r\n                          onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                          input={<SelectElement size='small' label=\"\" notched={false} sx={{  }} />}\r\n                          MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((name) => (\r\n                            <MenuItem\r\n                                key={name.name}\r\n                                value={name._id}\r\n                                // style={getStyles(name, personName, theme)}\r\n                            >\r\n                              {name.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper', label: 'Lumper' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                    <DoneIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <DatePicker\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupDate : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleDateChange(date, \"pickup\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupDate : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleDateChange(date, \"pickup\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    label='In Time'\r\n                                    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].out_time : \"\"\r\n                                    }\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                  />\r\n                                </LocalizationProvider>\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                        value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                        onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                        value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                        onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                        value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                        onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DatePicker\r\n                                  value={form.drop[0] ? form.drop[0].dropDate : \"\"}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  value={form.drop[0] ? form.drop[0].dropDate : \"\"}\r\n                                  onChange={(date) => handleDateChange(date, \"drop\")}\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  label='In Time'\r\n                                  value={form.drop[0] ? form.drop[0].in_time : \"\"}\r\n                                  onChange={(date) =>\r\n                                    handleInOutTime(date, \"drop\", \"in_time\")\r\n                                  }\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimePicker\r\n                                  label='Out Time'\r\n                                  value={form.drop[0] ? form.drop[0].out_time : \"\"}\r\n                                  onChange={(date) =>\r\n                                    handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  renderInput={(params) => <TextField {...params} variant='standard' />}\r\n                                />\r\n                              </LocalizationProvider>\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='inherit' sx={{ color: '#8898AA', fontSize: 10 }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                    dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <Stack spacing={2} sx={{ alignItems: 'end' }}>\r\n                  <Stack style={{ margin: 0 }} direction={'row'} spacing={2}>\r\n                    {rateConfirmation ? (\r\n                      <span>\r\n                        <a href={rateConfirmation} target=\"_blank\">\r\n                          Rate Con\r\n                        </a>\r\n                      </span>\r\n                    ) : (\r\n                      <span>Rate Con</span>\r\n                    )}\r\n                    <span>\r\n                      {edit ? <Fragment>\r\n                        <label htmlFor=\"contained-button-file1\">\r\n                          <input\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n                            multiple\r\n                            name=\"rateConfirmation\"\r\n                            disabled={!edit || state.auth.user.role === \"driver\"}\r\n                            onChange={handleFileChange}\r\n                            ref={rateConfirmationRef}\r\n                            id=\"contained-button-file1\"\r\n                          />\r\n                          <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                            Attach\r\n                          </Button>\r\n                        </label>\r\n                      </Fragment>\r\n                        : getCheckStatusIcon(!!rateConfirmation)}\r\n                    </span>\r\n                  </Stack>\r\n                  <Stack style={{ margin: 0 }} direction={'row'} spacing={2}>\r\n                    {proofDelivery ? (\r\n                      <span>\r\n                        <a href={proofDelivery} target=\"_blank\">\r\n                          POD\r\n                        </a>\r\n                      </span>\r\n                    ) : (\r\n                      <span>POD</span>\r\n                    )}\r\n                    <span>\r\n                      {edit ?\r\n                        <label htmlFor=\"contained-button-file2\">\r\n                          <input\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n                            multiple\r\n                            name=\"proofDelivery\"\r\n                            disabled={!edit}\r\n                            onChange={handleFileChange}\r\n                            ref={proofDeliveryRef}\r\n                            id=\"contained-button-file2\"\r\n                          />\r\n                          <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                            Attach\r\n                          </Button>\r\n                        </label>\r\n                        : getCheckStatusIcon(!!proofDelivery)}\r\n                    </span>\r\n                  </Stack>\r\n                  <Stack style={{ margin: 0 }} direction={'row'} spacing={2}>\r\n                    {accessorials.length ? (\r\n                      <span>\r\n                        <a href={\"#\"} target=\"_blank\">\r\n                          Accessorials\r\n                        </a>\r\n                      </span>\r\n                    ) : (\r\n                      <span>Accessorials</span>\r\n                    )}\r\n                    <span>\r\n                      {edit ? <Fragment>\r\n                        <label htmlFor=\"contained-button-file3\">\r\n                          <input\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n                            multiple\r\n                            name=\"accessorials\"\r\n                            disabled={!edit || state.auth.user.role === \"driver\"}\r\n                            onChange={handleFileChange}\r\n                            ref={rateConfirmationRef}\r\n                            id=\"contained-button-file3\"\r\n                          />\r\n                          <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                            Attach\r\n                          </Button>\r\n                        </label>\r\n                      </Fragment>\r\n                        : getCheckStatusIcon(!!accessorials?.length)}\r\n                    </span>\r\n                  </Stack>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n                {/*<Typography item sx={{fontWeight: 600, fontSize:18, textAlign: 'center'}}>Pickup</Typography>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Address\"*/}\r\n                {/*      value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"pickup\", \"pickupAddress\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={pickup && pickup[0] ? pickup[0].pickupAddress : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid*/}\r\n                {/*      container*/}\r\n                {/*      spacing={2}*/}\r\n                {/*      className={classes.rootLoadDetailModal}*/}\r\n                {/*    >*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"City\"*/}\r\n                {/*          value={*/}\r\n                {/*            form.pickup[0] ? form.pickup[0].pickupCity : \"\"*/}\r\n                {/*          }*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupCity\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          placeholder=\"State\"*/}\r\n                {/*          value={*/}\r\n                {/*            form.pickup[0] ? form.pickup[0].pickupState : \"\"*/}\r\n                {/*          }*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupState\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"Zip\"*/}\r\n                {/*          value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"pickup\", \"pickupZip\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : (*/}\r\n                {/*    <>*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupCity : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupState : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={pickup && pickup[0] ? pickup[0].pickupZip : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*    </>*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Typography sx={{fontWeight:600, mb:1, textAlign: 'center'}}>Pickup Time</Typography>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid container>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleDateChange(date, \"pickup\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardDatePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"date-picker-dialog\"*/}\r\n                {/*            format=\"MM/dd/yyyy\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleDateChange(date, \"pickup\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : pickup && pickup[0] ? (*/}\r\n                {/*    moment(pickup[0].pickupDate).format(\"LLL\")*/}\r\n                {/*  ) : (*/}\r\n                {/*    \"\"*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Grid container>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"In Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : pickup && pickup[0] && pickup[0].in_time ? (*/}\r\n                {/*        \"In time: \" + moment(pickup[0].in_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"Out Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={*/}\r\n                {/*              form.pickup[0] ? form.pickup[0].out_time : \"\"*/}\r\n                {/*            }*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"pickup\", \"out_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : pickup && pickup[0] && pickup[0].out_time ? (*/}\r\n                {/*        \"Out time: \" +*/}\r\n                {/*        moment(pickup[0].out_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*  </Grid>*/}\r\n                {/*</p>*/}\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n                {/*<Typography item sx={{fontSize:18, textAlign: 'center', fontWeight:600,}}>Drop</Typography>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Receiver Name\"*/}\r\n                {/*      value={form.drop[0] ? form.drop[0].receiverName : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"drop\", \"receiverName\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={drop && drop[0] ? drop[0].receiverName : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <InputField*/}\r\n                {/*      id=\"outlined-basic\"*/}\r\n                {/*      variant=\"outlined\"*/}\r\n                {/*      placeholder=\"Address\"*/}\r\n                {/*      value={form.drop[0] ? form.drop[0].dropAddress : \"\"}*/}\r\n                {/*      onChange={(event) =>*/}\r\n                {/*        handlePickDropChange(event, \"drop\", \"dropAddress\")*/}\r\n                {/*      }*/}\r\n                {/*    />*/}\r\n                {/*  ) : (*/}\r\n                {/*    <TextPlaceHolder*/}\r\n                {/*      value={drop && drop[0] ? drop[0].dropAddress : \"\"}*/}\r\n                {/*    />*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid*/}\r\n                {/*      container*/}\r\n                {/*      spacing={2}*/}\r\n                {/*      className={classes.rootLoadDetailModal}*/}\r\n                {/*    >*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"City\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropCity : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropCity\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"State\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropState : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropState\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={4}>*/}\r\n                {/*        <InputField*/}\r\n                {/*          id=\"outlined-basic\"*/}\r\n                {/*          variant=\"outlined\"*/}\r\n                {/*          placeholder=\"Zip\"*/}\r\n                {/*          value={form.drop[0] ? form.drop[0].dropZip : \"\"}*/}\r\n                {/*          onChange={(event) =>*/}\r\n                {/*            handlePickDropChange(event, \"drop\", \"dropZip\")*/}\r\n                {/*          }*/}\r\n                {/*        />*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : (*/}\r\n                {/*    <>*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropCity : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropState : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*      ,*/}\r\n                {/*      <TextPlaceHolder*/}\r\n                {/*        value={drop && drop[0] ? drop[0].dropZip : \"\"}*/}\r\n                {/*      />*/}\r\n                {/*    </>*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Typography sx={{fontWeight:600, mb:1}}>Drop Time</Typography>*/}\r\n                {/*  {edit && state.auth.user.role !== \"driver\" ? (*/}\r\n                {/*    <Grid container>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                {/*            onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*      <Grid item xs={6}>*/}\r\n                {/*        <LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                {/*          <DatePicker*/}\r\n                {/*              // label=\"Basic example\"*/}\r\n                {/*              value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                {/*              onChange={(newValue) => {*/}\r\n                {/*                handleDateChange(newValue, \"drop\")*/}\r\n                {/*              }}*/}\r\n                {/*              renderInput={(params) => <TextField {...params} />}*/}\r\n                {/*          />*/}\r\n                {/*        </LocalizationProvider>*/}\r\n                {/*      </Grid>*/}\r\n                {/*    </Grid>*/}\r\n                {/*  ) : drop && drop[0] ? (*/}\r\n                {/*    moment(drop[0].dropDate).format(\"LLL\")*/}\r\n                {/*  ) : (*/}\r\n                {/*    \"\"*/}\r\n                {/*  )}*/}\r\n                {/*</p>*/}\r\n                {/*<p>*/}\r\n                {/*  <Grid container>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"In Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : drop && drop[0] && drop[0].in_time ? (*/}\r\n                {/*        \"In time: \" + moment(drop[0].in_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*    <Grid item xs={6}>*/}\r\n                {/*      {edit ? (*/}\r\n                {/*        <MuiPickersUtilsProvider utils={DateFnsUtils}>*/}\r\n                {/*          <KeyboardTimePicker*/}\r\n                {/*            label=\"Out Time\"*/}\r\n                {/*            className={classes.textFieldDialog}*/}\r\n                {/*            InputProps={{*/}\r\n                {/*              classes: { input: classes.resizeDialog },*/}\r\n                {/*            }}*/}\r\n                {/*            size=\"small\"*/}\r\n                {/*            id=\"time-picker\"*/}\r\n                {/*            value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                {/*            onChange={(date) =>*/}\r\n                {/*              handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                {/*            }*/}\r\n                {/*          />*/}\r\n                {/*        </MuiPickersUtilsProvider>*/}\r\n                {/*      ) : drop && drop[0] && drop[0].out_time ? (*/}\r\n                {/*        \"Out time: \" + moment(drop[0].out_time).format(\"h:mm A\")*/}\r\n                {/*      ) : (*/}\r\n                {/*        \"--\"*/}\r\n                {/*      )}*/}\r\n                {/*    </Grid>*/}\r\n                {/*  </Grid>*/}\r\n                {/*</p>*/}\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z\"\n}), 'FileCopyOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\nexports.default = _default;"],"sourceRoot":""}