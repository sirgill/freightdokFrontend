{"version":3,"sources":["components/common/AuthContainer.js","components/Atoms/form/OTPInput.js","views/auth/ForgotPassword.js","components/Atoms/form/Switch.js","components/Atoms/Tooltip.js","components/Atoms/UserMenu.js","components/Atoms/form/LoadingButton.js","components/Atoms/form/Input.js","hooks/useMutation.js","components/Atoms/form/Password.jsx","components/Atoms/form/Select.js","components/Atoms/form/RadioButtons.js","components/Atoms/form/DateRangePicker.js","components/Atoms/Alert.js","actions/component.action.js","components/client/constants.js","views/auth/utils.js","../node_modules/@mui/icons-material/MailOutline.js"],"names":["Container","styled","_Grid","_ref","backgroundColor","boxShadow","AuthContainer","_ref2","children","alertConfig","rest","_jsxs","_jsx","item","xs","Alert","config","OTPInput","length","onChange","name","errors","otp","setOtp","useState","Array","fill","refs","useRef","errorText","handleChange","index","e","value","target","newOtp","substring","join","current","nextField","focus","prevField","onClick","setSelectionRange","useEffect","_FormControl","_FormLabel","error","sx","fontSize","container","width","spacing","map","_TextField","bind","inputRef","ref","autoComplete","size","onKeyDown","handleKeyDown","key","concat","_FormHelperText","ChangePasswordForm","form","loading","_Fragment","Password","label","pass","confirmPass","m","LoadingButton","isLoading","type","loadingText","_Typography","component","Link","to","LOGIN_LINK","display","ForgotPassword","history","setForm","email","setErrors","isOtpSent","setIsOtpSent","alert","setAlert","open","message","severity","mutation","useMutation","changePasswordMutation","isChangingPassword","_ref3","comp","Input","InputProps","startAdornment","_InputAdornment","position","_MailOutline","className","style","verticalAlignStyle","direction","gap","px","py","onSubmit","preventDefault","isValid","err","validatePasswordsPreLogin","newPass","then","_ref5","success","data","notification","push","catch","isEmailValid","_ref4","undefined","mb","CompanyText","pointer","_Switch","theme","height","padding","Switch","BootstrapTooltip","props","MuiTooltip","arrow","classes","popper","tooltipClasses","color","palette","common","black","tooltip","Tooltip","title","placement","proptype","PropTypes","string","isRequired","element","oneOf","stringToColor","i","hash","charCodeAt","toString","slice","stringAvatar","userName","split","bgcolor","UserMenu","anchorElUser","setAnchorElUser","React","user","role","getUserDetail","dispatch","useDispatch","settings","changePasswordModal","logout","replace","onClose","callback","_Box","_IconButton","event","currentTarget","p","_Avatar","_Menu","mt","MenuListProps","minWidth","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","flexDirection","fontWeight","variant","getRoleNameString","_Divider","setting","_MenuItem","textAlign","withRouter","memo","disabled","text","isDisabled","_Button","startIcon","_CircularProgress","InputFieldPure","handleBlur","hasError","readOnly","inputProps","helperText","fullWidth","formControlSx","onBlur","InputField","classNameRoot","isCapitalize","trimValue","capitalize","trim","max","min","_","isFunction","url","arguments","showTriggers","options","setLoading","async","body","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","res","finally","showPassword","setShowPassword","endAdornment","handleClickShowPassword","show","onMouseDown","edge","Visibility","VisibilityOff","func","Select","labelKey","valueKey","menuLabelCb","renderValue","showNone","required","items","useMemo","option","_InputLabel","_Select","labelId","border","array","object","node","bool","RadioButtonsGroupControlled","radioTitle","labelPlacement","defaultValue","alldisabled","displayAsRow","classNameGrp","radios","forEach","info","tooltipText","shouldDisplay","labelClassName","labelSx","Fragment","_Tooltip","_FormControlLabel","control","_Radio","componentsProps","typography","_RadioGroup","row","RadioButtonPure","RadioButtonsGroup","containerSx","parentValue","setValue","staticRanges","isSelected","range","startDate","startOfDay","Date","endDate","endOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","getDateString","s","moment","format","DateRangePicker","setOpen","setAnchorEl","selectionRange","setStartDate","setEndDate","textField","setTextField","togglePicker","_DateRange","_Popover","bottom","Picker","ranges","selection","classname","inStyles","alertProps","_Collapse","in","_Alert","showDelete","afterSuccessCb","stopPropagation","store","DELETE_COMPONENT","payload","removeDelete","getState","app","deleteComponent","CHANGE_PASSWORD","ROLE_NAMES","superAdmin","admin","ownerOperator","driver","support","validatePasswords","currentPass","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"kMAIA,MAAMA,EAAYC,YAAMC,IAAND,EAAaE,IAAA,MAAGA,EAAA,MAAM,CACpCC,gBAAiB,UACjBC,UAAW,qCACd,IAWcC,MATOC,IAA2C,IAA1C,SAACC,EAAQ,YAAEC,EAAa,CAAC,KAAMC,GAAKH,EACvD,OAAOI,eAACX,EAAS,IAAKU,EAAIF,SAAA,CACtBI,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAGN,SACdI,cAACG,IAAK,CAACC,OAAQP,MAElBD,IACO,E,0FC8DDS,MA1EEd,IAA8C,IAA7C,OAACe,EAAS,EAAC,SAAEC,EAAQ,KAAEC,EAAI,OAAEC,EAAO,CAAC,GAAElB,EACrD,MAAOmB,EAAKC,GAAUC,mBAAS,IAAIC,MAAMP,GAAQQ,KAAK,KAChDC,EAAOC,iBAAO,IAChBC,EAAYR,EAAOD,GAEjBU,EAAeA,CAACC,EAAOC,KACzB,MAAM,MAACC,GAASD,EAAEE,OACZC,EAAS,IAAIb,GAOnB,GANAa,EAAOJ,GAASE,EAAMG,UAAUH,EAAMf,OAAS,GAC/CK,EAAOY,GACJA,EAAOE,KAAK,IAAInB,SAAWA,GAC1BC,GAAYA,EAAS,CAACc,MAAOE,EAAOE,KAAK,IAAKjB,SAG9Ce,EAAOJ,IAAUA,GAASb,EAAO,GAAKS,EAAKW,SAASP,EAAQ,GAAI,CAChE,MAAMQ,EAAYZ,EAAKW,SAASP,EAAQ,GACxCQ,GAAaA,EAAUC,OAC3B,MAEK,IAAIL,EAAOJ,GAAQ,CACpB,GAAa,IAAVA,EACC,OAAOJ,EAAKW,QAAQ,GAAGE,QAE3B,MAAMC,EAAYd,EAAKW,SAASP,EAAQ,GACxCU,GAAaA,EAAUD,OAC3B,GAIEE,EAAWX,IACbJ,EAAKW,QAAQP,GAAOY,kBAAkB,EAAE,EAAE,EAG9CC,qBAAU,KACFjB,EAAKW,QAAQ,IACbX,EAAKW,QAAQ,GAAGE,OACpB,GACD,IASH,OAAO7B,eAAAkC,IAAA,CAAa,oBAAkB,OAAMrC,SAAA,CACxCI,cAAAkC,IAAA,CAAWC,QAASlB,EAAWmB,GAAI,CAACC,SAAU,IAAIzC,SAAC,QACnDI,cAAAV,IAAA,CAAMgD,WAAS,EAACC,MAAO,OAAQC,QAAS,EAAE5C,SACrCc,EAAI+B,KAAI,CAACpB,EAAOF,IACNnB,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAKI,EAAOV,SAC9BI,cAAA0C,IAAA,CAEIZ,QAASA,EAAQa,UAAK,EAAMxB,GAC5ByB,SAAUC,GAAO9B,EAAKW,QAAQP,GAAS0B,EACvCxB,MAAOA,EACPd,SAAUW,EAAayB,UAAK,EAAMxB,GAClC2B,aAAa,QACbC,KAAK,QACLZ,QAASlB,EACT+B,UAAY5B,GArBV6B,EAAC9B,EAAOC,KAC1B,GAAc,cAAVA,EAAE8B,KAAuB/B,EAAQ,IAAMT,EAAIS,GAAQ,CACnD,MAAMU,EAAYd,EAAKW,QAAQP,EAAQ,GACvCU,GAAaA,EAAUD,OAC3B,GAiBkCqB,CAAc9B,EAAOC,GACvCgB,GAAI,CACA,qBAAsB,CAClBG,MAAO,MAEb,GAAAY,OAbMhC,UAkBvBF,GAAajB,cAAAoD,IAAA,CAAgBjB,QAASlB,EAAUrB,SAAEqB,MACzC,EC5DlB,MAAMoC,EAAqB9D,IAAwC,IAAvC,KAAC+D,EAAI,SAAE/C,EAAQ,QAAEgD,EAAO,OAAE9C,GAAOlB,EACzD,OAAOQ,eAAAyD,WAAA,CAAA5D,SAAA,CACHI,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAGN,SAEdI,cAACK,EAAQ,CAACC,OAAQ,EAAGC,SAAUA,EAAUC,KAAK,MAAMC,OAAQA,MAEhET,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAGN,SACdI,cAACyD,IAAQ,CAACC,MAAM,eAAenD,SAAUA,EAAUc,MAAOiC,EAAKK,KAAMnD,KAAK,OAAOC,OAAQA,MAE7FT,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAGN,SACdI,cAACyD,IAAQ,CAACC,MAAM,mBAAmBnD,SAAUA,EAAUc,MAAOiC,EAAKM,YAAapD,KAAK,cAC3EC,OAAQA,EAAQqC,aAAc,YAE5C9C,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAIkC,GAAI,CAACyB,EAAG,QAAQjE,SAC/BI,cAAC8D,IAAa,CAACC,UAAWR,EAASS,KAAK,SAASC,YAAY,iBAAgBrE,SAAC,aAElFI,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAIkC,GAAI,CAACyB,EAAG,QAAQjE,SAC/BI,cAAAkE,IAAA,CAAYC,UAAWC,IAAMC,GAAIC,IAAYlC,GAAI,CAACmC,QAAS,SAAS3E,SAAC,gBAE1E,EAiGQ4E,UA/FQ7E,IAAgB,IAAf,QAAC8E,GAAQ9E,EAC7B,MAAO2D,EAAMoB,GAAW9D,mBAAS,CAAC+C,KAAM,GAAIC,YAAa,GAAIe,MAAO,GAAIjE,IAAK,MACxED,EAAQmE,GAAahE,mBAAS,CAAC+C,KAAM,GAAIC,YAAa,GAAIe,MAAO,GAAIjE,IAAK,MAC1EmE,EAAWC,GAAgBlE,oBAAS,IACpCmE,EAAOC,GAAYpE,mBAAS,CAACqE,MAAM,EAAOC,QAAS,GAAIC,SAAU,WAClE,SAACC,EAAQ,QAAE7B,GAAW8B,YAAY,wBACjCD,SAAUE,EAAwB/B,QAASgC,GAAsBF,YAAY,uBAE5E9E,EAAWiF,IAAoB,IAAnB,KAAChF,EAAI,MAAEa,GAAMmE,EAC3Bd,EAAQ,IAAIpB,EAAM,CAAC9C,GAAOa,IAC1BuD,EAAU,IAAInE,EAAQ,CAACD,GAAO,IAAI,EAkDtC,IAAIiF,EAwBJ,OAtBIA,EADAZ,EACO7E,cAACqD,EAAkB,CAACC,KAAMA,EAAM/C,SAAUA,EAAUgD,QAASgC,EAAoB9E,OAAQA,IAEzFV,eAAAyD,WAAA,CAAA5D,SAAA,CACHI,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAGN,SACdI,cAAC0F,IAAK,CACFhC,MAAM,QACNnD,SAAUA,EACVc,MAAOiC,EAAKqB,MACZnE,KAAK,QACLC,OAAQA,EACRkF,WAAY,CACRC,eAAgB5F,cAAA6F,IAAA,CAAgBC,SAAS,QAAOlG,SAC5CI,cAAA+F,IAAA,WAIhB/F,cAAAV,IAAA,CAAMW,MAAI,EAACC,GAAI,GAAIkC,GAAI,CAACyB,EAAG,QAAQjE,SAC/BI,cAAC8D,IAAa,CAACC,UAAWR,EAASS,KAAK,SAASC,YAAY,iBAAgBrE,SAAC,gBAKnFI,cAAA,OAAKgG,UAAU,eAAeC,MAAOC,IAAmBtG,SAC3DG,eAACL,EAAa,CAAC4C,WAAS,EAAC6D,UAAU,SAASC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGnC,UAAW,OAAQoC,SApEvEnF,IAGd,GANA4D,EAAS,IAAID,EAAOE,MAAM,IAK1B7D,EAAEoF,iBACG3B,EAcE,CACH,MAAM,YAACjB,EAAW,KAAED,EAAI,IAAEjD,EAAG,MAAEiE,GAASrB,GAClC,QAACmD,EAAO,IAAEC,GAAOC,YAA0B,CAAC/C,cAAaD,OAAMjD,QACrE,IAAK+F,EACD,OAAO7B,EAAU8B,GAEjB9C,IAAgBD,EAChBqB,EAAS,IAAID,EAAOE,MAAM,EAAMC,QAAS,2BAEzCI,EAAuB,CAAC1B,cAAae,QAAOjE,MAAKkG,QAAStD,EAAKK,MAAO,OACjEkD,MAAKC,IAAsB,IAArB,QAACC,EAAO,KAAEC,GAAKF,EACdC,GACAE,YAAiB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM9B,SACnBT,EAAQyC,KAAK5C,MAEbU,EAAS,IAAID,EAAOE,MAAM,EAAMC,QAAS8B,EAAK9B,SAClD,IAEHiC,OAAMT,IAEHO,YAAaP,EAAIxB,QAAS,QAAQ,GAGlD,KArCgB,CACZ,IAAKkC,YAAa9D,EAAKqB,OACnB,OAAOC,EAAU,IAAInE,EAAQkE,MAAO,6BAExCS,EAAS,CAACT,MAAOrB,EAAKqB,OAAQ,QACzBkC,MAAKQ,IAAsB,IAArB,QAACN,EAAO,KAAEC,GAAKK,EAClBJ,YAAiB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM9B,QAAS6B,OAAUO,EAAY,SAC9CP,GACAjC,GAAa,EACjB,IAEHqC,OAAMT,IACHO,YAAaP,EAAIxB,QAAS,QAAQ,GAE9C,CAuBA,EA6BerF,YAAakF,EAAMnF,SAAA,CAC9BI,cAAAV,IAAA,CAAMW,MAAI,EAACmC,GAAI,CAACmF,GAAI,GAAG3H,SACnBI,cAACwH,IAAW,CAACvB,MAAO,CAACwB,QAAS,eAEjChC,MAEH,C,yWC3HWpG,YAAMqI,IAANrI,EAAkBE,IAAA,IAAC,MAACoI,GAAMpI,EAAA,MAAM,CAC7CgD,MAAO,GACPqF,OAAQ,GACRC,QAAS,EACT,0BAA2B,CAE3B,EACA,qBAAsB,CAClBtF,MAAO,GACPqF,OAAQ,GACR,WAAY,CAEZ,GAEJ,oBAAqB,CAErB,EACH,IAwBUE,I,sECzCf,MAAMC,EAAmB1I,aAAOE,IAAA,IAAC,UAAEyG,KAAcgC,GAAOzI,EAAA,OACpDS,cAACiI,IAAU,IAAKD,EAAOE,OAAK,EAACC,QAAS,CAAEC,OAAQpC,IAAe,GAD1C3G,EAEtBM,IAAA,IAAC,MAAEgI,GAAOhI,EAAA,MAAM,CACf,CAAC,MAADwD,OAAOkF,IAAeH,QAAU,CAC5BI,MAAOX,EAAMY,QAAQC,OAAOC,OAEhC,CAAC,MAADtF,OAAOkF,IAAeK,UAAY,CAC9BlJ,gBAAiBmI,EAAMY,QAAQC,OAAOC,OAE7C,IAEc,SAASE,EAAOnD,GAAkD,IAAjD,MAACoD,EAAK,SAAEhJ,EAAQ,UAAEiJ,EAAU,WAAYb,GAAMxC,EAC1E,OACIxF,cAAC+H,EAAgB,CAACa,MAAOA,EAAOC,UAAWA,KAAeb,EAAKpI,SAC1DA,GAGb,CAEA+I,EAAQG,SAAW,CACfF,MAAOG,IAAUC,OAAOC,WACxBrJ,SAAUmJ,IAAUG,QAAQD,WAC5BJ,UAAWE,IAAUI,MAAM,CAAC,QAAS,OAAQ,SAAU,S,+HCf3D,SAASC,EAAcJ,GACnB,IACIK,EADAC,EAAO,EAIX,IAAKD,EAAI,EAAGA,EAAIL,EAAO1I,OAAQ+I,GAAK,EAChCC,EAAON,EAAOO,WAAWF,KAAOC,GAAQ,GAAKA,GAGjD,IAAIhB,EAAQ,IAEZ,IAAKe,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvBf,GAAS,KAAAnF,QADMmG,GAAa,EAAJD,EAAU,KACdG,SAAS,KAAMC,OAAO,EAC9C,CAGA,OAAOnB,CACX,CAEA,SAASoB,EAAalJ,GAClB,IAAImJ,EAAW,GAOf,OANMnJ,EAAKoJ,MAAM,KAAK,KAClBD,EAAYnJ,EAAKoJ,MAAM,KAAK,GAAG,IAE7BpJ,EAAKoJ,MAAM,MAAQpJ,EAAKoJ,MAAM,KAAK,KACrCD,GAAanJ,EAAKoJ,MAAM,KAAK,GAAG,IAE7B,CACHxH,GAAI,CACAyH,QAAST,EAAc5I,IAE3BZ,SAAU+J,EAElB,CAEA,MAAMG,EAAWvK,IAAgB,IAAf,QAACkF,GAAQlF,EACvB,MAAOwK,EAAcC,GAAmBC,IAAMrJ,SAAS,OAChDsJ,MAAM,KAAC1J,EAAO,GAAE,MAAEmE,EAAQ,GAAE,KAAEwF,EAAO,IAAM,CAAC,GAAKC,cAClDC,EAAWC,cAEXC,EAAW,CACb,CAAC3B,MAAO,kBAAmB9G,QAI/B,WACI0I,aAAoB,EACxB,GALI,CAAC5B,MAAO,SAAU9G,QAgBtB,WACIuI,EAASI,eACThG,EAAQiG,QAAQpG,IACpB,IAZA,MAIMqG,EAAWC,IACbZ,EAAgB,MACQ,oBAAbY,GAAyBA,GAAU,EAQlD,OAAO7K,eAAA8K,IAAA,CAAAjL,SAAA,CACHI,cAAC2I,EAAO,CAACC,MAAM,gBAAgBC,UAAU,SAAQjJ,SAC7CI,cAAA8K,IAAA,CAAYhJ,QAhBJiJ,IACZf,EAAgBe,EAAMC,cAAc,EAeH5I,GAAI,CAAC6I,EAAG,GAAGrL,SACpCI,cAAAkL,IAAA,IAAYxB,EAAalJ,GAAQ,UAGzCT,eAAAoL,IAAA,CACI/I,GAAI,CAACgJ,GAAI,QACTC,cAAe,CACXjJ,GAAI,CACAkJ,SAAU,QAGlBC,GAAG,cACHC,SAAUzB,EACV0B,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhB1G,KAAM4G,QAAQ9B,GACdY,QAASA,EAAQhI,KAAK,MAAM/C,SAAA,CAE5BG,eAAA8K,IAAA,CAAKzI,GAAI,CAACiE,GAAI,EAAGC,GAAI,EAAG/B,QAAS,OAAQuH,cAAe,UAAUlM,SAAA,CAC9DI,cAAAkE,IAAA,CAAY6H,WAAY,IAAInM,SAAEY,GAAQ,YACtCR,cAAAkE,IAAA,CAAY8H,QAAQ,UAASpM,SAAE+E,IAC/B3E,cAAAkE,IAAA,CAAY8H,QAAQ,UAASpM,SAAEqM,YAAkB9B,QAErDnK,cAAAkM,IAAA,IACC3B,EAAS9H,KAAK0J,GACXnM,cAAAoM,IAAA,CAA8BtK,QAAS6I,EAAQhI,KAAK,KAAMwJ,EAAQrK,SAASlC,SACvEI,cAAAkE,IAAA,CAAYmI,UAAU,SAAQzM,SAAEuM,EAAQvD,SAD7BuD,EAAQvD,cAK7B,EAGK0D,2BAAWC,eAAKzC,GAAU,KAAM,K,kBC1FhChG,MAtBOvE,IAA6F,IAA5F,SAAEK,EAAQ,QAAEoM,EAAU,YAAW,UAAEjI,GAAY,EAAK,YAAEE,EAAW,SAAEuI,KAAa1M,GAAMP,EACzG,MAAMkN,EAAO1I,GAAcE,GAAsCrE,EAC3D8M,EAAa3I,GAAayI,EAChC,OACIxM,cAAA2M,IAAA,CACIH,SAAUE,EACVV,QAASA,KACLlM,EACJ8M,UAAW7I,EAAY/D,cAAA6M,IAAA,CAAkB9J,KAAM,GAAIuF,MAAM,iBAAehB,EAAU1H,SAEjF6M,GACI,C,2FCXjB,MAAMK,EAAiBvN,IAeQ,IAfP,UACI0B,EAAS,WACT8L,EAAU,aACV7L,EAAY,SACZ8L,EAAQ,UACRhH,EAAS,KACTxF,EAAI,MACJa,EAAK,WACLsE,EAAU,SACVsH,EAAQ,WACRC,EAAU,WACVC,EAAU,UACVC,EAAS,cACTC,KACGvN,GACNP,EACrB,OAAOS,cAAAiC,IAAA,CAAakC,UAAU,GAAGiJ,UAAWA,EAAWhL,GAAIiL,EAAczN,SACrEI,cAAA0C,IAAA,CACIlC,KAAMA,EACN2B,MAAO6K,EACPzM,SAAUW,EACVoM,OAAQP,EACR/G,UAAWA,EACX3E,MAAOA,EACPsE,WAAY,CACRK,UAAW,MACRL,GAEPwH,WAAYH,EAAW/L,EAAYkM,EACnCpK,KAAK,QACLmK,WAAY,CAACD,cAAaC,MACtBpN,KAEE,EAGZyN,EAAahB,eAAKO,GAyDTpH,IAvDAsC,IACX,MAAM,MACFtE,EAAK,KAAElD,EAAI,OAAEC,EAAS,CAAC,EAAC,SAAEF,EAAQ,MAAEc,EAAK,UAAE2E,EAAS,cAAEwH,EAAa,aAAEC,GAAe,EAAK,WAAEP,EAAa,CAAC,EAAC,KAC1GlJ,EAAO,OAAM,OAAEsJ,EAAM,WAAE3H,EAAU,SAAEsH,EAAQ,WAAEE,EAAU,UAAEC,GAAY,EAAI,UAAEM,GAAY,EAAK,cAAEL,EAAgB,CAAC,KAAMvN,GACrHkI,EACEgF,EAAWvM,EAAOD,KAAS,EAC7BS,EAAYR,EAAOD,GA0BvB,OACIR,cAACuN,EAAU,CACPlM,MAAOA,EACPb,KAAMA,EACNkD,MAAOA,EACPsJ,SAAUA,EACV/L,UAAWA,EACXC,aA/BcE,IAClB,IAAI,KAACZ,EAAI,MAAEa,GAASD,EAAEE,OAClBmM,IACApM,EAAQA,EAAMsM,cAEdD,IACArM,EAAQA,EAAMuM,QAEdrN,GAAUA,EAAS,CAACC,OAAMa,SAAO,EAwBjC0L,WArBY3L,IAChB,MAAM,KAACZ,EAAI,MAAEa,GAASD,EAAEE,OACxB,GAAa,WAAT0C,EAAmB,CACnB,MAAM,IAAC6J,EAAG,IAAEC,GAAOZ,EACfW,GAAOxM,EAAQwM,EACfE,IAAEC,WAAWzN,IAAaA,EAAS,CAACC,OAAMa,MAAOwM,IAC1CA,GAAOxM,EAAQyM,GACtBC,IAAEC,WAAWzN,IAAaA,EAAS,CAACC,OAAMa,MAAOyM,GAEzD,CACIR,GAAQA,EAAO,CAAC9M,OAAMa,SAAO,EAY7B2E,UAAWA,EACXL,WAAYA,EACZuH,WAAYA,EACZD,SAAUA,EACVjJ,KAAMA,EACNmJ,WAAYA,EACZC,UAAWA,EACXC,cAAeA,KACXvN,GACN,C,mCC5FV,2BA4DeuF,IAjCK,SAAC4I,GAA0D,IAArDrD,EAAQsD,UAAA5N,OAAA,QAAAgH,IAAA4G,UAAA,GAAAA,UAAA,GAAG,KAAMC,EAAYD,UAAA5N,OAAA,QAAAgH,IAAA4G,UAAA,IAAAA,UAAA,GAAQE,EAAOF,UAAA5N,OAAA,QAAAgH,IAAA4G,UAAA,GAAAA,UAAA,GAAC,CAAC,EACpE,MAAO3K,EAAS8K,GAAczN,oBAAS,GA6BvC,MAAO,CAAEwE,SA3BQkJ,eAAOC,GAAsC,IAAhCvK,EAAIkK,UAAA5N,OAAA,QAAAgH,IAAA4G,UAAA,GAAAA,UAAA,GAAG,OAAQM,EAAWN,UAAA5N,OAAA,EAAA4N,UAAA,QAAA5G,EAChDmH,EAAMR,EACPG,EAAQM,cACPD,EAAMA,EAAM,IAAME,YAAUP,EAAQM,cAExCL,GAAW,GACPrK,IACAA,EAAO,QAEX,MAAM4K,EAnCQ5K,KAClB,IAAI6K,EAEJ,OAAQ7K,GACJ,IAAK,MACD6K,EAAKC,IACL,MAEJ,IAAK,SACDD,EAAKE,IACL,MAEJ,IAAK,QACDF,EAAKG,IACL,MAEJ,QACIH,EAAKI,IAGb,OAAOJ,CAAE,EAegBK,CAAalL,EAAKmL,eACvC,GAAGP,EACC,OAAOA,EAAa,CAACH,MAAK7D,WAAU2D,OAAMJ,iBACrCtH,MAAKuI,IACCZ,GACCA,EAAY,IAAIY,IAEbA,KAEVjI,OAAMT,GACIA,IAEV2I,SAAQ,KACLhB,GAAW,EAAM,GAGjC,EAEmB9K,UACvB,C,0JCpDA,MAAME,EAAWlE,IAAwF,IAAvF,SAACgB,EAAQ,KAAEC,EAAI,MAAEkD,EAAQ,WAAU,MAAErC,EAAK,OAAEZ,EAAS,CAAC,EAAC,eAAEmF,KAAmB9F,GAAKP,EAC/F,MAAO+P,EAAcC,GAAmBtF,IAAMrJ,UAAS,GACjDoM,IAAavM,EAAOD,GACtBS,EAAYR,EAAOD,GAavB,OACIR,cAAAiC,IAAA,CAAa+J,QAAQ,WAAWoB,WAAS,EAAAxN,SACrCI,cAAA0C,IAAA,CACI6I,GAAG,8BACHvH,KAAMsL,EAAe,OAAS,WAC9BlC,WAAS,EACT1J,MAAOA,EACPrC,MAAOA,EACPc,MAAO6K,EACPG,WAAYH,EAAW/L,EAAY,GACnC8B,KAAK,QACLxC,SAhBUa,IAClB,MAAM,KAACZ,EAAI,MAAEa,GAASD,EAAEE,OACpBf,GAAUA,EAAS,CAACC,OAAMa,SAAO,EAe7Bb,KAAMA,EACNmF,WAAY,CACRC,iBACA4J,aAAcxP,cAAA6F,IAAA,CAAgBC,SAAS,MAAKlG,SACxCI,cAAA8K,IAAA,CACI,aAAW,6BACXhJ,QA7BQ2N,IAAMF,GAAiBG,IAAUA,IA8BzCC,YA5BS5E,IAC7BA,EAAMvE,gBAAgB,EA4BFoJ,KAAK,MAAKhQ,SAET0P,EAAetP,cAAC6P,IAAU,IAAK7P,cAAC8P,IAAa,YAKtDhQ,KAEE,EAItB2D,EAASqF,SAAW,CAChBpF,MAAOqF,IAAUC,OAAOC,WACxB1I,SAAUwI,IAAUgH,KAAK9G,WACzB5H,MAAO0H,IAAUC,OAAOC,WACxBzI,KAAMuI,IAAUC,OAAOC,YAGZxF,K,wHC1Df,MAAMuM,EAASzQ,IAC4F,IAD3F,QAAE6O,EAAU,GAAE,SAAE6B,EAAW,QAAO,SAAEC,EAAW,KAAI,MAAExM,EAAK,YAAEyM,EAAW,MAAE9O,EAAK,KAAEb,EAAI,SAAED,EAAQ,OAAEE,EAAO,CAAC,EAAC,YACrG2P,EAAc,KAAI,SAAEC,GAAS,EAAK,UAAErK,EAAU,GAAE,SAACwG,GAAS,EAAK,SAAE8D,GAAS,GAAO/Q,EACjG,MAAMyN,IAAavM,EAAOD,GACtBS,EAAYR,EAAOD,GACjB+P,EAAQC,mBAAQ,KACVpC,GAAW,IAAI3L,KAAIxC,GAChBD,cAAAoM,IAAA,CAAU/K,MAAOpB,EAAKiQ,GAAgC1D,WAAYvM,EAAe,SAAEL,SACrFuQ,EAAcA,EAAY,CAACF,WAAUQ,OAAQxQ,IAASA,EAAKgQ,IADnBhQ,EAAKiQ,OAIvD,CAAC9B,IASJ,OAAQrO,eAAAkC,IAAA,CAAaqO,SAAUA,EAAUnO,MAAO6K,EAAUI,WAAS,EAACrK,KAAK,QAAQiD,UAAWA,EAAWwG,SAAUA,EAAS5M,SAAA,CACtHI,cAAA0Q,IAAA,CAAYnF,GAAG,iCAAgC3L,SAAE8D,IACjD3D,eAAA4Q,IAAA,CACInQ,KAAMA,EACNoQ,QAAQ,iCACRrF,GAAG,2BACHlK,MAAOA,EACPqC,MAAOA,EACPnD,SAfca,IAClB,MAAM,KAACZ,EAAI,MAAEa,GAASD,EAAEE,OACrBf,GACCA,EAAS,CAACC,OAAMa,SACpB,EAYI+O,YAAaA,EACbhO,GAAI,CACA,0BAA2B,CACvByO,OAAQ,oBAEdjR,SAAA,CAEDyQ,GAAYrQ,cAAAoM,IAAA,CAAU/K,MAAM,GAAEzB,SAC3BI,cAAA,MAAAJ,SAAI,WAEP2Q,KAEJvD,GAAYhN,cAAAoD,IAAA,CAAAxD,SAAiBqB,MACpB,EAGlB+O,EAAOlH,SAAW,CACdsF,QAASrF,IAAU+H,MAAM7H,WACzBgH,SAAUlH,IAAUC,OACpBkH,SAAUnH,IAAUC,OACpBtF,MAAOqF,IAAUC,OAAOC,WACxB5H,MAAO0H,IAAUC,OAAOC,WACxBzI,KAAMuI,IAAUC,OAAOC,WACvB1I,SAAUwI,IAAUgH,KAAK9G,WACzBxI,OAAQsI,IAAUgI,OAClBX,YAAarH,IAAUiI,KACvBhL,UAAW+C,IAAUC,OACrBqH,SAAUtH,IAAUkI,KACpBX,SAAUvH,IAAUkI,KACpBzE,SAAUzD,IAAUkI,KACpBd,YAAapH,IAAUgH,MAGZC,K,0HC9Df,MAAMkB,EAA+BlJ,IACjC,MAAM,KACFxH,EAAI,MAAEa,EAAK,aAAEH,EAAY,WAAEiQ,EAAU,QAAE/C,EAAU,GAAE,eAAEgD,EAAiB,MAAK,UAC3EpL,EAAS,aAAEqL,EAAc7E,SAAU8E,GAAc,EAAK,aAAEC,GAAe,EAAI,aAAEC,EAAe,IAC5FxJ,EAEJ,IAAIyJ,EAAS,GAuCb,OAtCArD,EAAQsD,SAAQ,CAACjB,EAAQpH,KACrB,MAAM,MACF3F,EAAQ,GAAE,MACVrC,EAAK,KACLsQ,EAAI,YACJC,EAAc,GAAE,cAChBC,GAAgB,EAAI,SACpBrF,GAAW,EAAK,eAChBsF,EAAiB,GAAE,QACnBC,EAAU,CAAC,GACXtB,EACJ,GAAIoB,GAAmC,aAAlBA,EAA8B,CAE/C,IADaA,EAAc7J,GAChB,MACf,CACAyJ,EAAOvK,KACHnH,eAACiS,WAAQ,CAAApS,SAAA,CACLI,cAAAiS,IAAA,CAASrJ,MAAOgJ,EAAa1J,OAAK,EAAAtI,SAC9BI,cAAAkS,IAAA,CACIC,QAASnS,cAAAoS,IAAA,IACT1O,MAAOA,EACP8I,SAAU8E,GAAe9E,EACzBnL,MAAOA,EACP+P,eAAgBA,EAChBpL,UAAW8L,EAAc,GAAA3O,OAAM2O,EAAc,KAAA3O,OAAI6C,GAAcA,EAC/DmE,KAAK,QACLkI,gBAAiB,CACbC,WAAY,CACRlQ,GAAI2P,QAKnBJ,GAAQ3R,cAAA,QAAMgG,UAAU,YAAWpG,SAAE+R,MAjB3BtI,GAmBlB,IAIDtJ,eAAAkC,IAAA,CAAakC,UAAU,WAAUvE,SAAA,CAC7BI,cAAAkC,IAAA,CAAWiC,UAAU,SAAQvE,SAAEuR,IAC/BnR,cAAAuS,IAAA,CACI,aAAYpB,EACZ3Q,KAAMA,EACNa,MAAOA,EACPd,SAAUW,EACVsR,IAAKjB,EACLF,aAAcA,EACdrL,UAAWwL,EAAa5R,SAEvB6R,MAEK,EAIhBgB,EAAkBlG,eAAK2E,GAyBdwB,IAvBWnT,IAAwD,IAAvD,OAACa,EAAS,CAAC,EAAC,SAAEG,EAAQ,YAAEoS,EAAW,YAAEC,GAAYrT,EACxE,MAAM,MAACqJ,EAAK,QAAEwF,EAAU,GAAE,aAAEiD,EAAe,MAAOvR,GAAQM,GACnDiB,EAAOwR,GAAYjS,mBAASyQ,GAQnC,OACIrR,cAAAV,IAAA,CAAMgD,WAAS,EAACF,GAAIuQ,EAAY/S,SAC5BI,cAACyS,EAAe,CACZvR,aATUE,IAClB,MAAOE,QAAQ,KAACd,EAAI,MAAEa,EAAK,KAAE2C,GAAQ,CAAC,GAAK5C,EAC3CyR,EAASxR,GACLd,GAAUA,EAAS,CAACc,QAAOb,OAAMwD,QAAM,EAOnC3C,MAAOuR,GAAevR,EACtB8P,WAAYvI,EACZwF,QAASA,KACLtO,KAEL,C,kOCvEf,MAAMgT,EAAe,CACjB,CACIpP,MAAO,QACPqP,WAAYA,KAAM,EAClBC,MAAOA,KAAA,CACHC,UAAWC,kBAAW,IAAIC,MAC1BC,QAASC,kBAAS,IAAIF,SAG9B,CACIzP,MAAO,YACPqP,WAAYA,KAAM,EAClBC,MAAOA,KAAA,CACHC,UAAWK,kBAAY,IAAIH,MAC3BC,QAASC,kBAAS,IAAIF,SAG9B,CACIzP,MAAO,aACPqP,WAAYA,KAAM,EAClBC,MAAOA,KAAA,CACHC,UAAWM,kBAAa,IAAIJ,MAC5BC,QAASC,kBAAS,IAAIF,SAG9B,CACIzP,MAAO,eACPqP,WAAYA,KAAM,EAClBC,MAAOA,KAAA,CACHC,UAAWO,YAAe,IAAIL,MAC9BC,QAASC,kBAAS,IAAIF,SAG9B,CACIzP,MAAO,YACPqP,WAAYA,KAAM,EAClBC,MAAOA,KAAA,CACHC,UAAWQ,YAAY,IAAIN,MAC3BC,QAASC,kBAAS,IAAIF,UAK5BO,EAAgBA,CAACC,EAAGvS,IACfwS,IAAOD,GAAGE,OAAO,cAAgB,MAAQD,IAAOxS,GAAGyS,OAAO,cA6EtDC,IA1ESvU,IAAuC,IAAtC,MAAE8B,EAAK,SAAEd,EAAQ,MAAEmD,EAAK,KAAElD,GAAMjB,EACrD,MAAO0F,EAAM8O,GAAWnT,oBAAS,IAC1B4K,EAAUwI,GAAepT,mBAAS,MACnC2K,EAAKtG,GAAQ4G,QAAQL,GAAY,yBAAsBlE,GACtD2M,EAAgBlS,GAAqBnB,mBAAS,CACjDqS,UAAW,IAAIE,KACfC,QAAS,IAAID,KACbjQ,IAAK,eAEF+P,EAAWiB,GAAgBtT,mBAAS,IAAIuS,OACxCC,EAASe,GAAcvT,mBAAS,IAAIuS,OACpCiB,EAAWC,GAAgBzT,mBAAS8S,KAY3C,MAAMY,EAAgBvJ,IAClBiJ,EAAYjJ,EAAMC,eAClB+I,GAAS9O,EAAK,EAGlB,OACIlF,eAACiS,WAAQ,CAAApS,SAAA,CACLI,cAAA0C,IAAA,CACIlC,KAAMA,EACNa,MAAO+S,EACP1Q,MAAOA,EACPX,KAAM,QACN4C,WAAY,CACR6J,aAAcxP,cAAA6F,IAAA,CAAgBC,SAAS,MAAKlG,SACxCI,cAAA8K,IAAA,CACI,aAAW,2BACXhJ,QAASwS,EACT1E,KAAK,MACL,mBAAkBrE,EAAG3L,SAErBI,cAAAuU,IAAA,SAIZtH,UAAQ,IAEZjN,cAAAwU,IAAA,CAASjJ,GAAIA,EAAItG,KAAMA,EAAMuG,SAAUA,EAAUb,QAAS2J,EAAc7I,aAAc,CAClFC,SAAU,SACVC,WAAY,QACd/L,SACEI,cAAA6K,IAAA,CAAKzI,GAAI,CACL6I,EAAG,EACHpB,QAAS,mBACT,wBAAyB,CAAExH,SAAU,kBACrC,8BAA+B,CAC3BoS,OAAQ,mBAEd7U,SAEEI,cAAC0U,kBAAM,CACHC,OAAQ,CAACV,GACT1T,SAnDpB,SAAsBoU,GAClB,MAAQC,WAAW,UAAE3B,EAAS,QAAEG,GAAY,CAAC,GAAMuB,EACnDT,GAAa,IAAMjB,IACnBkB,GAAW,IAAMf,IACjBiB,EAAaX,EAAcT,EAAWG,IACtCrR,EAAkB,CAAEkR,YAAWG,UAASlQ,IAAK,cACzC3C,GAAUA,EAAS,CAAEC,OAAMa,MAAO,CAAE4R,YAAWG,YACvD,EA6CoBpN,UAAW,aACX8M,aAAcA,UAInB,C,wEChHJ3S,IAlBDZ,IAAiE,IAAhE,OAACa,EAAM,UAAEyU,EAAU,GAAE,QAAElK,EAAmB,SAAEmK,EAAW,CAAC,GAAEvV,EACrE,MAAM,KAAC0F,EAAI,QAAEC,EAAU,GAAE,SAAEC,EAAW,GAAE,QAAE6G,EAAU,YAAc5L,EAE5D2U,EAAa,CACf5P,SAAUA,QAAYmC,EACtB0E,WAMJ,MAJsB,oBAAZrB,IACNoK,EAAWpK,QAAUA,GAGlB3K,cAAAgV,IAAA,CAAUC,GAAIhQ,EAAM7C,GAAI0S,EAASlV,SACpCI,cAAAkV,IAAA,CAAUlP,UAAW,aAAe6O,KAAeE,EAAUnV,SACxDsF,KAEE,C,mCClBf,yHAIA,MAAMiQ,EAAa5V,IAAA,IAAC,QAAC2F,EAAO,IAAEuJ,EAAG,eAAE2G,GAAe7V,EAAA,OAAM6B,IACpDA,EAAEiU,kBACFC,IAAMjL,SAAS,CAACrG,KAAMuR,IAAkBC,QAAS,CAACvQ,MAAM,EAAMC,UAASuJ,MAAK2G,mBAAiB,CAChG,EAEKK,EAAeA,KACjB,MAAMzO,EAAOsO,IAAMI,WAAWC,IAAIC,gBAClCN,IAAMjL,SAAS,CAACrG,KAAMuR,IAAkBC,QAAS,IAAIxO,EAAM/B,MAAM,IAAQ,EAGvEuF,EAAuBvF,IACzBqQ,IAAMjL,SAAS,CAACrG,KAAM6R,IAAiBL,QAAS,CAAEvQ,SAAQ,C,mCCf9D,wCAAM6Q,EAAa,CACfC,WAAY,cACZ1L,SAAU,WACV2L,MAAO,QACPC,cAAe,iBACfC,OAAQ,SACRC,QAAS,WAGAlK,EAAoB,SAAU9B,GACvC,OAAO2L,EAAW3L,IAASA,CAC/B,C,yDCXA,0EAAMiM,EAAoBA,CAACC,EAAa1S,EAAMC,KAC1C,IAAI6C,GAAU,EACd,MAAMC,EAAM,CAAC,EAab,OAZK2P,IACD5P,GAAU,EACVC,EAAI2P,YAAc,iCAEjB1S,IACD+C,EAAI/C,KAAO,wBACX8C,GAAU,GAET7C,IACD8C,EAAI9C,YAAc,gCAClB6C,GAAU,GAEP,CAACA,UAASC,MAAI,EAGnBC,EAA4BpH,IAA+B,IAA9B,KAACoE,EAAI,YAAEC,EAAW,IAAElD,GAAInB,EACnDkH,GAAU,EACd,MAAMC,EAAM,CAAC,EAcb,OAbK/C,IACD8C,GAAU,EACVC,EAAI/C,KAAO,yBAEVC,IACD8C,EAAI9C,YAAc,gCAClB6C,GAAU,GAET/F,IACD+F,GAAU,EACVC,EAAIhG,IAAM,oBAGP,CAAC+F,UAASC,MAAI,C,mCChCzB,IAAI4P,EAAyBC,EAAQ,IACrCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CrV,OAAO,IAETqV,EAAQC,aAAU,EAClB,IAAIC,EAAiBN,EAAuBC,EAAQ,KAChDM,EAAcN,EAAQ,GACtBO,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,+HACD,eACJN,EAAQC,QAAUG,C","file":"static/js/14.8cb26fa4.chunk.js","sourcesContent":["import {styled} from \"@mui/material/styles\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {Alert} from \"../Atoms\";\r\n\r\nconst Container = styled(Grid)(({}) => ({\r\n    backgroundColor: '#F7FAFC',\r\n    boxShadow: '0px 0px 80px rgba(34, 35, 58, 0.2)',\r\n}))\r\n\r\nconst AuthContainer = ({children, alertConfig ={}, ...rest}) => {\r\n    return <Container {...rest}>\r\n        <Grid item xs={12}>\r\n            <Alert config={alertConfig}/>\r\n        </Grid>\r\n        {children}\r\n    </Container>\r\n}\r\n\r\nexport default AuthContainer;","import {useEffect, useRef, useState} from \"react\";\r\nimport {FormControl, FormHelperText, FormLabel, Grid, TextField} from \"@mui/material\";\r\n\r\nconst OTPInput = ({length = 6, onChange, name, errors={}}) => {\r\n    const [otp, setOtp] = useState(new Array(length).fill(''));\r\n    const refs = useRef([]),\r\n        errorText = errors[name];\r\n\r\n    const handleChange = (index, e) => {\r\n        const {value} = e.target;\r\n        const newOtp = [...otp];\r\n        newOtp[index] = value.substring(value.length - 1);\r\n        setOtp(newOtp);\r\n        if(newOtp.join('').length === length){\r\n            onChange && onChange({value: newOtp.join(''), name})\r\n        }\r\n        //if next element exists then focus it.\r\n        if (newOtp[index] && index <= length-1 && refs.current[+index + 1]) {\r\n            const nextField = refs.current[+index + 1]\r\n            nextField && nextField.focus();\r\n        }\r\n        //if prev element exists focus on it.\r\n        else if(!newOtp[index]) {\r\n            if(index === 0){\r\n                return refs.current[0].focus()\r\n            }\r\n            const prevField = refs.current[+index - 1];\r\n            prevField && prevField.focus();\r\n        }\r\n    }\r\n\r\n\r\n    const onClick = (index) => {\r\n        refs.current[index].setSelectionRange(1,1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (refs.current[0]) {\r\n            refs.current[0].focus()\r\n        }\r\n    }, [])\r\n\r\n    const handleKeyDown = (index, e) => {\r\n        if (e.key === 'Backspace' && index > 0 && !otp[index]) {\r\n            const prevField = refs.current[index - 1];\r\n            prevField && prevField.focus();\r\n        }\r\n    };\r\n\r\n    return <FormControl aria-autocomplete='none'>\r\n        <FormLabel error={!!errorText} sx={{fontSize: 14}}>OTP</FormLabel>\r\n        <Grid container width={'100%'} spacing={1}>\r\n            {otp.map((value, index) => {\r\n                return <Grid item xs={12 / length}>\r\n                    <TextField\r\n                        key={`${index}`}\r\n                        onClick={onClick.bind(this, index)}\r\n                        inputRef={ref => refs.current[index] = ref}\r\n                        value={value}\r\n                        onChange={handleChange.bind(this, index)}\r\n                        autoComplete='false'\r\n                        size='small'\r\n                        error={!!errorText}\r\n                        onKeyDown={(e) => handleKeyDown(index, e)}\r\n                        sx={{\r\n                            '.MuiInputBase-root': {\r\n                                width: 37\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n        {errorText && <FormHelperText error={!!errorText}>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nexport default OTPInput;","import {Grid, InputAdornment, Typography} from \"@mui/material\";\r\nimport {MailOutline} from \"@mui/icons-material\";\r\nimport {Input, LoadingButton, Password} from \"../../components/Atoms\";\r\nimport {isEmailValid, verticalAlignStyle} from \"../../utils/utils\";\r\nimport {useState} from \"react\";\r\nimport AuthContainer from \"../../components/common/AuthContainer\";\r\nimport CompanyText from \"../../components/Atoms/CompanyText\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../../components/client/routes\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {validatePasswordsPreLogin} from \"./utils\";\r\nimport OTPInput from \"../../components/Atoms/form/OTPInput\";\r\n\r\nconst ChangePasswordForm = ({form, onChange, loading, errors}) => {\r\n    return <>\r\n        <Grid item xs={12}>\r\n            {/*<Input type='number' label='OTP' onChange={onChange} value={form.otp} name='otp' errors={errors}/>*/}\r\n            <OTPInput length={6} onChange={onChange} name='otp' errors={errors} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Password label='New Password' onChange={onChange} value={form.pass} name='pass' errors={errors}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Password label='Confirm Password' onChange={onChange} value={form.confirmPass} name='confirmPass'\r\n                      errors={errors} autoComplete={'false'}/>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{m: 'auto'}}>\r\n            <LoadingButton isLoading={loading} type='submit' loadingText='Please wait...'>Submit</LoadingButton>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{m: 'auto'}}>\r\n            <Typography component={Link} to={LOGIN_LINK} sx={{display: 'block'}}>Sign In</Typography>\r\n        </Grid>\r\n    </>\r\n}\r\nconst ForgotPassword = ({history}) => {\r\n    const [form, setForm] = useState({pass: '', confirmPass: '', email: '', otp: ''}),\r\n        [errors, setErrors] = useState({pass: '', confirmPass: '', email: '', otp: ''}),\r\n        [isOtpSent, setIsOtpSent] = useState(false),\r\n        [alert, setAlert] = useState({open: false, message: '', severity: 'error'}),\r\n        {mutation, loading} = useMutation('/api/forgotPassword'),\r\n        {mutation: changePasswordMutation, loading: isChangingPassword} = useMutation('/api/forgotPassword');\r\n\r\n    const onChange = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n        setErrors({...errors, [name]: ''})\r\n    }\r\n\r\n    const closeAlert = () => {\r\n        setAlert({...alert, open: false});\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        closeAlert();\r\n        e.preventDefault();\r\n        if (!isOtpSent) {\r\n            if (!isEmailValid(form.email)) {\r\n                return setErrors({...errors, email: 'Please enter valid Email'})\r\n            }\r\n            mutation({email: form.email}, 'post')\r\n                .then(({success, data}) => {\r\n                    notification(data?.message, success ? undefined : 'error');\r\n                    if (success) {\r\n                        setIsOtpSent(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    notification(err.message, 'error')\r\n                })\r\n        } else {\r\n            const {confirmPass, pass, otp, email} = form;\r\n            const {isValid, err} = validatePasswordsPreLogin({confirmPass, pass, otp});\r\n            if (!isValid) {\r\n                return setErrors(err);\r\n            }\r\n            if (confirmPass !== pass) {\r\n                setAlert({...alert, open: true, message: 'Passwords do not match'})\r\n            } else {\r\n                changePasswordMutation({confirmPass, email, otp, newPass: form.pass}, 'put')\r\n                    .then(({success, data}) => {\r\n                        if (success) {\r\n                            notification(data?.message);\r\n                            history.push(LOGIN_LINK);\r\n                        } else {\r\n                            setAlert({...alert, open: true, message: data.message});\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        debugger\r\n                        notification(err.message, 'error')\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    let comp;\r\n    if (isOtpSent) {\r\n        comp = <ChangePasswordForm form={form} onChange={onChange} loading={isChangingPassword} errors={errors}/>\r\n    } else {\r\n        comp = <>\r\n            <Grid item xs={12}>\r\n                <Input\r\n                    label='Email'\r\n                    onChange={onChange}\r\n                    value={form.email}\r\n                    name='email'\r\n                    errors={errors}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">\r\n                            <MailOutline/>\r\n                        </InputAdornment>,\r\n                    }}/>\r\n            </Grid>\r\n            <Grid item xs={12} sx={{m: 'auto'}}>\r\n                <LoadingButton isLoading={loading} type='submit' loadingText='Please wait...'>Verify</LoadingButton>\r\n            </Grid>\r\n        </>\r\n    }\r\n\r\n    return <div className='auth-wrapper' style={verticalAlignStyle}>\r\n        <AuthContainer container direction='column' gap={2} px={8} py={4} component={'form'} onSubmit={onSubmit}\r\n                       alertConfig={alert}>\r\n            <Grid item sx={{mb: 3}}>\r\n                <CompanyText style={{pointer: 'default'}}/>\r\n            </Grid>\r\n            {comp}\r\n        </AuthContainer>\r\n    </div>\r\n}\r\n\r\nexport default ForgotPassword","import React from 'react';\r\nimport {FormControl, FormControlLabel, Switch as MuiSwitch} from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst SwitchStyled = styled(MuiSwitch)(({theme}) => ({\r\n        width: 50,\r\n        height: 27,\r\n        padding: 7,\r\n        '& .MuiSwitch-switchBase': {\r\n\r\n        },\r\n        '& .MuiSwitch-thumb': {\r\n            width: 20,\r\n            height: 20,\r\n            '&:before': {\r\n\r\n            }\r\n        },\r\n        '&.MuiSwitch-track': {\r\n\r\n        }\r\n    })\r\n)\r\n\r\nconst Switch = ({label, name, placement = 'start', value, onChange, disabled, sx, shouldDisplay = true}) => {\r\n    const handleChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        if (onChange) onChange({name, value: checked});\r\n    }\r\n\r\n    return <FormControl component='fieldset' sx={{display: shouldDisplay ? 'inline' : 'none', ...sx}}>\r\n        <FormControlLabel\r\n            control={<SwitchStyled\r\n                color={'primary'}\r\n                onChange={handleChange}\r\n                checked={!!value}\r\n                name={name}\r\n            />}\r\n            label={label}\r\n            labelPlacement={placement}\r\n            disabled={disabled}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nexport default Switch;","import MuiTooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport {styled} from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }) => (\r\n    <MuiTooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default function Tooltip({title, children, placement=\"right\", ...props}) {\r\n    return (\r\n        <BootstrapTooltip title={title} placement={placement} {...props}>\r\n            {children}\r\n        </BootstrapTooltip>\r\n    );\r\n}\r\n\r\nTooltip.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    placement: PropTypes.oneOf(['right', 'left', 'bottom', 'top'])\r\n}","import {Avatar, Box, Divider, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {Tooltip} from \"./index\";\r\nimport React, {memo} from 'react'\r\nimport {getUserDetail} from \"../../utils/utils\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../constants\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {changePasswordModal} from \"../../actions/component.action\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    let userName = ''\r\n    if (!!name.split(' ')[0]) {\r\n        userName = (name.split(' ')[0][0])\r\n    }\r\n    if (!!name.split(' ') && name.split(' ')[1]) {\r\n        userName += (name.split(' ')[1][0]);\r\n    }\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: userName\r\n    };\r\n}\r\n\r\nconst UserMenu = ({history}) => {\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const {user: {name = '', email = '', role = ''} = {}} = getUserDetail();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = [\r\n        {title: 'Change Password', onClick: handlePasswordChange},\r\n        {title: 'Logout', onClick: onLogout},\r\n    ];\r\n\r\n    function handlePasswordChange() {\r\n        changePasswordModal(true);\r\n    }\r\n\r\n    const onOpen = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const onClose = (callback) => {\r\n        setAnchorElUser(null);\r\n        if (typeof callback === 'function') callback();\r\n    };\r\n\r\n    function onLogout() {\r\n        dispatch(logout());\r\n        history.replace(LOGIN_LINK);\r\n    }\r\n\r\n    return <Box>\r\n        <Tooltip title=\"Open settings\" placement='bottom'>\r\n            <IconButton onClick={onOpen} sx={{p: 0}}>\r\n                <Avatar {...stringAvatar(name || '')} />\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            sx={{mt: '45px'}}\r\n            MenuListProps={{\r\n                sx: {\r\n                    minWidth: '8em'\r\n                }\r\n            }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorElUser}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorElUser)}\r\n            onClose={onClose.bind(null)}\r\n        >\r\n            <Box sx={{px: 2, py: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontWeight={600}>{name || 'No Name'}</Typography>\r\n                <Typography variant='caption'>{email}</Typography>\r\n                <Typography variant='caption'>{getRoleNameString(role)}</Typography>\r\n            </Box>\r\n            <Divider/>\r\n            {settings.map((setting) => (\r\n                <MenuItem key={setting.title} onClick={onClose.bind(null, setting.onClick)}>\r\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                </MenuItem>\r\n            ))}\r\n        </Menu>\r\n    </Box>\r\n}\r\n\r\nexport default withRouter(memo(UserMenu, () => true))","import { Button, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoadingButton = ({ children, variant = 'contained', isLoading = false, loadingText, disabled, ...rest }) => {\r\n    const text = isLoading ? !!loadingText ? loadingText: children : children\r\n    const isDisabled = isLoading || disabled;\r\n    return (\r\n        <Button\r\n            disabled={isDisabled}\r\n            variant={variant}\r\n            {...rest}\r\n            startIcon={isLoading ? <CircularProgress size={20} color='inherit' /> : undefined}\r\n        >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nLoadingButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\r\n    loadingText: PropTypes.string\r\n}\r\n\r\nexport default LoadingButton","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            formControlSx,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth} sx={formControlSx}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, formControlSx = {}, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            formControlSx={formControlSx}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","import {FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst Select = ({ options = [], labelKey = 'label', valueKey = 'id', label, menuLabelCb, value, name, onChange, errors={},\r\n                    renderValue = null, showNone=false, className='',disabled=false, required=false }) => {\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n    const items = useMemo(() => {\r\n        return (options || []).map(item => {\r\n            return <MenuItem value={item[valueKey]} key={item[valueKey]} disabled={!!item['disabled']}>\r\n                {menuLabelCb ? menuLabelCb({labelKey, option: item}) : item[labelKey]}\r\n            </MenuItem>\r\n        })\r\n    }, [options])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if(onChange){\r\n            onChange({name, value});\r\n        }\r\n    }\r\n\r\n    return  <FormControl required={required} error={hasError} fullWidth size='small' className={className} disabled={disabled}>\r\n        <InputLabel id=\"demo-simple-select-error-label\">{label}</InputLabel>\r\n        <MuiSelect\r\n            name={name}\r\n            labelId=\"demo-simple-select-error-label\"\r\n            id=\"demo-simple-select-error\"\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            renderValue={renderValue}\r\n            sx={{\r\n                '.MuiOutlinedInput-input': {\r\n                    border: 'none !important'\r\n                }\r\n            }}\r\n        >\r\n            {showNone && <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>}\r\n            {items}\r\n        </MuiSelect>\r\n        {hasError && <FormHelperText>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nSelect.proptype = {\r\n    options: PropTypes.array.isRequired,\r\n    labelKey: PropTypes.string,\r\n    valueKey: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    renderValue: PropTypes.node,\r\n    className: PropTypes.string,\r\n    showNone: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    menuLabelCb: PropTypes.func\r\n}\r\n\r\nexport default Select;","import {Fragment, memo, useState} from \"react\";\r\nimport {FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Tooltip} from \"@mui/material\";\r\n\r\nconst RadioButtonsGroupControlled = (props) => {\r\n    const {\r\n        name, value, handleChange, radioTitle, options = [], labelPlacement = 'end',\r\n        className, defaultValue, disabled: alldisabled = false, displayAsRow = true, classNameGrp = ''\r\n    } = props;\r\n\r\n    let radios = []\r\n    options.forEach((option, i) => {\r\n        const {\r\n            label = '',\r\n            value,\r\n            info,\r\n            tooltipText = '',\r\n            shouldDisplay = true,\r\n            disabled = false,\r\n            labelClassName = '',\r\n            labelSx = {}\r\n        } = option;\r\n        if (shouldDisplay && shouldDisplay === 'function') {\r\n            const show = shouldDisplay(props)\r\n            if (!show) return;\r\n        }\r\n        radios.push(\r\n            <Fragment key={i}>\r\n                <Tooltip title={tooltipText} arrow>\r\n                    <FormControlLabel\r\n                        control={<Radio/>}\r\n                        label={label}\r\n                        disabled={alldisabled || disabled}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        className={labelClassName ? `${labelClassName} ${className}` : className}\r\n                        role='radio'\r\n                        componentsProps={{\r\n                            typography: {\r\n                                sx: labelSx\r\n                            }\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                {info && <span className='radioInfo'>{info}</span>}\r\n            </Fragment>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>{radioTitle}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={radioTitle}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                row={displayAsRow}\r\n                defaultValue={defaultValue}\r\n                className={classNameGrp}\r\n            >\r\n                {radios}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst RadioButtonPure = memo(RadioButtonsGroupControlled)\r\n\r\nconst RadioButtonsGroup = ({config = {}, onChange, containerSx, parentValue}) => {\r\n    const {title, options = [], defaultValue = '', ...rest} = config;\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value, type} = {}} = e;\r\n        setValue(value);\r\n        if (onChange) onChange({value, name, type});\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={containerSx}>\r\n            <RadioButtonPure\r\n                handleChange={handleChange}\r\n                value={parentValue || value}\r\n                radioTitle={title}\r\n                options={options}\r\n                {...rest}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioButtonsGroup","import { DateRangePicker as Picker } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport { endOfDay, startOfDay, startOfWeek, startOfMonth, startOfQuarter, startOfYear } from 'date-fns'\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport React, { Fragment, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    InputAdornment,\r\n    IconButton,\r\n    Popover,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { DateRange } from \"@mui/icons-material\";\r\nimport './dateRangePicker.css'\r\n\r\nconst staticRanges = [\r\n    {\r\n        label: 'Today',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfDay(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Week',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfWeek(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Month',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfMonth(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Quarter',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfQuarter(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Year',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfYear(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    }\r\n]\r\n\r\nconst getDateString = (s, e) => {\r\n    return moment(s).format('MM/DD/YYYY') + ' - ' + moment(e).format('MM/DD/YYYY')\r\n}\r\n\r\nconst DateRangePicker = ({ value, onChange, label, name }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const id = open && Boolean(anchorEl) ? 'transition-popper' : undefined;\r\n    const [selectionRange, setSelectionRange] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [textField, setTextField] = useState(getDateString())\r\n\r\n    function handleSelect(ranges) {\r\n        const { selection: { startDate, endDate } = {} } = ranges;\r\n        setStartDate(() => startDate)\r\n        setEndDate(() => endDate)\r\n        setTextField(getDateString(startDate, endDate))\r\n        setSelectionRange({ startDate, endDate, key: 'selection' })\r\n        if (onChange) onChange({ name, value: { startDate, endDate } })\r\n    }\r\n\r\n\r\n    const togglePicker = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                name={name}\r\n                value={textField}\r\n                label={label}\r\n                size={'small'}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle Date range picker\"\r\n                            onClick={togglePicker}\r\n                            edge=\"end\"\r\n                            aria-describedby={id}\r\n                        >\r\n                            <DateRange />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n                readOnly\r\n            />\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={togglePicker} anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    bgcolor: 'background.paper',\r\n                    '&.rdrStaticRangeLabel': { fontSize: \"14px!important\" },\r\n                    '& .rdrDayNumber span::after': {\r\n                        bottom: '1px !important'\r\n                    }\r\n                }}\r\n                >\r\n                    <Picker\r\n                        ranges={[selectionRange]}\r\n                        onChange={handleSelect}\r\n                        className={'basePicker'}\r\n                        staticRanges={staticRanges}\r\n                    />\r\n                </Box>\r\n            </Popover>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DateRangePicker","import {Collapse, Alert as MuiAlert} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Alert = ({config, classname='', onClose = undefined, inStyles = {}}) => {\r\n    const {open, message = '', severity = '', variant = 'standard'} = config;\r\n\r\n    const alertProps = {\r\n        severity: severity || undefined,\r\n        variant\r\n    }\r\n    if(typeof onClose === 'function'){\r\n        alertProps.onClose = onClose;\r\n    }\r\n\r\n    return <Collapse in={open} sx={inStyles}>\r\n        <MuiAlert className={'alertbase ' + classname} {...alertProps}>\r\n            {message}\r\n        </MuiAlert>\r\n    </Collapse>\r\n}\r\n\r\nexport default Alert;","import store from \"../store\";\r\nimport {CHANGE_PASSWORD, DELETE_COMPONENT} from \"./types\";\r\n\r\n\r\nconst showDelete = ({message, uri, afterSuccessCb}) => (e) => {\r\n    e.stopPropagation();\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {open: true, message, uri, afterSuccessCb}})\r\n}\r\n\r\nconst removeDelete = () => {\r\n    const data = store.getState().app.deleteComponent;\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {...data, open: false}})\r\n}\r\n\r\nconst changePasswordModal = (open) => {\r\n    store.dispatch({type: CHANGE_PASSWORD, payload: { open }})\r\n}\r\n\r\nexport {\r\n    showDelete,\r\n    removeDelete,\r\n    changePasswordModal\r\n}","const ROLE_NAMES = {\r\n    superAdmin: 'Super Admin',\r\n    dispatch: 'Dispatch',\r\n    admin: 'Admin',\r\n    ownerOperator: 'Owner Operator',\r\n    driver: 'Driver',\r\n    support: 'Support',\r\n}\r\n\r\nexport const getRoleNameString = function (role) {\r\n    return ROLE_NAMES[role] || role;\r\n}","const validatePasswords = (currentPass, pass, confirmPass) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!currentPass) {\r\n        isValid = false\r\n        err.currentPass = 'Please enter Current Password'\r\n    }\r\n    if (!pass) {\r\n        err.pass = 'Please enter Password'\r\n        isValid = false\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    return {isValid, err};\r\n}\r\n\r\nconst validatePasswordsPreLogin = ({pass, confirmPass, otp}) => {\r\n    let isValid = true;\r\n    const err = {}\r\n    if (!pass) {\r\n        isValid = false\r\n        err.pass = 'Please enter Password'\r\n    }\r\n    if (!confirmPass) {\r\n        err.confirmPass = 'Please enter Confirm Password'\r\n        isValid = false\r\n    }\r\n    if (!otp) {\r\n        isValid = false;\r\n        err.otp = 'Please enter OTP'\r\n    }\r\n\r\n    return {isValid, err};\r\n}\r\n\r\nexport {\r\n    validatePasswords,\r\n    validatePasswordsPreLogin\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\nexports.default = _default;"],"sourceRoot":""}