{"version":3,"sources":["components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","hooks/useFetch.js","actions/openBoard.action.js","views/openBoard/LoadDetails.js","views/openBoard/PickupDetails.js","views/openBoard/NewTrulLoadDetails.js","components/common/BrokerSetupMessage.js"],"names":["CircularIndeterminate","props","_jsx","_Box","sx","height","display","justifyContent","alignItems","marginLeft","children","CircularProgress","StyledPagination","styled","Pagination","_ref","theme","breakpoints","down","width","StyledStack","Stack","_ref2","flexWrap","TablePagination","_ref3","data","onPageChange","page","count","limit","onPageSizeChange","length","setLength","useState","useEffect","Array","isArray","_jsxs","direction","Typography","color","fontSize","Select","name","label","value","options","id","className","onChange","_ref4","Math","ceil","variant","size","e","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","columns","config","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","_","isFunction","bgcolor","fontWeight","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","row","dataKey","rowIndex","hasDeletePermission","rowCellPadding","onRowClick","rowStyleCb","rowStyle","deleteCell","component","scope","_IconButton","onClick","bind","_id","disabled","cell","i","renderer","emptyState","valueFormatter","get","hover","preventDefault","cursor","getTableCell","EnhancedTable","_ref6","history","loading","onRefetch","isRefetching","actions","tableState","setTableState","dialog","setDialog","open","hasOnClickUrl","emptyMessage","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","React","useRef","Actions","isValidElement","_Fragment","url","push","stopPropagation","title","_Grid","container","p","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","Fragment","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","style","textAlign","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","position","getLoader","innerHeight","window","item","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","Dialog","onClose","withRouter","memo","InputPure","type","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","toLowerCase","console","error","opts","opt","unshift","Input","InputField","arguments","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","target","values","l","selected","useFetch","callback","setData","setLoading","setError","setIsRefetching","requestCall","uri","queryParams","concat","serialize","requestGet","showTriggers","then","result","finally","refetch","orgId","bidChRobinsonLoad","async","loadNumber","body","response","axios","post","getGoUrl","success","log","bookChRobinsonLoad","placeNewTrulBid","requestPost","loadDetail","baseUrl","notification","status","message","placeNewTrulCounterOffer","newTrulFinalOffer","saveCHLoadToDb","isBooked","payload","getBaseUrl","getOpenBoardLoads","filters","pageIndex","dispatch","GET_SHIPMENTS","results","totalResults","getBabylonianServerUrl","ArrowIcon","ArrowForwardIcon","transform","Typo","labelSx","mr","formatTimeZone","timeDate","tz","moment","utcOffset","format","BasicLoadDetails","trip","weight","equipment","LoadDetails","location","state","modesString","standard","getParsedLoadEquipment","distance","miles","pounds","origin","stateCode","postalCode","city","pickupScheduleRequest","destination","destinationName","destinationStateCode","destinationPostal","destinationCity","scheduleRequest","dropScheduleRequest","pickUpByDate","deliverBy","calculatedPickUpByDateTime","calculatedDeliverByDateTime","stops","timeZonePickup","_tzm","timeZoneDeliveryBy","originDetails","calculatedArriveByEndDateTime","calculatedArriveByStartDateTime","originReadyByRange","destinationDetails","destEndDateTime","destStartDateTime","deliverByRange","Modal","showClose","titleStyles","preventBackdropClick","spacing","xs","sm","Details","date","appointment","avgLoadTime","loadBy","loadByType","LeftDetails","geo","early_datetime","late_datetime","appointment_required","RightDetails","NewTrulLoadDetails","callDetail","loaded_miles","client","compliance_link","client_name","postDetailToNewTrul","useCallback","CARRIER_EMAIL","MC_NUMBER","textDecoration","href","BrokerSetupMessage","elevation","_ErrorOutline","align"],"mappings":"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","file":"static/js/6.761dab78.chunk.js","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, []);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import axios from \"axios\";\r\nimport { notification } from \"./alert\";\r\nimport { GET_CHROBINSON_LOADS, GET_SHIPMENTS } from \"./types\";\r\nimport { getBabylonianServerUrl, getBaseUrl, getGoUrl } from \"../config\";\r\nimport { requestGet, requestPost } from \"../utils/request\";\r\nimport { getUserDetail } from \"../utils/utils\";\r\n\r\nconst { user: { orgId = null } = {} } = getUserDetail();\r\n\r\nexport const bidChRobinsonLoad = async (loadNumber, body, callback) => {\r\n    try {\r\n        const response = await axios.post(getGoUrl() + '/CHBidding' + `?loadNumber=${loadNumber}?orgId=${orgId}`, body);\r\n        const { data, success } = response;\r\n        if (callback) callback(success, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const bookChRobinsonLoad = async (loadNumber, body, callback) => {\r\n    try {\r\n        const response = await axios.post(getGoUrl() + '/bookload?orgId=' + orgId, body);\r\n        const { data, success } = response;\r\n        if (callback) callback(success, data);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const placeNewTrulBid = async (body, loadNumber, callback) => {\r\n    try {\r\n        const { success, data } = await requestPost({ uri: \"/api/bid/newTrulBidding/\" + loadNumber, body });\r\n        if (success) {\r\n            delete body.loadDetail;\r\n            const { success, data } = await requestPost({\r\n                baseUrl: getGoUrl(),\r\n                uri: '/newTrulBidLoad?orgId=' + orgId,\r\n                body\r\n            })\r\n            if (success) {\r\n                notification('Bid submitted successfully');\r\n            }\r\n            if (callback) callback(success, data);\r\n            if (data.status === 'error') {\r\n                notification(data.message, 'error')\r\n            }\r\n        } else {\r\n            notification(data.message, 'error')\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const placeNewTrulCounterOffer = (body, callback) => async () => {\r\n    try {\r\n        const { success, data } = await requestPost({\r\n            baseUrl: getGoUrl(),\r\n            uri: '/newTrulCounterOffer?orgId=' + orgId,\r\n            body\r\n        });\r\n        if (callback) callback(success, data);\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        notification(e.message, 'error')\r\n    }\r\n}\r\n\r\nexport const newTrulFinalOffer = (body, callback) => async () => {\r\n    try {\r\n        const { success, data } = await requestPost({\r\n            baseUrl: getGoUrl(),\r\n            uri: '/newTrulFinalOffer?orgId=' + orgId,\r\n            body\r\n        });\r\n        if (callback) callback(success, data);\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        notification(e.message, 'error')\r\n    }\r\n}\r\n\r\nexport const getShipments = (payload) => {\r\n    const config = {\r\n        method: \"post\",\r\n        url: getGoUrl() + \"/shipments\",\r\n        data: payload,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        return new Promise((resolve, reject) => {\r\n            axios(config)\r\n                .then(function (response) {\r\n                    resolve(response);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    reject(error)\r\n                    notification(error.message || '', 'error')\r\n                });\r\n        });\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport const getAllBiddings = async () => {\r\n    try {\r\n        const { success, data } = await requestGet({ uri: '/api/bid/biddings' })\r\n        if (success) return data;\r\n        else {\r\n            return {\r\n                totalCount: 0,\r\n                data: []\r\n\r\n            }\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n/**\r\n * {\r\n *     pagesize,\r\n *     pageNum\r\n *     origin state, city\r\n *     destination state, city\r\n *     equipment,\r\n *     start Date range\r\n *     end date range\r\n * }\r\n */\r\n\r\nexport const getBiddings = (payload) => (dispatch) => {\r\n    const config = {\r\n        method: \"get\",\r\n        url: getBaseUrl() + \"/api/bid/biddings\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    dispatch({ type: GET_SHIPMENTS, payload: { data: {}, loading: true } });\r\n    try {\r\n        axios(config)\r\n            .then(async function ({ data: { data: dbData = [] } = {} }) {\r\n                const shipmentsResData = await getShipments(payload);\r\n\r\n                const { data: { results = [], totalResults, statusCode, message = '' } = {} } = shipmentsResData;\r\n                if (statusCode === 401) {\r\n                    notification(message, 'error');\r\n                }\r\n\r\n                results.forEach(function (shipment, index) {\r\n                    const { loadNumber } = shipment;\r\n                    dbData.forEach(function (bid) {\r\n                        if (\r\n                            parseInt(bid.loadNumber) === loadNumber &&\r\n                            bid.status === true\r\n                        ) {\r\n                            results.splice(index, 1);\r\n                        }\r\n                    });\r\n                });\r\n                //--------------------------\r\n                dispatch({\r\n                    type: GET_SHIPMENTS,\r\n                    payload: {\r\n                        data: { results, totalResults: totalResults },\r\n                        loading: false,\r\n                    },\r\n                });\r\n                //--------------------------\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                notification(error.message, 'error')\r\n                dispatch({\r\n                    type: GET_SHIPMENTS,\r\n                    payload: { data: {}, loading: false, message: error.message },\r\n                });\r\n            });\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport const saveCHLoadToDb = async (row = {}, isBooked = false) => {\r\n    try {\r\n        let payload = { isBooked, loadNumber: row.loadNumber, loadDetail: row };\r\n        return await axios.post(getBaseUrl() + '/api/chRobinson', payload);\r\n    } catch (e) {\r\n        console.log('response', e.response)\r\n    }\r\n}\r\n\r\nexport const getCHLoads = (onlyDelivered = false) => async (dispatch) => {\r\n    try {\r\n        let { success, data } = await requestGet({ uri: '/api/chRobinson' })\r\n        if (success) {\r\n            if (onlyDelivered) {\r\n                const { loads } = data;\r\n                data.loads = loads.filter(load => load.isDelivered)\r\n            }\r\n            dispatch({ type: GET_CHROBINSON_LOADS, payload: data });\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const getNewTrulLoads = (pageSize, pageIndex, params) => async dispatch => {\r\n    dispatch({\r\n        type: GET_SHIPMENTS,\r\n        payload: {\r\n            newTrulLoads: { data: [], totalResults: 0 },\r\n            loading: true,\r\n        },\r\n    });\r\n    const { data: allBiddings } = await getAllBiddings();\r\n    const { success, data = {} } = await requestPost({\r\n        uri: '/newTrulGetAllLoads', baseUrl: getGoUrl(),\r\n        body: {\r\n            \"page\": pageIndex + 1,\r\n            \"pagesize\": pageSize,\r\n            \"params\": params ? params : ''\r\n        }\r\n    }\r\n    )\r\n\r\n    if (success) {\r\n        const { pagination: { total_items } = {}, data: list = [] } = data\r\n        if (allBiddings) {\r\n            list.forEach(load => {\r\n                allBiddings.forEach(bidding => {\r\n                    if (+bidding.loadNumber === +load.id) {\r\n                        load.bidAmount = bidding.bidAmount;\r\n                        load.bidLevel = bidding.bidLevel;\r\n                        load.status = bidding.status;\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: list, totalResults: total_items },\r\n                loading: false,\r\n            },\r\n        });\r\n    }\r\n\r\n    if (!success) {\r\n        notification(data.message, 'error')\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0 },\r\n                loading: false,\r\n            },\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const getOpenBoardLoads = (filters) => async (dispatch) => {\r\n    const { user: { orgId = null } = {} } = getUserDetail();\r\n    //pageIndex works on index which starts from 0\r\n    filters.pageIndex = filters.pageIndex - 1;\r\n\r\n    dispatch({\r\n        type: GET_SHIPMENTS,\r\n        payload: {\r\n            data: { results: [], totalResults: 0 }, loading: true\r\n        }\r\n    });\r\n    try {\r\n        const { success, data = [] } = await requestPost({\r\n            baseUrl: getBabylonianServerUrl(),\r\n            uri: '/fetchOpenBoardLoads?orgId=' + orgId,\r\n            body: filters\r\n        })\r\n        if (success) {\r\n            dispatch({\r\n                type: GET_SHIPMENTS,\r\n                payload: {\r\n                    data: { results: data.data, totalResults: data.totalResults, message: data.message }, loading: false\r\n                }\r\n            });\r\n            return\r\n        }\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0, message: data.message }, loading: false\r\n            }\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: GET_SHIPMENTS,\r\n            payload: {\r\n                data: { results: [], totalResults: 0 }, loading: false\r\n            }\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Grid, Stack, Typography\r\n} from \"@mui/material\";\r\nimport moment from 'moment'\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport Modal from \"../../components/Atoms/Modal\";\r\nimport Details from \"./PickupDetails\";\r\nimport {getParsedLoadEquipment} from \"./constants\";\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst ArrowIcon = styled(ArrowForwardIcon)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        transform: 'rotate(90deg)',\r\n        fontSize: '5rem'\r\n    }\r\n}))\r\n\r\nconst Typo = ({label = '', value = '', labelSx = {}}) => {\r\n    return <Stack direction={'row'}>\r\n        <Typography sx={{mr: 1, ...labelSx}}>{label}:</Typography>\r\n        <Typography sx={labelSx}>{value}</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst formatTimeZone = (timeDate, tz = '-0500') => {\r\n    return moment(timeDate).utcOffset(tz).format('HH:mm:ss')\r\n}\r\n\r\nconst BasicLoadDetails = ({loadNumber = '', trip, weight, equipment = ''}) => {\r\n    return (\r\n        <Box display={'flex'} justifyContent={'center'}>\r\n            <Stack alignItems={'center'}>\r\n                <Typo value={loadNumber} label={'Load Number'} labelSx={{fontSize: 32}}/>\r\n                <Typo value={equipment} label={'Equipment'} labelSx={{fontSize: 24}}/>\r\n                <Typo value={weight + ' lbs'} label={'Weight'} labelSx={{fontSize: 24}}/>\r\n                <Typo value={(trip ?? 0) + ' miles'} label={'Trip'} labelSx={{fontSize: 24}}/>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst LoadDetails = (props) => {\r\n    const {location: {state: data = {}} = {}} = props,\r\n        {modesString = '', standard = ''} = getParsedLoadEquipment(data),\r\n        equipment = modesString + ' ' + standard,\r\n        {\r\n            loadNumber = '', distance: {miles = ''} = {}, weight: {pounds = ''} = {},\r\n            origin: {name = '', stateCode, postalCode = '', city = '', pickupScheduleRequest} = {},\r\n            destination: {\r\n                name: destinationName = '', stateCode: destinationStateCode, postalCode: destinationPostal = '',\r\n                city: destinationCity = '', scheduleRequest: dropScheduleRequest = ''\r\n            } = {},\r\n            pickUpByDate = '',\r\n            deliverBy = '',\r\n            calculatedPickUpByDateTime = '',\r\n            calculatedDeliverByDateTime = '',\r\n            stops = []\r\n        } = data;\r\n    const timeZonePickup = moment(calculatedPickUpByDateTime)._tzm\r\n    const timeZoneDeliveryBy = moment(calculatedDeliverByDateTime)._tzm\r\n\r\n    const originDetails = stops[0] || {},\r\n        {calculatedArriveByEndDateTime, calculatedArriveByStartDateTime} = originDetails,\r\n\r\n        originReadyByRange = `${formatTimeZone(calculatedArriveByStartDateTime, timeZonePickup)} - ${formatTimeZone(calculatedArriveByEndDateTime, timeZonePickup)}`;\r\n\r\n    const destinationDetails = stops[1] || {},\r\n        {calculatedArriveByEndDateTime: destEndDateTime, calculatedArriveByStartDateTime: destStartDateTime} = destinationDetails,\r\n        deliverByRange = `${formatTimeZone(destStartDateTime, timeZoneDeliveryBy)} - ${formatTimeZone(destEndDateTime, timeZoneDeliveryBy)}`;\r\n    const config = {\r\n        title: \"C.H Robinson\",\r\n        showClose: true,\r\n        titleStyles: {\r\n            fontSize: '2rem',\r\n            p: 1\r\n        },\r\n        preventBackdropClick: true\r\n    };\r\n    \r\n    return (\r\n        <Modal config={config}>\r\n            <Grid container spacing={2} sx={{p: 2}}>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    <BasicLoadDetails loadNumber={loadNumber} trip={miles} weight={pounds} equipment={equipment}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent={'center'}>\r\n                        <Grid xs={12} sm={5} textAlign={'center'} className={'openBoardPickupDetails'}>\r\n                            <Details\r\n                                title={'Pickup'}\r\n                                name={name}\r\n                                location={`${city}${stateCode ? \", \" + stateCode : ''} ${postalCode}`}\r\n                                type={'Pickup Date'}\r\n                                date={moment(pickUpByDate).format('MM/DD/yyyy')}\r\n                                appointment={pickupScheduleRequest === 'A' ? 'Yes' : 'No'}\r\n                                avgLoadTime={'--'}\r\n                                loadBy={originReadyByRange}\r\n                                loadByType='Ready By'\r\n                            />\r\n                        </Grid>\r\n                        <Grid xs={12} sm={2} textAlign={'center'}>\r\n                            <ArrowIcon sx={{fontSize: '8rem'}}/>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={5} textAlign={'center'}>\r\n                            <Details\r\n                                title={'Delivery'}\r\n                                name={destinationName}\r\n                                location={`${destinationCity}${destinationStateCode ? \", \" + destinationStateCode : ''} ${destinationPostal}`}\r\n                                type={'Delivery Date'}\r\n                                date={moment(deliverBy).format('MM/DD/yyyy')}\r\n                                appointment={dropScheduleRequest === 'A' ? 'Yes' : 'No'}\r\n                                avgLoadTime={'--'}\r\n                                loadBy={deliverByRange}\r\n                                loadByType='Deliver By'\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport {\r\n    LoadDetails,\r\n    Typo,\r\n    formatTimeZone,\r\n    BasicLoadDetails\r\n};\r\n","import {Stack, Typography} from '@mui/material';\r\nimport React, {Fragment} from \"react\";\r\n\r\nconst Details = ({title = '', location = '', name, type = '', date, appointment='', avgLoadTime='', loadBy, loadByType}) => {\r\n    return <>\r\n        <Typography sx={{fontSize: 24}}>{title}</Typography>\r\n        <Typography sx={{fontSize: 24}}>{name}</Typography>\r\n        <Typography sx={{fontSize: 24}}>{location}</Typography>\r\n        {type && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>{type}: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{date}</Typography>\r\n        </Stack>}\r\n        {loadBy && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>{loadByType}: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{loadBy}</Typography>\r\n        </Stack>}\r\n        {appointment && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>Appointment: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{appointment}</Typography>\r\n        </Stack>}\r\n        {avgLoadTime && <Stack direction={'row'} justifyContent={'center'}>\r\n            <Typography sx={{fontSize: 24, mr: 1}}>Average Load Time: </Typography>\r\n            <Typography sx={{fontSize: 24}}>{avgLoadTime}</Typography>\r\n        </Stack>}\r\n    </>\r\n}\r\n\r\nexport default Details;\r\n","import Modal from \"../../components/Atoms/Modal\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Details from \"./PickupDetails\";\r\nimport moment from \"moment\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { BasicLoadDetails } from \"./LoadDetails\";\r\nimport { requestPost } from \"../../utils/request\";\r\nimport { getGoUrl } from \"../../config\";\r\nimport { CARRIER_EMAIL, MC_NUMBER } from \"./constants\";\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst ArrowIcon = styled(ArrowForwardIcon)(({theme}) => ({\r\n    fontSize: '8rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n        transform: 'rotate(90deg)',\r\n        fontSize: '5rem'\r\n    }\r\n}))\r\n\r\nconst LeftDetails = ({ state }) => {\r\n    const { stops = [] } = state || {};\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [_, { geo = {}, early_datetime, late_datetime, appointment_required }] = stops;\r\n    const { city, state: stateCode } = geo || {};\r\n    return <Details\r\n        title={'Pickup'}\r\n        // name={name}\r\n        location={`${city}${stateCode ? \", \" + stateCode : ''}`}\r\n        type={'Pickup Date'}\r\n        date={moment(early_datetime).format('MM/DD/yyyy')}\r\n        appointment={appointment_required ? 'Yes' : 'No'}\r\n        avgLoadTime={'--'}\r\n        loadBy={`${moment(early_datetime).format('HH:mm:ss')} ${late_datetime ? \"- \" + moment(late_datetime).format('HH:mm:ss') : ''}`}\r\n        loadByType='Ready By'\r\n    />\r\n}\r\n\r\nconst RightDetails = ({ state }) => {\r\n    const { stops = [] } = state;\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [{ geo = {}, early_datetime, late_datetime, appointment_required }] = stops || [{}];\r\n    const { city, state: stateCode } = geo || {};\r\n    return <Details\r\n        title={'Delivery'}\r\n        // name={destinationName}\r\n        location={`${city}${stateCode ? \", \" + stateCode : ''}`}\r\n        type={'Delivery Date'}\r\n        date={moment(early_datetime).format('MM/DD/yyyy')}\r\n        appointment={appointment_required ? 'Yes' : 'No'}\r\n        avgLoadTime={'--'}\r\n        loadBy={`${moment(early_datetime).format('HH:mm:ss')} ${late_datetime ? \"- \" + moment(late_datetime).format('HH:mm:ss') : ''}`}\r\n        loadByType='Deliver By'\r\n    />\r\n}\r\n\r\nconst NewTrulLoadDetails = (props) => {\r\n    const { location: { state = {} } = {}, callDetail = true } = props;\r\n    const { id: loadNumber, loaded_miles, weight, equipment, client: { compliance_link = '', client_name } = {} } = state\r\n    // console.log(state)\r\n    const config = {\r\n        title: client_name,\r\n        showClose: true,\r\n        titleStyles: {\r\n            fontSize: '2rem',\r\n            p: 1\r\n        },\r\n        preventBackdropClick: true\r\n    };\r\n\r\n    const postDetailToNewTrul = useCallback(async () => {\r\n        let body = {\r\n            \"event_type\": \"LOAD_VIEW_DETAILS\",\r\n            \"event_data\": {\r\n                \"load_id\": loadNumber,\r\n                \"carrier_email\": CARRIER_EMAIL,\r\n                \"mc_number\": MC_NUMBER,\r\n                \"first_name\": \"Sunny\",\r\n                \"last_name\": \"Freight\",\r\n                \"phone_number\": \"3179654608\"\r\n            }\r\n        }\r\n        requestPost({ uri: '/newTrulShowLoadDetails', baseUrl: getGoUrl(), body })\r\n    }, [loadNumber])\r\n\r\n    useEffect(() => {\r\n        callDetail && postDetailToNewTrul();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [postDetailToNewTrul])\r\n\r\n    return (\r\n        <Modal config={config}>\r\n            <Grid container gap={3} sx={{ p: 0 }}>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    <BasicLoadDetails loadNumber={loadNumber} trip={loaded_miles} weight={weight}\r\n                        equipment={equipment} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent={'center'}>\r\n                        <Grid item sm={5} xs={12} textAlign={'center'} className={'openBoardPickupDetails'}>\r\n                            <LeftDetails state={state} />\r\n                        </Grid>\r\n                        <Grid item sm={2} xs={12} textAlign={'center'}>\r\n                            <ArrowIcon />\r\n                        </Grid>\r\n                        <Grid item sm={5} xs={12} textAlign={'center'}>\r\n                            <RightDetails state={state} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} textAlign={'center'}>\r\n                    {compliance_link &&\r\n                        <Typography sx={{ textDecoration: 'underline' }} component='a' href={compliance_link}\r\n                            target='_blank'>{compliance_link}</Typography>}\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NewTrulLoadDetails","import React from \"react\";\r\nimport { ErrorOutline } from \"@mui/icons-material\";\r\nimport { Paper, Typography } from \"@mui/material\";\r\n\r\nconst BrokerSetupMessage = ({ message }) => {\r\n    return <Paper elevation={0} sx={{ height: '500px', alignItems: 'center', display: 'flex', justifyContent: 'center', gap: 1 }}>\r\n        <ErrorOutline color='warning' />\r\n        <Typography align='center'>{message}</Typography>\r\n    </Paper>\r\n}\r\n\r\nexport default BrokerSetupMessage"],"sourceRoot":""}