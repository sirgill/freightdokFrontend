{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/MoveToMyLoads.js","components/invoices/InvoicesList.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","actions/load.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref3","handleClose","anchorEl","onAddNewService","list","setList","useState","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref4","services","setAnchorEl","React","servicesComp","useMemo","s","event","currentTarget","Title","variant","_Typography","fontWeight","DialogComponent","_ref2","transition","pdf","setPdf","getTotal","addService","ref","useRef","brokerage","loadNumber","pickup","drop","rate","accessorials","proofDelivery","rateConfirmation","bucketFiles","receiverName","pickupAddress","pickupCity","pickupState","pickupZip","PdfViewer","pdfUrl","pdfFileName","pages","setPages","useEffect","script","document","createElement","src","async","onload","blob","fetch","then","response","headers","get","equalsIgnoreCase","reader","FileReader","result","pdfjsLib","window","GlobalWorkerOptions","workerSrc","version","getDocument","promise","pdfDocument","numPages","promises","i","push","getPage","Promise","all","pagePromises","page","viewport","getViewport","scale","canvas","context","getContext","height","renderContext","canvasContext","render","toDataURL","pageImages","readAsArrayBuffer","body","appendChild","style","position","minHeight","alt","top","left","docFileViewer","doc","fileLocation","fileName","reactToPrintContent","useCallback","current","reactToPrintTrigger","_Dialog","PaperProps","TransitionComponent","maxWidth","_DialogContent","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","alignItems","gap","htmlFor","background","borderRadius","cursor","accept","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","Invoice","match","params","history","setOpen","invoices","useSelector","state","load","setServices","find","invoice","_id","Transition","forwardRef","props","useHistory","_Zoom","onExited","goBack","reduce","acc","service","obj","_ref5","row","clone","splice","config","title","preventBackdropClick","Container","styled","theme","breakpoints","down","up","MoveToMyLoads","onCloseUrl","getInvoices","setValue","mutation","loading","useMutation","statuses","LOAD_STATUSES","status","disabled","Modal","component","onSubmit","preventDefault","replace","Select","options","showNone","LoadingButton","fullWidth","isLoading","loadingText","InvoicesList","listBarType","dispatch","useDispatch","path","useRouteMatch","role","_state$auth","auth","user","limit","loads","resetLoadsSearch","getInvoiceLoads","rowCellPadding","headerCellSx","pt","pb","emptyMessage","showRefresh","columns","renderer","date","moment","pickUpByDate","isValid","format","dropCity","dropState","deliverBy","_ref6","modesString","standard","getParsedLoadEquipment","_ref7","weight","pounds","_ref8","emptyState","visible","_ref9","Link","to","DescriptionIcon","_ref10","ReplayIcon","_Box","mt","EnhancedTable","onRefetch","Route","exact","CircularIndeterminate","marginLeft","CircularProgress","StyledPagination","Pagination","StyledStack","Stack","flexWrap","TablePagination","onPageChange","count","onPageSizeChange","setLength","Array","isArray","Typography","fontSize","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","hasDelete","column","_","isFunction","bgcolor","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","cell","valueFormatter","hover","getTableCell","isRefetching","actions","isPaginationLoading","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","indexOf","Actions","isValidElement","_Fragment","url","stopPropagation","ErrorOutlineIcon","okText","onOk","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","table","calculatedHeight","offsetHeight","undefined","py","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","Spinner","_Table","el","stickyHeader","_Backdrop","zIndex","drawer","Dialog","withRouter","memo","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","cloneDeep","console","error","opts","opt","unshift","Input","arguments","multiple","labelStyle","formGrpStyle","errorText","FormGroup","marginRight","values","l","getLoads","module","success","requestGet","uri","GET_LOADS","payload","notification","message","err","setAlert","search","INVOICE_LOAD_FETCHED","axios","total","totalPages","searchLoads","res","RETURNED_SEARCHED_LOADS","getState","RESET_SEARCHED_LOADS","rowsPerPage","selectLoad","input","SELECT_LOAD","addLoad","formData","callback","post","ADD_LOAD","updateLoad","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","requestPatch","query","deleteLoad","load_id","requestDelete","DELETE_LOAD"],"mappings":"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","file":"static/js/22.800ab64d.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const value = parseInt(e.target.value)\r\n        const name = e.target.name\r\n        if (value < 1) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) * value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)}>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst InvoiceDataTableRows = ({ price = 99 }) => {\r\n    return (<Fragment>\r\n        <tr className='InvoiceDataTableRows'>\r\n            <td>9</td>\r\n            <td>a</td>\r\n            <td>b</td>\r\n            <td>c</td>\r\n            <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n        </tr>\r\n    </Fragment>)\r\n}\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />} aria-describedby={'jugal'}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","import {Button, Dialog, DialogContent, Divider, Grid, Stack, Typography, Zoom,} from \"@mui/material\";\r\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {blue} from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport {getCheckStatusIcon} from \"../../utils/utils\";\r\n\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst config = {\r\n    rowCellPadding: \"inherit\",\r\n    columns: [\r\n        {\r\n            id: 'serviceName',\r\n            label: 'Service'\r\n        },\r\n        {\r\n            id: 'quantity',\r\n            label: 'Quanity'\r\n        },\r\n        {\r\n            id: 'price',\r\n            label: 'Price'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            label: 'Amount'\r\n        },\r\n    ]\r\n}\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    setPdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {},\r\n        [{ receiverName = \"\" }] = drop || [],\r\n        [{ pickupAddress, pickupCity, pickupState, pickupZip }] = pickup;\r\n\r\n\r\n    const PdfViewer = ({ pdfUrl, pdfFileName }) => {\r\n        const [pages, setPages] = useState([]);\r\n        useEffect(() => {\r\n\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js';\r\n            script.async = true;\r\n            script.onload = async () => {\r\n                // Once PDF.js script is loaded, fetch and render PDF\r\n                const blob = await fetch(`${pdfUrl}`)\r\n                    .then(response => {\r\n                        const contentType = response.headers.get('content-type');\r\n                        if (contentType.equalsIgnoreCase('application/pdf'))\r\n                            return response.blob();\r\n                        else\r\n                            return null;\r\n                    })\r\n\r\n                if (blob) {\r\n                    {\r\n                        const reader = new FileReader();\r\n                        reader.onload = () => {\r\n                            const pdf = reader.result;\r\n                            // Initialize PDF.js library\r\n                            const pdfjsLib = window['pdfjs-dist/build/pdf'];\r\n                            pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.js`;\r\n\r\n                            // Load PDF document\r\n                            pdfjsLib.getDocument({ data: pdf }).promise.then(pdfDocument => {\r\n                                const numPages = pdfDocument.numPages;\r\n                                const promises = [];\r\n                                for (let i = 1; i <= numPages; i++) {\r\n                                    promises.push(pdfDocument.getPage(i));\r\n                                }\r\n                                Promise.all(promises).then(pages => {\r\n                                    const pagePromises = pages.map(page => {\r\n                                        const viewport = page.getViewport({ scale: 2 });\r\n                                        const canvas = document.createElement('canvas');\r\n                                        const context = canvas.getContext('2d');\r\n                                        canvas.height = viewport.height;\r\n                                        canvas.width = viewport.width;\r\n\r\n                                        const renderContext = {\r\n                                            canvasContext: context,\r\n                                            viewport: viewport\r\n                                        };\r\n                                        return page.render(renderContext).promise.then(() => {\r\n                                            return canvas.toDataURL();\r\n                                        });\r\n                                    });\r\n                                    Promise.all(pagePromises).then(pageImages => {\r\n                                        setPages(pageImages);\r\n                                    });\r\n                                });\r\n                            });\r\n                        };\r\n                        reader.readAsArrayBuffer(blob);\r\n                    }\r\n                }\r\n                else {\r\n                    setPages(false)\r\n                }\r\n            };\r\n            document.body.appendChild(script);\r\n            }, [pdfUrl]);\r\n\r\n        if (pages) {\r\n            return (\r\n                <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n                    {pages.map((page, index) => (\r\n                        <img\r\n                            key={index}\r\n                            src={page}\r\n                            alt={`Page ${index + 1}`}\r\n                            style={{ position: 'absolute', top: `${index * 100}%`, left: 0, width: '100%' }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (<img className=\"printThisFull\" src={pdfUrl} alt={pdfFileName} />)\r\n        }\r\n    };\r\n\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <PdfViewer pdfUrl={doc.fileLocation} pdfFileName={doc.fileName} />\r\n                    {/* <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} /> */}\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return ref.current;\r\n    }, [ref.current]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            className=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <div ref={ref} className=\"printArea\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n                    >\r\n                        <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: landscape;\\ }\\\r\n          \"}</style>\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Stack spacing={1}>\r\n                                        <Stack>\r\n                                            <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                                {'Sunny Freight'}\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack>\r\n                                        <Stack>\r\n                                            <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                                Invoice\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <InputField label=\"Notes\" type=\"textarea\" />\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n                        <Grid xs={12} item>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item>\r\n                                    <Stack spacing={1} sx={{ p: 3 }}>\r\n                                        <Stack>\r\n                                            <Typography>Bill To:</Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                                        <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                            <Title>Load Number: </Title>\r\n                                            <Title>{loadNumber}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n                        <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                            <Stack sx={{ textAlign: \"right\" }}>\r\n                                <Title>Total: {getTotal() || '- -'}</Title>\r\n                            </Stack>\r\n                            <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                                <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                                    <InvoiceServiceWrapper\r\n                                        onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                                        deleteService={deleteService}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid xs={3} item>\r\n                                    {/* <Button variant={\"contained\"} size={\"small\"} className={'addServicesInvoice'}\r\n                                  onClick={addService}>\r\n                                  Add Services\r\n                              </Button> */}\r\n                                </Grid>\r\n                                <Grid xs={6} item>\r\n                                    <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'rateCon'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>\r\n                                                    Rate Con\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'pod'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>\r\n                                                    Proof Of Delivery\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'accessorials'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px',\r\n                                                    cursor: 'pointer'\r\n                                                }}>Accessorials</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!accessorials.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                                    <ReactToPrint\r\n                                        content={reactToPrintContent}\r\n                                        documentTitle=\"Invoice\"\r\n                                        // onBeforeGetContent={handleOnBeforeGetContent}\r\n                                        // onBeforePrint={handleBeforePrint}\r\n                                        removeAfterPrint\r\n                                        trigger={reactToPrintTrigger}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {docFileViewer}\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {}, history }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const invoices = useSelector((state) => state.load.invoices.data) || [],\r\n        [services, setServices] = useState([]),\r\n        data = invoices.find((invoice) => invoice._id === id);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.price) + acc, 0)\r\n        return \"$\" + total.toFixed(2)\r\n    }, [services])\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                setPdf={setPdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst Container = styled(Grid)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 'auto'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveToMyLoads'),\r\n        statuses = LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={config}>\r\n        <Container container component='form' spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    showNone={true}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Container>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;","import React, { useEffect, Fragment } from 'react';\r\nimport {Box, Button} from \"@mui/material\";\r\nimport { resetLoadsSearch } from '../../actions/load.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInvoiceLoads } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport MoveToMyLoads from \"./MoveToMyLoads\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\n\r\nexport default function InvoicesList({ listBarType }) {\r\n    const dispatch = useDispatch();\r\n    const {path} = useRouteMatch();\r\n    const { role } = useSelector(state => state.auth?.user) || {};\r\n    const {data = [], page, limit, loading} = useSelector(state => state.load.invoices);\r\n    const loads = useSelector(state => state.load.loads);\r\n\r\n    useEffect(() => {\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        getInvoices();\r\n        // dispatch(getCHLoads(true));\r\n        return () => {\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        }\r\n    }, []);\r\n\r\n    const getInvoices = () => {\r\n        dispatch(getInvoiceLoads());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInvoices();\r\n    }, [loads]);\r\n\r\n    const config = {\r\n        rowCellPadding: \"normal\",\r\n        headerCellSx: { pt: 1, pb: 1 },\r\n        emptyMessage: 'No Invoices found',\r\n        showRefresh:true,\r\n        page,\r\n        limit,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row) || {}\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"weight\",\r\n                label: \"Weight\",\r\n                renderer: ({ row }) => {\r\n                    let { weight: { pounds = \"\" } = {} } = row || {};\r\n                    if (pounds) pounds = pounds + \" lbs\";\r\n                    return <Fragment>{pounds}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({ row }) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: ['driver', 'admin', 'superAdmin', 'ownerOperator'].includes(role),\r\n                renderer: ({ row }) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<DescriptionIcon />}\r\n                    >\r\n                        Create Invoice\r\n                    </Button>\r\n                }\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: ['driver', 'admin', 'superAdmin', 'ownerOperator'].includes(role),\r\n                renderer: ({ row }) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/moveToMyLoads/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<ReplayIcon />}\r\n                    >\r\n                        My loads\r\n                    </Button>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <Fragment>\r\n                <EnhancedTable config={config} data={data} loading={loading} onRefetch={getInvoices} />\r\n                <Route path={path + '/moveToMyLoads/:id'} render={(props) => <MoveToMyLoads onCloseUrl={path} getInvoices={getInvoices} {...props} />} />\r\n                <Route path={path + '/:id'} exact component={Invoice} onCloseUrl={path} />\r\n            </Fragment>\r\n        </Box>\r\n    )\r\n}","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport { requestDelete, requestGet, requestPatch } from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 15, module = \"\") =>\r\n    async (dispatch) => {\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1\r\n            }&limit=${limit}&module=${module}`\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n    async (dispatch) => {\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { data: [], loading: true },\r\n      });\r\n\r\n      try {\r\n        const url = `/api/load/invoice_loads?page=${page + 1\r\n          }&limit=${limit}&search=${search}`;\r\n        const response = await axios.get(url);\r\n        const { loads, total, totalPages } = response.data;\r\n        dispatch({\r\n          type: INVOICE_LOAD_FETCHED,\r\n          payload: { data: loads, page, limit, search, total, totalPages, loading: false },\r\n        });\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/load\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_LOAD,\r\n      payload: res.data,\r\n    });\r\n\r\n    notification(\"Load Created\")\r\n    if (callback) {\r\n      callback(res.status === 200, res.data)\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n    }\r\n    const {\r\n      load: {\r\n        search: { page, limit, query },\r\n      },\r\n    } = getState();\r\n    if (!query) dispatch(getLoads(0, 5, module));\r\n    else dispatch(searchLoads(page, limit, query));\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n"],"sourceRoot":""}