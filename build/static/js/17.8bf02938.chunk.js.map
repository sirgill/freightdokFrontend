{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/InvoicesList.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","actions/load.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref3","handleClose","anchorEl","onAddNewService","_useState","useState","_useState2","_slicedToArray","list","setList","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref4","services","_React$useState","React","_React$useState2","setAnchorEl","servicesComp","useMemo","s","_objectSpread","event","currentTarget","Title","_ref$sx","_ref$variant","variant","_Typography","fontWeight","DialogComponent","_ref2","transition","getTotal","pdf","setPdf","addService","ref","useRef","_ref3$brokerage","brokerage","_ref3$loadNumber","loadNumber","_ref3$pickup","pickup","_ref3$drop","drop","_ref3$accessorials","rate","accessorials","_ref3$proofDelivery","proofDelivery","_ref3$rateConfirmatio","rateConfirmation","bucketFiles","_pickup$","receiverName","pickupAddress","pickupCity","pickupState","pickupZip","console","log","docFileViewer","doc","src","fileLocation","alt","fileName","reactToPrintContent","useCallback","current","reactToPrintTrigger","_Dialog","class","PaperProps","TransitionComponent","maxWidth","_DialogContent","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","height","alignItems","gap","htmlFor","background","borderRadius","accept","style","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","Invoice","_ref6","_ref6$match","match","_ref6$match2$params","params","_ref6$match2$params2$","history","setOpen","_useState3","_useState4","invoices","useSelector","state","load","_useState5","_useState6","setServices","find","invoice","_id","useEffect","Transition","forwardRef","props","useHistory","_Zoom","onExited","goBack","reduce","acc","service","obj","_toConsumableArray","_ref7","row","clone","splice","useStyles","makeStyles","TableContainer","borderBottom","loadSearchbar","paddingBottom","InvoicesList","setSelectedLoad","resetSearchField","listBarType","classes","load_selected","dispatch","useDispatch","path","useRouteMatch","setLoading","_useSelector","page","limit","role","total","_state$auth","auth","user","show","loads","_useSelector2","openBoard","chRobinsonLoads","shallowEqual","totalCount","setTimeout","resetLoadsSearch","getInvoiceLoads","config","rowCellPadding","headerCellSx","pt","pb","emptyMessage","count","columns","renderer","date","moment","pickUpByDate","isValid","format","_ref5","dropCity","dropState","deliverBy","_ref8","getParsedLoadEquipment","_ref8$modesString","modesString","_ref8$standard","standard","_ref9","_ref10$weight","weight","_ref10$weight2$pounds","pounds","_ref11","emptyState","visible","_ref12","Button","component","Link","to","table","EnhancedTable","Route","TablePagination","_ref$data","onPageChange","_ref$page","_ref$count","_ref$limit","setLength","Array","isArray","Stack","Typography","fontSize","Pagination","Math","ceil","size","pgNum","CircularIndeterminate","_Box","marginLeft","CircularProgress","Cell","styled","_TableCell","theme","_defineProperty","breakpoints","down","padding","DeleteIcon","_Delete","Headers","_ref5$columns","_ref5$config","_config$headerCellSx","hasDelete","headers","column","_ref6$label","_ref6$id","_ref6$visible","_","isFunction","_TableRow","TableData","_ref9$data","_ref9$config","handleRowClick","handleDelete","rest","_objectWithoutProperties","_excluded2","_config$dataKey","dataKey","_ref7$row","_ref7$columns","_ref7$config","rowIndex","hasDeletePermission","_excluded","_config$hasDelete","_config$rowCellPaddin","_config$onRowClick","onRowClick","undefined","rowStyleCb","rowStyle","deleteCell","scope","disabled","cell","i","_ref8$id","_ref8$emptyState","valueFormatter","_ref8$visible","hover","preventDefault","cursor","getTableCell","_ref10","_ref10$config","_ref10$data","_ref10$loading","loading","onRefetch","isRefetching","tableState","setTableState","dialog","setDialog","_config$columns","_config$hasOnClickUrl","hasOnClickUrl","_config$size","_config$emptyMessage","onRowClickDataCallback","_config$showRefresh","showRefresh","onDelete","deleteMessage","_config$deletePermiss","deletePermissions","_getUserDetail$user$r","getUserDetail","indexOf","url","push","stopPropagation","title","ErrorOutlineIcon","okText","onOk","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","Date","now","_ref$current","calculatedHeight","offsetHeight","_Refresh","_TableContainer","_Paper","boxShadow","mb","innerHeight","window","position","Spinner","getLoader","_Table","el","Dialog","withRouter","memo","getLoads","arguments","module","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$requestGet","success","wrap","_context","prev","next","requestGet","uri","sent","GET_LOADS","payload","notification","message","t0","setAlert","stop","_x","apply","search","_callee2","response","_response$data","totalPages","_context2","axios","get","INVOICE_LOAD_FETCHED","_x2","searchLoads","_callee6","res","_context6","RETURNED_SEARCHED_LOADS","_x6","_callee7","getState","_getState","_getState$load","_context7","RESET_SEARCHED_LOADS","rowsPerPage","_x7","_x8","selectLoad","input","SELECT_LOAD","addLoad","formData","callback","_callee9","_context9","post","ADD_LOAD","status","_x10","updateLoad","_callee10","form","_i","_Object$keys","key","_data","isNull","dataToSend","_i2","_arr","_key","files","_iterator2","_step2","file","_yield$requestPatch","_getState2","_getState2$load$searc","query","_context10","FormData","Object","keys","JSON","stringify","append","_createForOfIteratorHelper","n","done","err","f","requestPatch","body","_x11","_x12","deleteLoad","load_id","_ref13","_callee13","_yield$requestDelete","_context13","requestDelete","DELETE_LOAD","_x15"],"mappings":"6dAOMA,EAAc,CAChB,CAAEC,MAAO,YAAaC,KAAM,MAC5B,CAAED,MAAO,QAASC,KAAM,QACxB,CAAED,MAAO,SAAUC,KAAM,QAGvBC,EAAiB,SAAHC,GAAsG,IAAhGC,EAAWD,EAAXC,YAAaC,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAWL,EAAXK,YAAaC,EAAKN,EAALM,MAAOC,EAAaP,EAAbO,cAAeC,EAAeR,EAAfQ,gBACzFC,EAAe,SAACC,GAClB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACnBL,GACAA,EAAgBF,EAAO,CAAEK,OAAME,SAEvC,EAyBA,OACIC,cAACC,WAAQ,CAAAC,SACLC,eAAA,MAAIC,UAAU,oBAAmBF,SAAA,CAC7BF,cAAA,MAAAE,SAAKf,IACLa,cAAA,MAAAE,SAAIF,cAACK,IAAU,CAACR,KAAM,cAAeE,MAAOR,EAAae,SAAUX,EAAcS,UAAU,oBACvFG,YAAa,6BACjBP,cAAA,MAAAE,SAAIF,cAACK,IAAU,CAACR,KAAM,WAAYS,SA7BvB,SAACV,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQS,SAASZ,EAAEE,OAAOC,OAChCL,EAAgBF,EAAO,CAAEK,OAAME,SACnC,EAyBwEU,OAvBzD,SAACb,GACZ,IAAMG,EAAQS,SAASZ,EAAEE,OAAOC,OAC1BF,EAAOD,EAAEE,OAAOD,KAClBE,EAAQ,EACJL,IACAA,EAAgBF,EAAO,CAAEK,OAAME,MAAO,IACtCL,EAAgBF,EAAO,CAAEK,KAAM,QAASE,MAAOS,SAASpB,MAIxDM,IACAA,EAAgBF,EAAO,CAAEK,OAAME,UAC/BL,EAAgBF,EAAO,CAAEK,KAAM,QAASE,MAAOS,SAASpB,GAAUW,IAG9E,EAQwFK,UAAU,oBAAoBM,KAAK,SAASX,MAAOT,MAC/HU,cAAA,MAAAE,SAAIF,cAACK,IAAU,CAACR,KAAM,QAASS,SAAUX,EAAcI,MAAOV,EAAOe,UAAU,wBAC/EJ,cAAA,MAAAE,SAAKb,EAAK,IAAAsB,OAAOC,WAAWvB,GAAOwB,QAAQ,IAAO,UAClDb,cAAA,MAAAE,SAAIF,cAAAc,IAAA,CAAYC,QAAStB,EAAcuB,KAAK,KAAMxB,GAAOU,SACrDF,cAACiB,IAAiB,CAACC,MAAO,kBAK9C,EAeMC,EAAS,SAAHC,GAAoD,IAA9CC,EAAWD,EAAXC,YAAaC,EAAQF,EAARE,SAAUC,EAAeH,EAAfG,gBACrCC,EAAwBC,mBAAS3C,GAAY4C,EAAAC,YAAAH,EAAA,GAAtCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GASdI,EAAc,SAACC,GACbR,GACAA,EAAgBQ,GAEpBV,GACJ,EAEA,OAAOrB,cAAAgC,IAAA,CACHC,GAAI,QACJX,SAAUA,EACVY,KAAMC,QAAQb,GACdc,QAASf,EACTgB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,QACdrC,SAEFC,eAAAsC,IAAA,CAAOC,GAAI,CAAEC,EAAG,EAAGC,MAAO,KAAM1C,SAAA,CAC5BF,cAAAyC,IAAA,CAAAvC,SACIF,cAACK,IAAU,CAACR,KAAM,SAAUgD,WAAS,EAACtC,YAAY,oBAAoBD,SA/BjE,SAACV,GACd,IAAMkD,EAAMlD,EAAEE,OAAOC,MAAMgD,cAC3B,GAAID,EAAK,CACL,IAAME,EAAWpB,EAAKqB,QAAO,SAAAC,GAAI,OAAIA,EAAKnE,MAAMgE,cAAcI,SAASL,EAAI,IAC3EjB,EAAQmB,EACZ,MAAOnB,EAAQ/C,EACnB,MA2BQkB,cAAAyC,IAAA,CAAAvC,SACIF,cAAAoD,IAAA,CAAAlD,SACK0B,EAAKyB,KAAI,SAAAC,GACN,OAAOtD,cAAAuD,IAAA,CAAiCxC,QAASe,EAAYd,KAAK,KAAMsC,GAAMpD,SAC1EF,cAAAwD,IAAA,CAAUC,gBAAc,EAACC,gBAAiB1D,cAAA,QACtCI,UAAW,uBAAuBF,SAAE,IAAMoD,EAAKtE,OAAakB,SAC5DF,cAAA2D,IAAA,CAAcC,QAASN,EAAKvE,WAHRuE,EAAKvE,MAMrC,QAGRiB,cAAAyC,IAAA,CAAAvC,SACIF,cAAA6D,IAAA,CAAQC,UAAW9D,cAAC+D,IAAoB,IAAI7D,SAAC,4BAM7D,EA6Ce8D,EA3Ce,SAAHC,GAAuE,IAAjEC,EAAQD,EAARC,SAAU3C,EAAe0C,EAAf1C,gBAAiB7B,EAAeuE,EAAfvE,gBAAiBD,EAAawE,EAAbxE,cAEzE0E,EAAgCC,IAAM3C,SAAS,MAAK4C,EAAA1C,YAAAwC,EAAA,GAA7C7C,EAAQ+C,EAAA,GAAEC,EAAWD,EAAA,GACtBE,EAAeC,mBAAQ,WACzB,OAAON,EAASb,KAAI,SAACoB,EAAGjF,GACpB,OAAOQ,cAACf,EAAcyF,wBAAA,GAAKD,GAAC,IAAEjF,MAAOA,EAAOE,gBAAiBA,EACzDD,cAAeA,IACvB,GACJ,GAAG,CAACyE,IAUJ,OACI/D,eAACiE,IAAMnE,SAAQ,CAAAC,SAAA,CACXC,eAAA,SAAOC,UAAU,sBAAqBF,SAAA,CAClCC,eAAA,MAAIC,UAAU,cAAaF,SAAA,CACvBF,cAAA,MAAAE,SAAI,aACJF,cAAA,SACAA,cAAA,MAAAE,SAAI,aACJF,cAAA,MAAAE,SAAI,UACJF,cAAA,MAAAE,SAAI,WACJF,cAAA,YAEHuE,EACDvE,cAAA,MAAII,UAAU,gBAAeF,SACzBF,cAAA,MAAII,UAAU,aAAaW,QArBvB,SAAC4D,GACjBL,EAAYK,EAAMC,cACtB,EAmBgE1E,SAC5CF,cAAA6D,IAAA,CAAQnB,GAAI,CAAEE,MAAO,KAAOkB,UAAW9D,cAAC+D,IAAoB,IAAK,mBAAkB,QAAQ7D,SAAC,wBAMxGF,cAACmB,EAAM,CAACE,YAxBI,WAChBiD,EAAY,KAChB,EAsB0ChD,SAAUA,EAAUC,gBAAiBA,MAGnF,E,QCvJMsD,EAAQ,SAAH3F,GAAwD,IAAlDW,EAAIX,EAAJW,KAAIiF,EAAA5F,EAAEwD,UAAE,IAAAoC,EAAG,CAAC,EAACA,EAAAC,EAAA7F,EAAE8F,eAAO,IAAAD,EAAG,QAAOA,EAAE7E,EAAQhB,EAARgB,SAC/C,OACIF,cAAAiF,IAAA,CAAYvC,GAAEgC,YAAA,CAAIQ,WAAY,KAAQxC,GAAMsC,QAASA,EAAQ9E,SACxDA,GAAYL,GAGzB,EAwBMsF,EAAkB,SAAHC,GAYd,IAXHC,EAAUD,EAAVC,WACAhE,EAAW+D,EAAX/D,YACAa,EAAIkD,EAAJlD,KACAoB,EAAI8B,EAAJ9B,KAGAgC,GAFGF,EAAHG,IACMH,EAANI,OACQJ,EAARE,UACApB,EAAQkB,EAARlB,SACAuB,EAAUL,EAAVK,WACA/F,EAAe0F,EAAf1F,gBACAD,EAAa2F,EAAb3F,cAEMiG,EAAMtB,IAAMuB,OAAO,MACzBvE,EAUIkC,GAAQ,CAAC,EAACsC,EAAAxE,EATVyE,iBAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAA1E,EACd2E,kBAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAA5E,EACf6E,cAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAA9E,EACX+E,YAAI,IAAAD,EAAG,GAAEA,EACAE,GADAhF,EACTiF,KAASjF,EACTkF,qBAAY,IAAAF,EAAG,GAAEA,EAAAG,EAAAnF,EACjBoF,qBAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAArF,EAClBsF,wBAAgB,IAAAD,EAAG,GAAEA,EACrBE,EAAWvF,EAAXuF,YAAW1C,EAEekC,GAAQ,GAC8BS,GAD5BjF,YAAAsC,EAAC,GAAD,GAAjC4C,aAAiBlF,YACsCsE,EAAM,OAAhDW,EAAbE,cAAyBF,EAAVG,WAAuBH,EAAXI,YAAsBJ,EAATK,UAC/CC,QAAQC,IAAIR,GAEZ,IAAMS,EAAgBhD,IAAMI,SAAQ,WAChC,OAAOmC,GAAeA,EAAYtD,KAAI,SAAAgE,GAClC,OAAQrH,cAAA,OAAKI,UAAU,uBAAsBF,SACzCF,cAAA,OAAAE,SACIF,cAAA,OAAKI,UAAU,gBAAgBkH,IAAKD,EAAIE,aAAcC,IAAKH,EAAII,cAG3E,GACJ,GAAG,CAACd,IAIEe,EAAsBtD,IAAMuD,aAAY,WAC1C,OAAOjC,EAAIkC,OACf,GAAG,CAAClC,EAAIkC,UAGFC,EAAsBzD,IAAMuD,aAAY,WAQ1C,OACI3H,cAAA6D,IAAA,CAAQzD,UAAU,eAAe4E,QAAS,YAAY9E,SAAC,kBAI/D,GAAG,IAEH,OACIF,cAAA8H,IAAA,CACIC,MAAM,gBACNC,WAAY,CACRtF,GAAI,CAAEE,MAAO,QAEjBV,KAAMA,EACNE,QAASf,EACT4G,oBAAqB5C,EACrB6C,SAAU,KAAKhI,SAEfF,cAAAmI,IAAA,CAAezF,GAAI,CAAEC,EAAG,GAAIzC,SACxBC,eAAA,OAAKuF,IAAKA,EAAKtF,UAAU,YAAWF,SAAA,CAChCC,eAAAiI,IAAA,CACIC,WAAS,EACTC,UAAU,SACV5F,GAAI,CAAE6F,QAAe,eAAgCrI,SAAA,CAErDF,cAAA,SAAOU,KAAK,WAAW8H,MAAM,QAAOtI,SAAE,wDAGtCF,cAAAoI,IAAA,CAAMlF,MAAI,EAACuF,GAAI,GAAI/F,GAAI,CAAEC,EAAG,GAAIzC,SAC5BC,eAAAiI,IAAA,CAAMC,WAAS,EAACK,eAAgB,gBAAgBxI,SAAA,CAC5CF,cAAAoI,IAAA,CAAMlF,MAAI,EAACR,GAAI,CAAEiG,SAAU,GAAIzI,SAC3BF,cAAAyC,IAAA,CAAOmG,QAAS,EAAE1I,SACdF,cAAAyC,IAAA,CAAAvC,SACIF,cAAAiF,IAAA,CAAYvC,GAAI,CAAEmG,UAAW,QAAU7D,QAAQ,KAAI9E,SAC9C,wBAKjBF,cAAAoI,IAAA,CAAMlF,MAAI,EAAAhD,SACNC,eAAAsC,IAAA,CAAAvC,SAAA,CACIF,cAAAyC,IAAA,CAAAvC,SACIF,cAAAiF,IAAA,CAAYD,QAAQ,KAAKtC,GAAI,CAAEmG,UAAW,SAAU3I,SAAC,cAIzDF,cAAAyC,IAAA,CAAAvC,SACIF,cAACK,IAAU,CAACtB,MAAM,QAAQ2B,KAAK,yBAMnDV,cAAA8I,IAAA,CAASpG,GAAI,CAAEqG,kBAAmB,OAAQC,YAAaC,OACvDjJ,cAAAoI,IAAA,CAAMK,GAAI,GAAIvF,MAAI,EAAAhD,SACdC,eAAAiI,IAAA,CAAMC,WAAS,EAACK,eAAgB,gBAAgBxI,SAAA,CAC5CF,cAAAoI,IAAA,CAAMlF,MAAI,EAAAhD,SACNC,eAAAsC,IAAA,CAAOmG,QAAS,EAAGlG,GAAI,CAAEC,EAAG,GAAIzC,SAAA,CAC5BF,cAAAyC,IAAA,CAAAvC,SACIF,cAAAiF,IAAA,CAAA/E,SAAY,eAEhBF,cAAAyC,IAAA,CAAAvC,SACIF,cAAC6E,EAAK,CAACnC,GAAI,CAAEwC,WAAY,KAAMhF,SAAE2F,WAI7C7F,cAAAoI,IAAA,CAAMlF,MAAI,EAAAhD,SACNF,cAAAyC,IAAA,CAAOiG,eAAgB,gBAAiBhG,GAAI,CAAEwG,OAAQ,QAAShJ,SAC3DC,eAAAsC,IAAA,CAAO6F,UAAW,MAAOa,WAAY,SAAUP,QAAS,EAAGjG,EAAG,EAAEzC,SAAA,CAC5DF,cAAC6E,EAAK,CAAA3E,SAAC,kBACPF,cAAC6E,EAAK,CAAA3E,SAAE6F,gBAM5B/F,cAAA8I,IAAA,CAASpG,GAAI,CAAEqG,kBAAmB,OAAQC,YAAaC,OAEvD9I,eAAAiI,IAAA,CAAMlF,MAAI,EAACR,GAAI,CAAEC,EAAG,GAAK4F,QAAS,UAAWD,UAAU,SAAQpI,SAAA,CAC3DF,cAAAyC,IAAA,CAAOC,GAAI,CAAEmG,UAAW,SAAU3I,SAC9BC,eAAC0E,EAAK,CAAA3E,SAAA,CAAC,UAAQoF,KAAc,WAEjCnF,eAAAiI,IAAA,CAAMC,WAAS,EAACc,WAAY,MAAOT,eAAgB,gBAAgBxI,SAAA,CAC/DF,cAAAoI,IAAA,CAAMlF,MAAI,EAACuF,GAAI,GAAIrI,UAAU,4BAA2BF,SACpDF,cAACgE,EAAqB,CAClBtE,gBAAiBA,EAAiBwE,SAAUA,EAAU3C,gBAAiBkE,EACvEhG,cAAeA,MAGvBO,cAAAoI,IAAA,CAAMK,GAAI,EAAGvF,MAAI,IAMjBlD,cAAAoI,IAAA,CAAMK,GAAI,EAAGvF,MAAI,EAAAhD,SACbC,eAAAsC,IAAA,CAAOiG,eAAgB,SAAUU,IAAK,OAAQhJ,UAAU,kBAAiBF,SAAA,CACrEC,eAAAsC,IAAA,CAAO6F,UAAW,MAAOI,eAAgB,SAAUU,IAAK,OAAOlJ,SAAA,CAC3DC,eAAA,SAAOkJ,QAAS,UAAUnJ,SAAA,CACtBF,cAAAiF,IAAA,CAAY4D,UAAW,SAAUnG,GAAI,CACjCE,MAAO,IACP0G,WAAY,mBACZpI,MAAO,OACPqI,aAAc,OAChBrJ,SAAC,aACHF,cAAA,SAAOU,KAAM,OAAQ8I,OAAQ,MAAOvH,GAAI,UAAWwH,MAAO,CAAElB,QAAS,aAEzEvI,cAAA,OAAAE,SACKwJ,cAAqBhD,EAAiBiD,aAG/CxJ,eAAAsC,IAAA,CAAO6F,UAAW,MAAOI,eAAgB,SAAUU,IAAK,OAAOlJ,SAAA,CAC3DC,eAAA,SAAOkJ,QAAS,MAAMnJ,SAAA,CAClBF,cAAAiF,IAAA,CAAY4D,UAAW,SAAUnG,GAAI,CACjCE,MAAO,IACP0G,WAAY,mBACZpI,MAAO,OACPqI,aAAc,OAChBrJ,SAAC,sBAGHF,cAAA,SAAOU,KAAM,OAAQ8I,OAAQ,MAAOvH,GAAI,MAAOwH,MAAO,CAAElB,QAAS,aAErEvI,cAAA,OAAAE,SACKwJ,cAAqBlD,EAAcmD,aAG5CxJ,eAAAsC,IAAA,CAAO6F,UAAW,MAAOI,eAAgB,SAAUU,IAAK,OAAOlJ,SAAA,CAC3DC,eAAA,SAAOkJ,QAAS,eAAenJ,SAAA,CAC3BF,cAAAiF,IAAA,CAAY4D,UAAW,SAAUnG,GAAI,CACjCE,MAAO,IACP0G,WAAY,mBACZpI,MAAO,OACPqI,aAAc,OAChBrJ,SAAC,iBACHF,cAAA,SAAOU,KAAM,OAAQ8I,OAAQ,MAAOvH,GAAI,eAAgBwH,MAAO,CAAElB,QAAS,aAE9EvI,cAAA,OAAAE,SACKwJ,cAAqBpD,EAAaqD,kBAKnD3J,cAAAoI,IAAA,CAAMK,GAAI,EAAGvF,MAAI,EAACqF,QAAS,OAAQG,eAAgB,MAAMxI,SACrDF,cAAC4J,IAAY,CACTC,QAASnC,EACToC,cAAc,UAGdC,kBAAgB,EAChBC,QAASnC,eAO5BT,QAKrB,EAmGe6C,EAjGC,SAAHC,GAA+D,IAADC,EAAAD,EAAxDE,MAAwCC,QAAnC,IAAAF,EAAiC,CAAC,EAACA,GAA/BG,OAAwBC,QAAlB,IAAAF,EAAgB,CAAC,EAACA,GAAdpI,UAAE,IAAAsI,EAAG,GAAEA,EACzC/I,GADgE0I,EAAPM,QACjC/I,oBAAS,IAAMC,EAAAC,YAAAH,EAAA,GAAhCU,EAAIR,EAAA,GAAE+I,EAAO/I,EAAA,GACpBgJ,EAAsBjJ,oBAAS,GAAMkJ,EAAAhJ,YAAA+I,EAAA,GAA9BnF,EAAGoF,EAAA,GAAEnF,EAAMmF,EAAA,GACZC,EAAWC,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKH,SAAStH,IAAI,KAAK,GAAE0H,EACzCvJ,mBAAS,IAAGwJ,EAAAtJ,YAAAqJ,EAAC,GAAtC9G,EAAQ+G,EAAA,GAAEC,EAAWD,EAAA,GACtB3H,EAAOsH,EAASO,MAAK,SAACC,GAAO,OAAKA,EAAQC,MAAQpJ,CAAE,IAKxDqJ,qBAAU,WAHNb,GAAQ,EAKZ,GAAG,IAEH,IAyBMc,EAAa/G,mBAAQ,WACvB,OAAOJ,IAAMoH,YAAW,SAAoBC,EAAO/F,GAC/C,IAAM8E,EAAUkB,uBAChB,OACI1L,cAAA2L,IAAAjH,wBAAA,CACIgB,IAAKA,GACD+F,GAAK,IACTG,SAAU,WACN,OAAOpB,EAAQqB,QACnB,IAGZ,GACJ,GAAG,IAEGvG,EAAWqC,uBAAY,WAEzB,MAAO,IADOzD,EAAS4H,QAAO,SAACC,EAAKC,GAAO,OAAKpL,WAAWoL,EAAQ3M,OAAS0M,CAAG,GAAE,GAC9DlL,QAAQ,EAC/B,GAAG,CAACqD,IAqBJ,OACIlE,cAAA,OAAAE,SACIF,cAACmF,EAAe,CACZjD,KAAMA,EACNb,YApEQ,SAACzB,GAEjB6K,GAAQ,EACZ,EAkEYpF,WAAYkG,EACZjI,KAAMA,EACNiC,IAAKA,EACLC,OAAQA,EACRtB,SAAUA,EACVuB,WArEO,SAACuG,GAChB,IAAQjN,EAAgBiN,EAAhBjN,MAAOC,EAASgN,EAAThN,KACXiN,EAAM,CACN9M,YAAaJ,EACbQ,YAAa,GACbD,SAAU,EACVD,MAAOL,EACPI,OAAQJ,GAEZkM,EAAY,GAADvK,OAAAuL,YAAKhI,GAAQ,CAAE+H,IAC9B,EA4DYvM,gBA1DY,SAACF,EAAK2M,GAAuB,IAAnBtM,EAAIsM,EAAJtM,KAAME,EAAKoM,EAALpM,MAC9BqM,EAAMlI,EAAS1E,GACrB4M,EAAIvM,GAAQE,EACZ,IAAMsM,EAAKH,YAAOhI,GAClBmI,EAAM7M,GAAS4M,EACflB,EAAYmB,EAChB,EAqDY/G,SAAUA,EACV7F,cAhCU,SAACD,GACnB,IAAM8D,EAAOY,EACbZ,EAAKgJ,OAAO9M,EAAO,GACnB0L,EAAWgB,YAAK5I,GACpB,KAgCJ,E,2BChWMiJ,EAAYC,YAAW,CACzBC,eAAgB,CACZC,aAAc,QAElBC,cAAe,CACX9D,UAAW,QACX+D,cAAe,MAIR,SAASC,EAAY3N,GAAkBA,EAAf4N,gBAAkE,IAAjDC,EAAgB7N,EAAhB6N,iBAAkBC,EAAW9N,EAAX8N,YAChEC,GAD0F/N,EAAbgO,cACnEX,KACVY,EAAWC,cACVC,EAAQC,0BAARD,KACP7L,EAA8BC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA5B+L,GAAF7L,EAAA,GAAYA,EAAA,IAC1B8L,EAA+B3C,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QAAQ,IAA/D6C,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MACNC,GADkBH,EAALI,OACJ/C,aAAY,SAAAC,GAAK,IAAA+C,EAAA,OAAc,QAAdA,EAAI/C,EAAMgD,YAAI,IAAAD,OAAA,EAAVA,EAAYE,IAAI,KAAK,CAAC,GAApDJ,MACF/C,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SAAStH,IAAI,IAC9DoH,EAAgCjJ,oBAAS,GAAMkJ,EAAAhJ,YAAA+I,EAAA,GAC/CM,GADgBL,EAAA,GAAYA,EAAA,GACJlJ,mBAAS,CAAEuM,MAAM,EAAO1K,KAAM,CAAC,KAAI2H,EAAAtJ,YAAAqJ,EAAA,GACrDiD,GADKhD,EAAA,GAASA,EAAA,GACNJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKkD,KAAK,KACnDC,EAA4CrD,aAAY,SAAAC,GAAK,OAAIA,EAAMqD,UAAUC,eAAe,GAAEC,KAArEC,GAAkFJ,EAAvGD,MAA+BC,EAAVI,YAE7BhD,qBAAU,WAQN,OAPAiD,YAAW,WACPhB,GAAW,EACf,GAAG,KACHR,GAAoBA,IACpBI,EAASqB,YAAiBxB,IAC1BG,EAASsB,eAEF,WACH1B,GAAoBA,IACpBI,EAASqB,YAAiBxB,GAC9B,CACJ,GAAG,IAEH1B,qBAAU,WACN6B,EAASsB,cACb,GAAG,CAACR,IAEJ,IAQMS,EAAS,CACXC,eAAgB,UAChBC,aAAc,CAAEC,GAAI,EAAGC,GAAI,GAC3BC,aAAc,oBACdtB,OACAuB,MAAOV,EACPZ,QACAuB,QAAS,CACL,CACIhN,GAAI,aACJlD,MAAO,eAEX,CACIkD,GAAI,UACJlD,MAAO,oBACPmQ,SAAU,SAAA9N,GAAc,IAAXgL,EAAGhL,EAAHgL,IACT,OACIjM,eAACF,WAAQ,CAAAC,SAAA,CACJkM,EAAInG,OAAO,GAAGc,WAAW,KAAGqF,EAAInG,OAAO,GAAGe,cAGvD,GAEJ,CACI/E,GAAI,aACJlD,MAAO,cACPmQ,SAAU,SAAAjL,GAAc,IAAXmI,EAAGnI,EAAHmI,IACL+C,EAAO,GAIX,OAHIC,IAAOhD,EAAIiD,cAAcC,YACzBH,EAAOC,IAAOhD,EAAIiD,cAAcE,OAAO,cAEpCvP,cAACC,WAAQ,CAAAC,SAAEiP,GACtB,GAEJ,CACIlN,GAAI,kBACJlD,MAAO,sBACPmQ,SAAU,SAAAM,GAAc,IAAXpD,EAAGoD,EAAHpD,IACT,OACIjM,eAACF,WAAQ,CAAAC,SAAA,CACJkM,EAAIjG,KAAK,GAAGsJ,SAAS,KAAGrD,EAAIjG,KAAK,GAAGuJ,YAGjD,GAEJ,CACIzN,GAAI,eACJlD,MAAO,gBACPmQ,SAAU,SAAAhF,GAAc,IAAXkC,EAAGlC,EAAHkC,IACL+C,EAAO,GAIX,OAHIC,IAAOhD,EAAIuD,WAAWL,YACtBH,EAAOC,IAAOhD,EAAIuD,WAAWJ,OAAO,cAEjCvP,cAACC,WAAQ,CAAAC,SAAEiP,GACtB,GAEJ,CACIlN,GAAI,YACJlD,MAAO,YACPmQ,SAAU,SAAA/C,GAAc,IAAXC,EAAGD,EAAHC,IACTwD,EAA4CC,YAAuBzD,IAAQ,CAAC,EAAC0D,EAAAF,EAArEG,mBAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAAJ,EAAEK,gBAAQ,IAAAD,EAAG,GAAEA,EACvC,OACI7P,eAACF,WAAQ,CAAAC,SAAA,CACJ6P,EAAY,IAAEE,IAG3B,GAEJ,CACIhO,GAAI,SACJlD,MAAO,SACPmQ,SAAU,SAAAgB,GAAc,IAC4BC,GADpCD,EAAH9D,KACqC,CAAC,GAAzCgE,OAA4BC,QAAtB,IAAAF,EAAoB,CAAC,EAACA,GAAlBG,cAAM,IAAAD,EAAG,GAAEA,EAE3B,OADIC,IAAQA,GAAkB,QACvBtQ,cAACC,WAAQ,CAAAC,SAAEoQ,GACtB,GAEJ,CACIrO,GAAI,UACJlD,MAAO,UACPmQ,SAAU,SAAAqB,GAAc,IAAXnE,EAAGmE,EAAHnE,IACT,OAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKvG,SAChB,EACA2K,WAAY,MAEhB,CACIvO,GAAI,OACJlD,MAAO,OACPyR,WAAY,MAEhB,CACIvO,GAAI,GACJlD,MAAO,UACP0R,QAAS,CAAC,SAAU,QAAS,aAAc,iBAAiBtN,SAASwK,GACrEuB,SAAU,SAAAwB,GAAc,IAAXtE,EAAGsE,EAAHtE,IACT,OAAOpM,cAAC2Q,IAAM,CACVC,UAAWC,IACXC,GAAIzD,EAAO,IAAMjB,EAAIf,IACrBrG,QAAQ,WACR9D,MAAM,UAAShB,SAClB,kBAGL,KAKZ,OACIF,cAAA,OAAKI,UAAW6M,EAAQ8D,MAAM7Q,SAC1BC,eAACF,WAAQ,CAAAC,SAAA,CACLF,cAACgR,IAAa,CAACtC,OAAQA,EAAQpL,KAAMsH,IACrC5K,cAACiR,QAAK,CAAC5D,KAAMA,EAAO,OAAQuD,UAAW3G,QAIvD,C,sSC3IeiH,EAjCS,SAAHhS,GAAmE,IAADiS,EAAAjS,EAA7DoE,YAAI,IAAA6N,EAAG,GAAEA,EAAEC,EAAYlS,EAAZkS,aAAYC,EAAAnS,EAAEuO,YAAI,IAAA4D,EAAG,EAACA,EAAAC,EAAApS,EAAE8P,aAAK,IAAAsC,EAAG,EAACA,EAAAC,EAAArS,EAAEwO,aAAK,IAAA6D,EAAG,EAACA,EAC7E/P,EAA4BC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAhCmI,EAAMjI,EAAA,GAAE8P,EAAS9P,EAAA,GAExB4J,qBAAU,WACFmG,MAAMC,QAAQpO,IACdkO,EAAUlO,EAAKqG,OAEvB,GAAG,CAACrG,IAQJ,OAAIqG,EAAS,IAAMqF,EAAQ,GAChB,KAGP7O,eAACwR,IAAK,CAACrJ,UAAU,MAAM5F,GAAI,CAAC6F,QAAS,OAAQG,eAAgB,gBAAiB/F,EAAG,GAAIwG,WAAY,SAASjJ,SAAA,CACrG8O,EAAQ,IAAM7O,eAACyR,IAAU,CAAClP,GAAI,CAACxB,MAAO,WAAY2Q,SAAU,GAAG3R,SAAA,CAAC,WAASoD,EAAKqG,OAAO,OAAKqF,EAAM,cAChG1L,EAAKqG,SAAWqF,GAAShP,cAAC8R,IAAU,CACjC9C,MAAO+C,KAAKC,KAAKhD,EAAQtB,GACzBxM,MAAM,UACN8D,QAAQ,YACRyI,KAAMA,EAAO,EACbwE,KAAK,QACL3R,SAlBK,SAACV,EAAGsS,GACbd,GACAA,EAAaxR,EAAGsS,EAExB,MAkBJ,E,kBC/Be,SAASC,IACtB,OACEnS,cAAAoS,IAAA,CAAK1P,GAAI,CACPwG,OAAQ,OACRX,QAAS,OACTG,eAAgB,SAChBS,WAAY,SACZ,YAAa,CACXkJ,WAAY,IAEdnS,SACAF,cAACsS,IAAgB,KAGvB,C,wLCKMC,EAAOC,YAAMC,IAAND,EAAkB,SAAAtT,GAAA,IAAEwT,EAAKxT,EAALwT,MAAK,OAAAC,YAAA,GACjCD,EAAME,YAAYC,KAAK,MAAQ,CAC5BhB,SAAU,GACViB,QAAS,SACZ,IAECC,EAAaP,YAAMQ,IAANR,EAAe,SAAApR,GAAA,IAAEsR,EAAKtR,EAALsR,MAAK,OAAAC,YAAA,GACpCD,EAAME,YAAYC,KAAK,MAAQ,CAC5BhB,SAAU,IACb,IAGL,SAASoB,EAAOzD,GAA+B,IAAD0D,EAAA1D,EAA5BP,eAAO,IAAAiE,EAAG,GAAEA,EAAAC,EAAA3D,EAAEd,cAAM,IAAAyE,EAAG,CAAC,EAACA,EACvCC,EAAuC1E,EAAhCE,oBAAY,IAAAwE,EAAG,CAAC,EAACA,EAAEC,EAAa3E,EAAb2E,UACpBC,EAAU9O,mBAAQ,WACpB,OAAOyK,EAAQ5L,KAAI,SAACkQ,EAAQ/T,GACxB,IAAA0K,EAA8CqJ,GAAU,CAAC,EAACC,EAAAtJ,EAAnDnL,aAAK,IAAAyU,EAAG,GAAEA,EAAAC,EAAAvJ,EAAEjI,UAAE,IAAAwR,EAAG,GAAEA,EAAAC,EAAAxJ,EAAEuG,eAAO,IAAAiD,GAAOA,EAG1C,OADkBC,IAAEC,WAAWnD,GAAWA,EAAQ,CAAC8C,WAAW9C,GAKtDzQ,cAACuS,EAAI,CAACO,QAAS,SAAUpQ,GAAEgC,YAAA,CAAGxD,MAAO,OAAQgE,WAAY,KAAQ0J,GAAc1O,SACrDnB,GAAdkD,GAAMzC,GAJf,IAMf,GACJ,GAAG,CAACyP,EAASL,IACb,OAAOzO,eAAA0T,IAAA,CAAA3T,SAAA,CACFoT,EACAD,GAAarT,cAACuS,EAAI,CAACO,QAAS,OAAQpQ,GAAI,CAACkM,oBAElD,CAEA,IAiDMkF,EAAY,SAAH5D,GAAkF,IAA7EjB,EAAOiB,EAAPjB,QAAO8E,EAAA7D,EAAE5M,YAAI,IAAAyQ,EAAG,GAAEA,EAAAC,EAAA9D,EAAExB,cAAM,IAAAsF,EAAG,CAAC,EAACA,EAAEC,EAAc/D,EAAd+D,eAAgBC,EAAYhE,EAAZgE,aAAiBC,EAAIC,YAAAlE,EAAAmE,GAEtF,OAAQ/Q,GAAQ,IAAID,KAAI,SAAC+I,EAAK5M,GAC1B,IAAA8U,EAAuB5F,EAAhB6F,eAAO,IAAAD,EAAG,GAAEA,EAInB,OAHIC,IACAnI,EAAMA,EAAImI,IAtDD,SAAHpI,GAAqH,IAADqI,EAAArI,EAA/GC,WAAG,IAAAoI,EAAG,GAAEA,EAAAC,EAAAtI,EAAE8C,eAAO,IAAAwF,EAAG,CAAC,EAACA,EAAAC,EAAAvI,EAAEuC,cAAM,IAAAgG,EAAG,CAAC,EAACA,EAAET,EAAc9H,EAAd8H,eAAgBU,EAAQxI,EAARwI,SAAUT,EAAY/H,EAAZ+H,aAAcU,EAAmBzI,EAAnByI,oBAAwBT,EAAIC,YAAAjI,EAAA0I,GAC5HC,EAKIpG,EAJA2E,iBAAS,IAAAyB,GAAQA,EAAAC,EAIjBrG,EAHAC,sBAAc,IAAAoG,EAAG,OAAMA,EAAAC,EAGvBtG,EAFAuG,kBAAU,IAAAD,OAAGE,EAASF,EACtBG,EACAzG,EADAyG,WAEGxH,EAAQwG,EAARxG,KACHyH,EAAW,CAAC,EACZD,IACAC,EAAWD,EAAW,CAAC/I,SAAS,CAAC,GAErC,IAIIiJ,EAAarV,cAACuS,EAAI,CAAC7P,GAAI,CAAC,EAAGoQ,QAAS,OAAQlC,UAAU,KAAK0E,MAAM,MAAKpV,SAClEF,cAAAc,IAAA,CAAYC,QAASmT,EAAalT,U,EAAWoL,EAAIf,IAAKe,GAAMmJ,UAAWX,EAAoB1U,SACvFF,cAAC+S,EAAU,CAAC7R,MAAO,cAIzBsU,EAAOvG,EAAQ5L,KAAI,SAACkQ,EAAQkC,GAC9B,IAKID,EALJ5F,EAA6E2D,GAAU,CAAC,EAACmC,EAAA9F,EAAlF3N,UAAE,IAAAyT,EAAG,GAAEA,EAAExG,EAAQU,EAARV,SAAQyG,EAAA/F,EAAEY,kBAAU,IAAAmF,EAAG,GAAEA,EAAEC,EAAchG,EAAdgG,eAAcC,EAAAjG,EAAEa,eAAO,IAAAoF,GAAOA,EAEzE,OADkBlC,IAAEC,WAAWnD,GAAWA,EAAQ,CAAC8C,WAAW9C,IAM1D+E,EADDI,GAAkBjC,IAAEC,WAAWgC,GACvBA,EAAexJ,EAAInK,IAErB0R,IAAEC,WAAW1E,GACXA,EAAS,CAAC9C,MAAKuB,QAAOgH,IAAanE,EAEnCpE,EAAInK,IAAOuO,EAEfxQ,cAACuS,EAAI,CAAcO,QAASnE,GAAkB,SAAUiC,UAAU,KAAK0E,MAAM,MAAKpV,SACpFsV,GADavT,EAAKwT,IAXZ,IAcf,IAEA,OAAOtV,eAAA0T,IAAA,CAAyBiC,QAASb,EAAYlU,QA9B7B,SAACnB,GACjBA,EAAEmW,iBACEpC,IAAEC,WAAWK,IAAiBA,EAAe7H,EACrD,EA4Ba1J,GAAMuS,EAAUvQ,YAAA,CAAIsR,OAAQ,WAAcZ,GAAY,CAAC,EAAElV,SAAA,CACrEsV,EACAnC,GAAagC,IAHIV,EAK1B,CASesB,CAAYvR,YAAC,CAAC0H,MAAK6C,UAASP,SAAQuF,iBAAgBU,SAAUnV,EAAO0U,gBAAiBC,GACjG,GACJ,EAGMnD,EAAgB,SAAHkF,GAAqF,IAADC,EAAAD,EAA/ExH,cAAM,IAAAyH,EAAG,CAAC,EAACA,EAAAC,EAAAF,EAAE5S,YAAI,IAAA8S,EAAG,GAAEA,EAAE5L,EAAO0L,EAAP1L,QAAO6L,EAAAH,EAAEI,eAAO,IAAAD,GAAQA,EAAEE,EAASL,EAATK,UAAWC,EAAYN,EAAZM,aACjFlT,EAAOA,GAAQ,GACf,IAAA9B,EAAoCC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAC,GAA1CiV,EAAU/U,EAAA,GAAEgV,EAAahV,EAAA,GAAAgJ,EACNjJ,mBAAS,CAAES,MAAM,EAAOwM,OAAQ,CAAC,IAAI/D,EAAAhJ,YAAA+I,EAAC,GAA3DiM,EAAMhM,EAAA,GAAEiM,EAASjM,EAAA,GAAAkM,EAgBdnI,EAdAO,eAAO,IAAA4H,EAAG,GAAEA,EACZ5B,EAaAvG,EAbAuG,WAAU6B,EAaVpI,EAZAqI,qBAAa,IAAAD,GAAOA,EACpB1F,EAWA1C,EAXA0C,aACA3D,EAUAiB,EAVAjB,KACAuB,EASAN,EATAM,MACAtB,EAQAgB,EARAhB,MAAKsJ,EAQLtI,EAPAuD,YAAI,IAAA+E,EAAG,SAAQA,EAAAC,EAOfvI,EANAK,oBAAY,IAAAkI,EAAG,GAAEA,EACjBC,GAKAxI,EALAwI,uBAAsBC,GAKtBzI,EAJA0I,oBAAW,IAAAD,IAAQA,GACnBE,GAGA3I,EAHA2I,SACAC,GAEA5I,EAFA4I,cAAaC,GAEb7I,EADA8I,0BAAiB,IAAAD,GAAG,GAAEA,GAAAE,GAEZC,cAAgB3J,KAA7BJ,aAAI,IAAA8J,GAAG,GAAEA,GACV7C,GAAsB4C,GAAkBG,QAAQhK,KAAS,IAAK,EAC9DjI,GAAMtB,IAAMuB,OAAO,IAEjBsO,GAAiB,SAAC7H,GACpB,GAAI2K,GAAiB9B,EAAY,CAC7B,IAAM2C,EAAM3C,EAAW7I,GACnB8K,KACA9K,EAAM8K,GAAuB9K,IAEjC5B,EAAQqN,KAAKD,EAAKxL,EACtB,MAAW6I,GACPA,EAAW7I,EAEnB,EAEM8H,GAAe,SAACjS,EAAImK,EAAKxM,GAC3BA,EAAEkY,kBACF,IAAMpJ,EAAS,CACXqJ,MAAO,kBAAM5X,eAAAiI,IAAA,CAAMC,WAAS,EAACc,WAAW,SAASzG,GAAI,CAAEC,EAAG,aAAeyG,IAAK,EAAElJ,SAAA,CAC5EF,cAACgY,IAAgB,CAAC9W,MAAM,UACxBlB,cAAAiF,IAAA,CAAYvC,GAAI,CAAEmP,SAAU,UAAW3M,WAAY,KAAOhE,MAAM,QAAOhB,SAAC,aACrE,EACP+X,OAAQ,SACRC,KAAM,kBAAMb,GAASpV,EAAIkW,GAAc,EACvCtO,QAAS,kBAAM7J,cAAAoY,IAAA,CAAmB1V,GAAI,CAACxB,MAAO,QAAQhB,SAAEoX,IAAiB,+CAAkE,GAE/IV,EAASlS,wBAAC,CAAC,EAAIiS,GAAM,IAAEzU,MAAM,EAAMwM,WACvC,EAEA,SAASyJ,KACLvB,EAASlS,wBAAC,CAAC,EAAIiS,GAAM,IAAEzU,MAAM,IACjC,CAEA,IASMmW,GAAkB7T,mBAAQ,WAE5B,OADeiN,MAAMC,QAAQpO,IAASA,EAAKqG,OAQpCxJ,eAACF,WAAQ,CAAAC,SAAA,CACZF,cAAAsY,IAAA,CAAWlY,UAAW,GAAIsC,GAAI,CAAC6V,gBAAiB,UAAWC,UAAW,oCAAoCtY,SACtGF,cAACiT,EAAO,CAAChE,QAASA,EAASP,OAAQA,MAEvC1O,cAAAyY,IAAA,CAAAvY,SACIF,cAAC8T,EAAS,CACNnG,KAAMA,GAENsB,QAASA,EACT3L,KAAMA,EACNoL,OAAQA,EACRuF,eAAgBA,GAChBC,aAAcA,GACdU,oBAAqBA,IANhB8D,KAAKC,YAbV3Y,cAAA,SAAOyJ,MAAO,CAACP,OAAQ,KAAKhJ,SACpCF,cAAA,MAAAE,SACIF,cAAA,MAAIyJ,MAAO,CAACZ,UAAW,UAAU3I,SAACF,cAAA,MAAAE,SAAK6O,GAAgB,0BAqBnE,GAAG,CAACzL,EAAMoL,IASV,OAPApD,qBAAU,WAAO,IAADsN,EACZ,GAAO,OAAHlT,SAAG,IAAHA,IAAY,QAATkT,EAAHlT,GAAKkC,eAAO,IAAAgR,GAAZA,EAAc7H,MAAO,CACrB,IAAM8H,EAAmBnT,GAAIkC,QAAQmJ,MAAM+H,aAC3CpC,EAAahS,wBAAC,CAAC,EAAG+R,GAAU,IAAEvN,OAAQ2P,EAAmB,IAAMA,OAAmB3D,IACtF,CACJ,GAAG,IAEI/U,eAAA,OAAAD,SAAA,CACFkX,IAAepX,cAAAyC,IAAA,CAAO0G,WAAW,WAAUjJ,SACxCF,cAAAc,IAAA,CAAYiX,MAAM,UAAUhX,QAASwV,EAAUrW,SAC3CF,cAAA+Y,IAAA,CAAS3Y,UAAYoW,EAAgB,kBAAetB,QAG5D/U,eAAA6Y,IAAA,CACIpI,UAASqI,IACT7Y,UAAW,GACXsC,GAAI,CAACwW,UAAW,yBAA0BC,GAAI,GAAGjZ,SAAA,CAEhDoW,EAvDS,WACd,IAAM8C,EAAcC,OAAOD,YAAc,IACrClQ,GAAUuN,EAAWvN,OAASuN,EAAWvN,OAASkQ,EAAcA,EAAc3C,EAAWvN,OAASkQ,IAAgBA,EACtH,OAAOpZ,cAAAoI,IAAA,CAAMC,WAAS,EAACc,WAAY,SAAUT,eAAe,SAAShG,GAAI,CAACwG,UAAQhJ,SAC9EF,cAAAoI,IAAA,CAAMlF,MAAI,EAACiG,WAAW,SAASzG,GAAI,CAAC4W,SAAU,YAAYpZ,SACtDF,cAACuZ,EAAO,OAGpB,CAgDcC,GACAxZ,cAAAyZ,IAAA,CAAO/T,IAAK,SAAAgU,GAAE,OAAIhU,GAAIkC,QAAe,MAAI8R,CAAE,EAAE,aAAW,gBAAgBzH,KAAMA,EAAK/R,SAChFmY,MAEP/B,GAAWhT,EAAKqG,OAAS,GACvB3J,cAACkR,EAAe,CAAC5N,KAAMA,EAAM8N,aAAcA,EAAc3D,KAAMA,EAAMuB,MAAOA,EAAOtB,MAAOA,OAElG1N,cAAC2Z,IAAM,CAACvZ,UAAU,uBAAuB8B,KAAMyU,EAAOzU,KAAMwM,OAAQiI,EAAOjI,OAAQtM,QAAS+V,OAEpG,EAEeyB,yBAAWC,eAAK7I,G,6XCjNlB8I,EACX,WADmB,IAClBrM,EAAIsM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,EAAGrM,EAAKqM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAIC,EAAMD,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAE,sBAAA7a,EAAA+a,YAAAC,cAAAC,MAClC,SAAAC,EAAOjN,GAAQ,IAAAkN,EAAAC,EAAAhX,EAAA,OAAA4W,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBC,YAAW,CAACC,IAAI,qBAADja,OACvC8M,EAAO,EAAC,WAAA9M,OACF+M,EAAK,YAAA/M,OAAWqZ,KAAY,KAAD,EAAAK,EAAAG,EAAAK,KAFhCP,EAAOD,EAAPC,QAAShX,EAAI+W,EAAJ/W,KAGbgX,EACDnN,EAAS,CACPzM,KAAMoa,IACNC,QAAS,CAAE9M,MAAO3K,EAAMmK,OAAMC,WAG9BsN,YAAa1X,EAAK2X,QAAS,SAC9BT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEDrN,EAASgO,YAASX,EAAAU,GAAID,QAAS,UAAU,yBAAAT,EAAAY,OAAA,GAAAhB,EAAA,kBAE5C,gBAAAiB,GAAA,OAAAnc,EAAAoc,MAAA,KAAAvB,UAAA,EAjBiC,EAiBjC,EAEUtL,EACX,WAD0B,IACzBhB,EAAIsM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,EAAGrM,EAAKqM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,EAAGwB,EAAMxB,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAE,sBAAA3U,EAAA6U,YAAAC,cAAAC,MACjC,SAAAqB,EAAOrO,GAAQ,IAAAyK,EAAA6D,EAAAC,EAAAzN,EAAAL,EAAA+N,EAAA,OAAAzB,cAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAIqB,OAJrBkB,EAAAnB,KAAA,EAEL7C,EAAG,gCAAAjX,OACP8M,EAAO,EAAC,WAAA9M,OACA+M,EAAK,YAAA/M,OAAW4a,GAAMK,EAAAlB,KAAA,EACTmB,IAAMC,IAAIlE,GAAK,KAAD,EAA/B6D,EAAQG,EAAAf,KAAAa,EACuBD,EAASnY,KAAtC2K,EAAKyN,EAALzN,MAAOL,EAAK8N,EAAL9N,MAAO+N,EAAUD,EAAVC,WACtBxO,EAAS,CACPzM,KAAMqb,IACNhB,QAAS,CAAEnQ,SAAUqD,EAAOR,OAAMC,QAAO6N,SAAQ3N,QAAO+N,gBACvDC,EAAAlB,KAAA,gBAAAkB,EAAAnB,KAAA,EAAAmB,EAAAV,GAAAU,EAAA,SAEHzO,EAASgO,YAASS,EAAAV,GAAID,QAAS,UAAU,yBAAAW,EAAAR,OAAA,GAAAI,EAAA,kBAE5C,gBAAAQ,GAAA,OAAA5W,EAAAkW,MAAA,KAAAvB,UAAA,EAfgC,EAehC,EAgDUkC,EAAc,WAAH,IAAIxO,EAAIsM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,EAAGrM,EAAKqM,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAIwB,EAAMxB,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAIC,EAAMD,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAE,sBAAA7P,EAAA+P,YAAAC,cAAAC,MAAK,SAAA+B,EAAO/O,GAAQ,IAAAyK,EAAAuE,EAAA,OAAAjC,cAAAK,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAI7C,OAJ6C0B,EAAA3B,KAAA,EAElF7C,EAAG,qBAAAjX,OACP8M,EAAO,EAAC,qBAAA9M,OACU4a,EAAM,YAAA5a,OAAWqZ,GAAMoC,EAAA1B,KAAA,EACzBmB,IAAMC,IAAIlE,GAAK,KAAD,EAA1BuE,EAAGC,EAAAvB,KACT1N,EAAS,CACPzM,KAAM2b,KACNtB,QAAS,CAAEzX,KAAM6Y,EAAI7Y,KAAMmK,OAAMC,QAAO6N,YACvCa,EAAA1B,KAAA,gBAAA0B,EAAA3B,KAAA,EAAA2B,EAAAlB,GAAAkB,EAAA,SAEHjP,EAASgO,YAASiB,EAAAlB,GAAID,QAAS,UAAU,yBAAAmB,EAAAhB,OAAA,GAAAc,EAAA,kBAE5C,gBAAAI,GAAA,OAAApS,EAAAoR,MAAA,KAAAvB,UAAA,EAbuE,EAavE,EAEUvL,EACX,WAAiB,sBAAArC,EAAA8N,YAAAC,cAAAC,MACjB,SAAAoC,EAAOpP,EAAUqP,GAAQ,IAAAC,EAAAC,EAAA,OAAAxC,cAAAK,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OACvBvN,EAAS,CAAEzM,KAAMkc,OAAwBH,EAGrCD,IAAUE,EAAAD,EADZ1R,KAAY2R,EAAJjP,KAAiBiP,EAAXG,YAEhB,wBAAAF,EAAAvB,OAAA,GAAAmB,EAAA,KACD,gBAAAO,EAAAC,GAAA,OAAA5Q,EAAAmP,MAAA,KAAAvB,UAAA,EAPgB,EAOhB,EAEUiD,EAAa,WAAH,IAAIC,EAAKlD,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,KAAI,MAAM,CAC3CrZ,KAAMwc,KACNnC,QAASkC,EACV,EAiBYE,EAAU,SAACC,EAAUC,GAAQ,sBAAAnN,EAAA+J,YAAAC,cAAAC,MAAK,SAAAmD,EAAOnQ,GAAQ,IAAAuB,EAAAyN,EAAA,OAAAjC,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAMzD,OANyD6C,EAAA9C,KAAA,EAEpD/L,EAAS,CACb4E,QAAS,CACP,eAAgB,qBAEnBiK,EAAA7C,KAAA,EACiBmB,IAAM2B,KAAK,YAAaJ,EAAU1O,GAAQ,KAAD,EAArDyN,EAAGoB,EAAA1C,KAET1N,EAAS,CACPzM,KAAM+c,IACN1C,QAASoB,EAAI7Y,OAGf0X,YAAa,gBACVqC,GACDA,EAAwB,MAAflB,EAAIuB,OAAgBvB,EAAI7Y,MAClCia,EAAA7C,KAAA,iBAAA6C,EAAA9C,KAAA,GAAA8C,EAAArC,GAAAqC,EAAA,SAEDpQ,EAASgO,YAASoC,EAAArC,GAAID,QAAS,UAAU,yBAAAsC,EAAAnC,OAAA,GAAAkC,EAAA,mBAE5C,gBAAAK,GAAA,OAAAzN,EAAAoL,MAAA,KAAAvB,UAAA,EArByC,EAqBzC,EAEY6D,EAAa,SAACR,GAAQ,IAAEpD,EAAMD,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,GAAIpT,EAAWoT,UAAApQ,OAAA,QAAAuL,IAAA6E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAQtD,UAAApQ,OAAA,EAAAoQ,UAAA,QAAA7E,EAAA,sBAAAgB,EAAA+D,YAAAC,cAAAC,MAAK,SAAA0D,EAAO1Q,EAAUqP,GAAQ,IAAAsB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxM,EAAAyM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtE,EAAAhX,EAAAub,EAAAC,EAAArR,EAAAC,EAAAqR,EAAA,OAAA7E,cAAAK,MAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,OAGpG,IAHoGsE,EAAAvE,KAAA,EAE9FqD,EAAO,IAAImB,SACjBlB,EAAA,EAAAC,EAAgBkB,OAAOC,KAAK/B,GAASW,EAAAC,EAAArU,OAAAoU,IAA5BE,EAAGD,EAAAD,GACN,CAAC,mBAAoB,iBAAiBpG,QAAQsG,GAAO,IACjD3a,EAAO8Z,EAASa,GAChBvM,EAAUD,MAAMC,QAAQpO,GACxB6a,EAAkB,OAAT7a,EACX8a,EAAa1M,IAAYyM,EAASiB,KAAKC,UAAU/b,GAAQA,EAC7Dwa,EAAKwB,OAAOrB,EAAKG,IAIrB,IADAN,EAAKwB,OAAO,cAAeF,KAAKC,UAAU1Y,IAC1C0X,EAAA,EAAAC,EAAgB,CAAC,mBAAoB,iBAAgBD,EAAAC,EAAA3U,OAAA0U,IAEnD,GADMG,EAAQpB,EADPa,EAAGK,EAAAD,IAEA,CAADI,EAAAc,YAAmBf,GAAK,IAAtB,IAAAC,EAAAha,MAAAia,EAAAD,EAAAe,KAAAC,MAASd,EAAID,EAAA3e,MAAW+d,EAAKwB,OAAOrB,EAAKU,EAAM,OAAAe,GAAAjB,EAAA7e,EAAA8f,EAAA,SAAAjB,EAAAkB,GAAA,EAC3D,OAAAX,EAAAtE,KAAA,EAE6BkF,YAAa,CAAChF,IAAK,mBAAoBiF,KAAM/B,IAAM,OAAAc,EAAAI,EAAAnE,KAA1EP,EAAOsE,EAAPtE,QAAShX,EAAIsb,EAAJtb,KACbgX,GACDU,YAAa,gBACd6D,EAKGrC,IAAUsC,EAAAD,EAHZ9T,KACEwQ,OAAU9N,EAAIqR,EAAJrR,KAAMC,EAAKoR,EAALpR,MAAOqR,EAAKD,EAALC,MAItB5R,EADA4R,EACS9C,EAAYxO,EAAMC,EAAOqR,GADlBjF,EAAS,EAAG,EAAGE,IAEpCqD,EAAS/C,EAAShX,GAAK0b,EAAAtE,KAAA,iBAAAsE,EAAAvE,KAAA,GAAAuE,EAAA9D,GAAA8D,EAAA,SAEvBhE,YAAagE,EAAA9D,GAAID,QAAS,SAAS,yBAAA+D,EAAA5D,OAAA,GAAAyC,EAAA,mBAEtC,gBAAAiC,EAAAC,GAAA,OAAA7J,EAAAoF,MAAA,KAAAvB,UAAA,EAjCyE,EAiCzE,EAmDUiG,EAAa,SAACC,EAAS5C,GAAQ,sBAAA6C,EAAAjG,YAAAC,cAAAC,MAAK,SAAAgG,EAAOhT,GAAQ,IAAAiT,EAAA9F,EAAAhX,EAAA,OAAA4W,cAAAK,MAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAA2F,EAAA5F,KAAA,EAAA4F,EAAA3F,KAAA,EAE9B4F,YAAc,CAAC1F,IAAK,YAAaiF,KAAM,CAAEvc,KAAM,CAAE2c,QAASA,MAAa,OAAAG,EAAAC,EAAAxF,KAA9FP,EAAO8F,EAAP9F,QAAShX,EAAI8c,EAAJ9c,KAChB0X,YAAa1X,EAAK2X,QAASX,EAAU,UAAY,SAC9CA,GACDnN,EAAS,CACPzM,KAAM6f,IACNxF,QAASkF,IAGb5C,GAAYA,EAAS/C,EAAShX,GAAK+c,EAAA3F,KAAA,iBAAA2F,EAAA5F,KAAA,GAAA4F,EAAAnF,GAAAmF,EAAA,SAEnCrF,YAAaqF,EAAAnF,GAAID,QAAS,SAAQ,yBAAAoF,EAAAjF,OAAA,GAAA+E,EAAA,mBAErC,gBAAAK,GAAA,OAAAN,EAAA5E,MAAA,KAAAvB,UAAA,EAd2C,EAc3C,C","file":"static/js/17.8bf02938.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (e) => {\r\n        const value = parseInt(e.target.value)\r\n        const name = e.target.name\r\n        if (value < 1) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'price', value: parseInt(amount) * value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)}>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst InvoiceDataTableRows = ({ price = 99 }) => {\r\n    return (<Fragment>\r\n        <tr className='InvoiceDataTableRows'>\r\n            <td>9</td>\r\n            <td>a</td>\r\n            <td>b</td>\r\n            <td>c</td>\r\n            <td>{price ? `$${parseFloat(price).toFixed(2)}` : '$0.00'}</td>\r\n        </tr>\r\n    </Fragment>)\r\n}\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />} aria-describedby={'jugal'}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    Divider,\r\n    Grid,\r\n    Stack,\r\n    Typography,\r\n    Zoom,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport { getCheckStatusIcon } from \"../../utils/utils\";\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst config = {\r\n    rowCellPadding: \"inherit\",\r\n    columns: [\r\n        {\r\n            id: 'serviceName',\r\n            label: 'Service'\r\n        },\r\n        {\r\n            id: 'quantity',\r\n            label: 'Quanity'\r\n        },\r\n        {\r\n            id: 'price',\r\n            label: 'Price'\r\n        },\r\n        {\r\n            id: 'amount',\r\n            label: 'Amount'\r\n        },\r\n    ]\r\n}\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    setPdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {},\r\n        [{ receiverName = \"\" }] = drop || [],\r\n        [{ pickupAddress, pickupCity, pickupState, pickupZip }] = pickup;\r\n    console.log(bucketFiles)\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} />\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return ref.current;\r\n    }, [ref.current]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            class=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <div ref={ref} className=\"printArea\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n                    >\r\n                        <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: landscape;\\ }\\\r\n          \"}</style>\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item sx={{ flexGrow: 1 }}>\r\n                                    <Stack spacing={1}>\r\n                                        <Stack>\r\n                                            <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                                {'Sunny Freight'}\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack>\r\n                                        <Stack>\r\n                                            <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                                Invoice\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <InputField label=\"Notes\" type=\"textarea\" />\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n                        <Grid xs={12} item>\r\n                            <Grid container justifyContent={\"space-between\"}>\r\n                                <Grid item>\r\n                                    <Stack spacing={1} sx={{ p: 3 }}>\r\n                                        <Stack>\r\n                                            <Typography>Bill To:</Typography>\r\n                                        </Stack>\r\n                                        <Stack>\r\n                                            <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                                        <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                            <Title>Load Number: </Title>\r\n                                            <Title>{loadNumber}</Title>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n                        <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                            <Stack sx={{ textAlign: \"right\" }}>\r\n                                <Title>Total: {getTotal() || '- -'}</Title>\r\n                            </Stack>\r\n                            <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                                <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                                    <InvoiceServiceWrapper\r\n                                        onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                                        deleteService={deleteService}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid xs={3} item>\r\n                                    {/* <Button variant={\"contained\"} size={\"small\"} className={'addServicesInvoice'}\r\n                                  onClick={addService}>\r\n                                  Add Services\r\n                              </Button> */}\r\n                                </Grid>\r\n                                <Grid xs={6} item>\r\n                                    <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'rateCon'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>Rate Con</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'pod'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>\r\n                                                    Proof Of Delivery\r\n                                                </Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                        <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                            <label htmlFor={'accessorials'}>\r\n                                                <Typography textAlign={'center'} sx={{\r\n                                                    width: 150,\r\n                                                    background: 'rgb(0, 123, 255)',\r\n                                                    color: '#FFF',\r\n                                                    borderRadius: '4px'\r\n                                                }}>Accessorials</Typography>\r\n                                                <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                            </label>\r\n                                            <div>\r\n                                                {getCheckStatusIcon(!!accessorials.length)}\r\n                                            </div>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                                <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                                    <ReactToPrint\r\n                                        content={reactToPrintContent}\r\n                                        documentTitle=\"Invoice\"\r\n                                        // onBeforeGetContent={handleOnBeforeGetContent}\r\n                                        // onBeforePrint={handleBeforePrint}\r\n                                        removeAfterPrint\r\n                                        trigger={reactToPrintTrigger}\r\n                                    />\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {docFileViewer}\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {}, history }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const invoices = useSelector((state) => state.load.invoices.data) || [],\r\n        [services, setServices] = useState([]),\r\n        data = invoices.find((invoice) => invoice._id === id);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.price) + acc, 0)\r\n        return \"$\" + total.toFixed(2)\r\n    }, [services])\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                setPdf={setPdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { resetLoadsSearch } from '../../actions/load.js';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { getInvoiceLoads } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\n\r\nconst useStyles = makeStyles({\r\n    TableContainer: {\r\n        borderBottom: \"none\"\r\n    },\r\n    loadSearchbar: {\r\n        textAlign: 'right',\r\n        paddingBottom: 10\r\n    },\r\n});\r\n\r\nexport default function InvoicesList({ setSelectedLoad, resetSearchField, listBarType, load_selected }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const {path} = useRouteMatch();\r\n    const [loading, setLoading] = useState(true);\r\n    const { page, limit, total } = useSelector(state => state.load.invoices);\r\n    const { role } = useSelector(state => state.auth?.user) || {};\r\n    const invoices = useSelector(state => state.load.invoices.data);\r\n    const [modalEdit, enableEdit] = useState(false);\r\n    const [open, setOpen] = useState({ show: false, data: {} });\r\n    const loads = useSelector(state => state.load.loads);\r\n    const { loads: chLoads = [], totalCount } = useSelector(state => state.openBoard.chRobinsonLoads, shallowEqual);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        dispatch(getInvoiceLoads());\r\n        // dispatch(getCHLoads(true));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getInvoiceLoads());\r\n    }, [loads]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        dispatch(getInvoiceLoads(newPage, limit));\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        const limit = event.target.value;\r\n        dispatch(getInvoiceLoads(0, limit));\r\n    };\r\n\r\n    const config = {\r\n        rowCellPadding: \"inherit\",\r\n        headerCellSx: { pt: 1, pb: 1 },\r\n        emptyMessage: 'No Invoices found',\r\n        page,\r\n        count: totalCount,\r\n        limit,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({ row }) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row) || {}\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"weight\",\r\n                label: \"Weight\",\r\n                renderer: ({ row }) => {\r\n                    let { weight: { pounds = \"\" } = {} } = row || {};\r\n                    if (pounds) pounds = pounds + \" lbs\";\r\n                    return <Fragment>{pounds}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({ row }) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: ['driver', 'admin', 'superAdmin', 'ownerOperator'].includes(role),\r\n                renderer: ({ row }) => {\r\n                    return <Button\r\n                        component={Link}\r\n                        to={path + '/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Create Invoice\r\n                    </Button>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div className={classes.table}>\r\n            <Fragment>\r\n                <EnhancedTable config={config} data={invoices} />\r\n                <Route path={path + '/:id'} component={Invoice} />\r\n            </Fragment>\r\n        </div>\r\n    )\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Stack direction='row' sx={{display: 'flex', justifyContent: 'space-between', p: 3}} alignItems={'center'}>\r\n            {count > 10 && <Typography sx={{color: '#525F7F'}} fontSize={13}>Showing {data.length} of {count} entries</Typography>}\r\n            {data.length !== count && <Pagination\r\n                count={Math.ceil(count / limit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                page={page + 1}\r\n                size=\"large\"\r\n                onChange={onChange}\r\n            />}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column}) : visible;\r\n            if(!isVisible){\r\n                return null;\r\n            }\r\n            return (\r\n                    <Cell padding={'normal'} sx={{color: '#000', fontWeight: 800, ...headerCellSx}}\r\n                           key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({row = [], columns = {}, config = {}, handleRowClick, rowIndex, handleDelete, hasDeletePermission, ...rest}) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'} />\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column}) : visible;\r\n        if(!isVisible){\r\n            return null;\r\n        }\r\n        let cell;\r\n        if(valueFormatter && _.isFunction(valueFormatter)){\r\n            cell = valueFormatter(row[id]);\r\n        }\r\n        else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = row[id] || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({ open: false, config: {} }),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = []\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{ p: '16px 24px' }} gap={1}>\r\n                <ErrorOutlineIcon color='error' />\r\n                <Typography sx={{ fontSize: '1.25rem', fontWeight: 550 }} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose),\r\n            content: () => <DialogContentText sx={{color: '#000'}}>{deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({ ...dialog, open: true, config });\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({ ...dialog, open: false })\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        const length = Array.isArray(data) && data.length;\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config}/>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <div>\r\n        {showRefresh && <Stack alignItems='flex-end'>\r\n            <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>\r\n        </Stack>}\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size}>\r\n                    {getTableContent}\r\n                </Table>}\r\n            {!loading && data.length > 0 &&\r\n                <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit}/>}\r\n        </TableContainer>\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose} />\r\n    </div>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED,\r\n} from \"./types\";\r\nimport {requestDelete, requestGet, requestPatch} from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads =\r\n  (page = 0, limit = 15, module = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      const {success, data} = await requestGet({uri:`/api/load/me?page=${\r\n            page + 1\r\n        }&limit=${limit}&module=${module}` });\r\n      if(success){\r\n        dispatch({\r\n          type: GET_LOADS,\r\n          payload: { loads: data, page, limit },\r\n        });\r\n      } else {\r\n          notification(data.message, 'error');\r\n      }\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const getInvoiceLoads =\r\n  (page = 0, limit = 5, search = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/invoice_loads?page=${\r\n        page + 1\r\n      }&limit=${limit}&search=${search}`;\r\n      const response = await axios.get(url);\r\n      const { loads, total, totalPages } = response.data;\r\n      dispatch({\r\n        type: INVOICE_LOAD_FETCHED,\r\n        payload: { invoices: loads, page, limit, search, total, totalPages },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/me?page=${\r\n        page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n      const res = await axios.get(url);\r\n      dispatch({\r\n        type: RETURNED_SEARCHED_LOADS,\r\n        payload: { data: res.data, page, limit, search },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n  async (dispatch, getState) => {\r\n    dispatch({ type: RESET_SEARCHED_LOADS });\r\n    const {\r\n      load: { page, rowsPerPage },\r\n    } = getState();\r\n    // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n  };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/load\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_LOAD,\r\n      payload: res.data,\r\n    });\r\n\r\n    notification(\"Load Created\")\r\n    if(callback){\r\n      callback(res.status === 200, res.data)\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n    try {\r\n      const form = new FormData();\r\n      for (let key of Object.keys(formData)) {\r\n        if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n          const data = formData[key];\r\n          const isArray = Array.isArray(data);\r\n          const isNull = data === null;\r\n          let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n          form.append(key, dataToSend);\r\n        }\r\n      }\r\n      form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n      for (let key of [\"rateConfirmation\", \"proofDelivery\"]) {\r\n        const files = formData[key];\r\n        if (files) for (let file of files) form.append(key, file);\r\n      }\r\n\r\n      const {success, data} = await requestPatch({uri: \"/api/load/modify\", body: form})\r\n      if(success){\r\n        notification('Load Updated')\r\n      }\r\n      const {\r\n        load: {\r\n          search: { page, limit, query },\r\n        },\r\n      } = getState();\r\n      if (!query) dispatch(getLoads(0, 5, module));\r\n      else dispatch(searchLoads(page, limit, query));\r\n      callback(success, data)\r\n    } catch (err) {\r\n      notification(err.message, \"error\");\r\n    }\r\n  };\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const {success, data} = await requestDelete({uri: '/api/load', body: { data: { load_id: load_id } }})\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if(success){\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n"],"sourceRoot":""}