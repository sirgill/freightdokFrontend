{"version":3,"sources":["components/loads/LoadsStatus.js","components/Atoms/Modal.js","components/Atoms/Dialog.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","hooks/useFetch.js","components/Atoms/form/InputField.js","actions/load.js","actions/driver.js","utils/helper.js","components/loads/components/LoadDetailsUploadComponent.js","components/loads/styles.js","components/loads/LoadDetailModal.js"],"names":["useStyles","makeStyles","TableContainer","borderBottom","loadSearchbar","textAlign","paddingBottom","LoadsStatus","_ref","resetSearchField","listBarType","dispatch","useDispatch","loads","loads_pagination","limit","total","currPage","rowsPerPage","search","query","sLoads","page","sPage","sLimit","sTotal","useSelector","state","load","modal","setModal","useState","open","data","loading","setLoading","useEffect","getLoads","setTimeout","resetLoadsSearch","tableConfig","onPageChange","handleChangePage","event","newPage","searchLoads","rowCellPadding","parseInt","count","hover","onRowClick","row","columns","id","label","renderer","_ref2","pickup","pickupData","pickupCity","_ref3","date","moment","pickUpByDate","isValid","format","_jsx","Fragment","children","_ref4","drop","dropData","dropCity","_ref5","deliverBy","_ref6","modesString","standard","getParsedLoadEquipment","_jsxs","emptyState","EnhancedTable","config","LoadDetailModal","modalEdit","handleClose","selectLoad","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","onClose","showClose","titleStyles","other","DialogTitle","sx","m","p","IconButton","onClick","position","left","top","color","palette","grey","CloseIcon","Modal","closeCallback","title","closeUrl","paperProps","preventBackdropClick","maxWidth","setOpen","React","useTheme","fullScreen","_useMediaQuery","breakpoints","down","e","arguments","length","undefined","equalsIgnoreCase","addEvent","window","removeEvent","Transition","useMemo","forwardRef","ref","history","useHistory","_Zoom","onExited","push","ENHANCED_DASHBOARD","goBack","TransitionComponent","PaperProps","DialogContent","dividers","borderTop","Slide","direction","preventBackdropClose","className","onOk","okText","content","onCancel","MuiDialog","fontWeight","DialogActions","Button","variant","StyledPagination","Pagination","height","width","StyledStack","Stack","justifyContent","display","flexWrap","TablePagination","onLimitChange","isLoading","setLength","Array","isArray","alignItems","Typography","fontSize","Select","disabled","name","value","options","onChange","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","handleRequestSort","hasSort","headerCellSx","hasDelete","sortField","sortOrder","showCheckbox","headers","map","column","index","visible","sort","_","isFunction","bgcolor","_TableSortLabel","active","unshift","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","checkboxKey","rowStyleCb","onCheckboxChange","checkboxes","rowStyle","deleteCell","component","scope","Tooltip","placement","_IconButton","bind","_id","cell","i","valueFormatter","cellPadding","get","Error","checked","indexOf","_Checkbox","concat","preventDefault","cursor","getTableCell","onRefetch","isRefetching","actions","isPaginationLoading","tableState","setTableState","dialog","setDialog","_columns","columnsBuilder","hasOnClickUrl","onPageSizeChange","emptyMessage","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","handleSortChange","getUserDetail","user","useRef","Actions","isValidElement","_Fragment","url","property","field","order","stopPropagation","_Grid","container","gap","ErrorOutlineIcon","_Typography","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","_TableBody","style","_ref$current","current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","_Box","_Stack","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","getLoader","innerHeight","item","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","useFetch","callback","setData","error","setError","setIsRefetching","requestCall","uri","queryParams","serialize","requestGet","showTriggers","then","result","finally","refetch","InputPure","type","labelKey","valueKey","onChangeSelect","showFirstBlank","onBlur","cloneDeep","toLowerCase","console","opts","opt","Input","InputField","multiple","labelStyle","formGrpStyle","errorText","FormGroup","htmlFor","marginRight","target","values","l","selected","module","async","getState","LOADS_FETCHING","payload","isLoadsFetching","success","GET_LOADS","notification","message","err","setAlert","res","axios","RETURNED_SEARCHED_LOADS","RESET_SEARCHED_LOADS","input","SELECT_LOAD","addLoad","formData","requestPost","body","ADD_LOAD","log","updateLoad","bucketFiles","form","FormData","key","Object","keys","dataToSend","JSON","stringify","append","files","file","requestPatch","deleteLoad","load_id","requestDelete","DELETE_LOAD","getDrivers","assign","timestamp","Date","GET_DRIVERS","_err$response","_err$response2","DRIVER_ERROR","msg","response","statusText","status","addDriver","isEdit","post","errors","patchDriverLoads","driver_id","drivers","driver","patch","find","o","PATCH_DRIVER","deleteDriver","cb","delete","splice","DELETE_DRIVER","deleteDriverLoads","DELETE_DRIVER_LOAD","changeObjectKey","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","FileContainer","borderRadius","overflow","flexDirection","FileViewer","onRemoveAll","Files","elevation","DescriptionIcon","PRIMARY_BLUE","align","textOverflow","Alert","severity","_Button","float","gridTemplateColumns","LoadDetailsUploadComponent","fileViewConfig","setFileViewConfig","edit","rateConfirmation","proofDelivery","accessorialsFiles","handleFileChange","rateConfirmationRef","proofDeliveryRef","accessorialsRef","rateConFile","podFile","formAccessorialsFiles","viewClickHandler","onFileViewClose","roc","idx","margin","marginLeft","href","startIcon","OpenInNewIcon","auth","getCheckStatusIcon","pod","acc","root","minWidth","marginBottom","borderWidth","borderStyle","borderColor","cardcontent","wrap","paddingLeft","paddingTop","h4","loadp","playIcon","textField","textFieldDialog","textFieldDialogPickup","textFieldDialogDrop","resize","resizeDialog","newLoad","paper","background","shadows","transform","overflowY","maxHeight","outline","rootLoadDetailModal","flexGrow","formControl","formInitialState","rate","assignedTo","trailorNumber","accessorials","invoice_created","MenuProps","ITEM_HEIGHT","DATE_PICKER_SLOT_PROPS","helperText","fullWidth","TIME_PICKET_SLOT_PROPS","TextPlaceHolder","onModalClose","canUpdate","brokerage","loadNumber","bktFiles","classes","setEdit","setForm","LoadStatuses","isProcessingAsyncRequest","setIsProcessingAsyncRequest","SelectElement","OutlinedInput","FilledInput","assignees","assignedToOptions","firstName","lastName","assigneeRole","assigneeId","getRoleNameString","setupDrivers","resetFileInputs","afterSubmit","isSuccess","handleSubmit","handleOnChange","handlePickDropChange","keyToUpdate","childKey","handleDateChange","handleInOutTime","parent_key","child_key","getRole","alpha","forEach","fileType","fileLocation","StaticDataShow","heading","sxObject","pt","_Modal","LocalizationProvider","dateAdapter","AdapterMoment","_Close","onSubmit","xs","pl","pr","sm","FormControl","InputLabel","_Select","notched","_MenuItem","_ref7","assignee","labelId","_ref8","split","_Divider","_Done","_CircularProgress","green","_Edit","handleCancel","createCopy","_FileCopyOutlined","mr","placeholder","shipperName","pickupAddress","pickupState","pickupZip","DateTimePicker","pickupDate","toISOString","slotProps","TimePicker","in_time","out_time","mt","pickupPo","pickupReference","pickupDeliverNumber","multiline","rows","notes","readOnly","alignItem","_ArrowForwardIos","blue","marginTop","receiverName","dropAddress","dropState","dropZip","dropDate","dropPo","dropReference","dropDeliverNumber","f"],"mappings":"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","file":"static/js/20.dddf02df.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { resetLoadsSearch } from \"../../actions/load.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoads, searchLoads, selectLoad } from \"../../actions/load\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport LoadDetailModal from \"./LoadDetailModal\";\r\nimport { getParsedLoadEquipment } from \"../../views/openBoard/constants\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n    TableContainer: {\r\n        borderBottom: \"none\",\r\n    },\r\n    loadSearchbar: {\r\n        textAlign: \"right\",\r\n        paddingBottom: 10,\r\n    },\r\n});\r\n\r\nexport default function LoadsStatus({ resetSearchField, listBarType }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(),\r\n        { loads = [], loads_pagination: { limit = 15, total, currPage } = {}, rowsPerPage = 15,\r\n            search: { query, loads: sLoads, page: sPage, limit: sLimit, total: sTotal } = {} } = useSelector(state => state.load),\r\n        [modal, setModal] = useState({ open: false, data: {} });\r\n    // const { query, loads: sLoads, page: sPage, limit, total: sTotal } = search;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(getLoads())\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        resetSearchField && resetSearchField();\r\n        dispatch(resetLoadsSearch(listBarType));\r\n        return () => {\r\n            resetSearchField && resetSearchField();\r\n            dispatch(resetLoadsSearch(listBarType));\r\n        };\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        if (query)\r\n            dispatch(searchLoads(newPage - 1, limit, query, listBarType));\r\n        else\r\n            dispatch(getLoads(newPage - 1, rowsPerPage, listBarType));\r\n    };\r\n\r\n    const tableConfig = {\r\n        onPageChange: handleChangePage,\r\n        rowCellPadding: 'inherit',\r\n        page: parseInt(currPage) - 1,\r\n        count: total,\r\n        limit,\r\n        hover: true,\r\n        onRowClick: (row) => {\r\n            if (listBarType === 'history') {\r\n                setModal({ open: true, data: row })\r\n            }\r\n        },\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number'\r\n            },\r\n\r\n            {\r\n                id: 'pickupCity',\r\n                label: 'Pickup City/State',\r\n                renderer: ({ row: { pickup = [] } = {} }) => {\r\n                    const [pickupData = {}] = pickup,\r\n                        { pickupCity = '' } = pickupData;\r\n                    return pickupCity;\r\n                }\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.pickUpByDate).isValid()) {\r\n                        date = moment(row.pickUpByDate).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: 'dropCity',\r\n                label: 'Drop City/State',\r\n                renderer: ({ row: { drop = [] } = {} }) => {\r\n                    const [dropData = {}] = drop,\r\n                        { dropCity = '' } = dropData;\r\n                    // console.log('row for pickup city', row)\r\n                    return dropCity\r\n                }\r\n            },\r\n\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({ row }) => {\r\n                    let date = \"\";\r\n                    if (moment(row.deliverBy).isValid()) {\r\n                        date = moment(row.deliverBy).format(\"M/DD/YYYY\");\r\n                    }\r\n                    return <Fragment>{date}</Fragment>;\r\n                },\r\n            },\r\n            {\r\n                id: \"equipment\",\r\n                label: \"Equipment\",\r\n                renderer: ({ row }) => {\r\n                    const { modesString = '', standard = '' } = getParsedLoadEquipment(row)\r\n                    return (\r\n                        <Fragment>\r\n                            {modesString} {standard}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: () => {\r\n                    return \"C.H Robinson\"\r\n                },\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--'\r\n            },\r\n\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <EnhancedTable config={tableConfig} data={loads} loading={loading} />\r\n                {modal.open && <LoadDetailModal\r\n                    listBarType={listBarType}\r\n                    modalEdit={true}\r\n                    open={true}\r\n                    load={modal.data}\r\n                    handleClose={() => {\r\n                        setModal({ open: false, data: {} });\r\n                        // enableEdit(false);\r\n                        selectLoad();\r\n                    }}\r\n                />}\r\n            </Fragment>\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {},\r\n            maxWidth = 'md'\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={maxWidth}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onLimitChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onLimitChange === 'function'){\r\n            onLimitChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    Checkbox,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, TableSortLabel, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role, handleRequestSort, hasSort}) {\r\n    const {headerCellSx = {}, hasDelete, sortField, sortOrder, showCheckbox} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true, sort = false} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>\r\n                    {(hasSort && sort)\r\n                        ? <TableSortLabel onClick={(e) => handleRequestSort(e, id)} active={id === sortField}\r\n                                     direction={sortOrder}\r\n                                     sx={{ ...headerCellSx}}>\r\n                        {label}\r\n                    </TableSortLabel>\r\n                        : label}\r\n                </Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n\r\n    if(showCheckbox){\r\n        headers.unshift(<Cell key='checkbox-header' padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}} />)\r\n    }\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          checkboxKey,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb,\r\n        showCheckbox = false\r\n    } = config;\r\n    const {role, onCheckboxChange, checkboxes} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={hasDeletePermission ? 'error' : 'disabled'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true, cellPadding} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id], row);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={cellPadding || rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    if(showCheckbox){\r\n        if(!checkboxKey){\r\n            throw new Error('Checkbox key not provided');\r\n        }\r\n        const checked = checkboxes.indexOf(row[checkboxKey]) > -1;\r\n        cell.unshift(<Cell onClick={onCheckboxChange.bind(this, row)} key={`checkbox-${rowIndex}`}>\r\n            <Checkbox checked={checked} />\r\n        </Cell>)\r\n    }\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false, ...rest}) => {\r\n    data = data || [];\r\n    const {onCheckboxChange, checkboxes, checkboxKey} = rest;\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns: _columns = [],\r\n            columnsBuilder,\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            onLimitChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n            sortField,\r\n            sortOrder = 'asc',\r\n            handleSortChange,\r\n            hasSort = false\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const columns = typeof columnsBuilder === 'function' ? columnsBuilder({data, columns: _columns}) : _columns;\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = sortField === property && sortOrder === 'asc';\r\n        // setOrder(isAsc ? 'desc' : 'asc');\r\n        // setOrderBy(property);\r\n        handleSortChange && handleSortChange({field: property, order: isAsc ? 'desc' : 'asc'})\r\n    };\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} handleRequestSort={handleRequestSort} hasSort={hasSort}/>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    checkboxes={checkboxes}\r\n                    checkboxKey={checkboxKey}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    onCheckboxChange={onCheckboxChange}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config, checkboxes])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className='tableContainer'\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onLimitChange={onLimitChange || onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import axios from \"axios\";\r\nimport { notification, setAlert } from \"./alert\";\r\nimport {\r\n  GET_LOADS,\r\n  GET_LOAD,\r\n  LOAD_ERROR,\r\n  ADD_LOAD,\r\n  PATCH_PICKUP,\r\n  PICKUP_ERROR,\r\n  PATCH_DROP,\r\n  DROP_ERROR,\r\n  DELETE_LOAD,\r\n  DELETE_LOAD_ERROR,\r\n  UPDATE_LOAD,\r\n  UPDATE_LOAD_ERROR,\r\n  LOAD_DOC_DELETE,\r\n  LOAD_DOC_UPLOAD,\r\n  RETURNED_SEARCHED_LOADS,\r\n  RESET_SEARCHED_LOADS,\r\n  INVOICE_CREATED,\r\n  SELECT_LOAD,\r\n  INVOICE_LOAD_FETCHED,\r\n  MERGE_LOAD_DOCS,\r\n  RESET_INVOICE_GENERATED, LOADS_FETCHING,\r\n} from \"./types\";\r\nimport {requestDelete, requestGet, requestPatch, requestPost} from \"../utils/request\";\r\n\r\n// import { proxy } from \"../../package.json\";\r\n\r\nexport const SERVER_ADDRESS = \"https://api.freightdok.io\";\r\n// Get current users loads\r\nexport const getLoads = (page = 0, limit = 100, module = \"\", search='') => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: LOADS_FETCHING,\r\n    payload: { isLoadsFetching: true },\r\n  });\r\n      try {\r\n        const { success, data } = await requestGet({\r\n          uri: `/api/load/me?page=${page + 1}&limit=${limit}&module=${module}&search=${search}`\r\n        });\r\n        dispatch({\r\n          type: LOADS_FETCHING,\r\n          payload: { isLoadsFetching: false },\r\n        });\r\n        if (success) {\r\n          dispatch({\r\n            type: GET_LOADS,\r\n            payload: { loads: data, page, limit, loading: false },\r\n          });\r\n        } else {\r\n          notification(data.message, 'error');\r\n        }\r\n      } catch (err) {\r\n        dispatch(setAlert(err.message, \"error\"));\r\n      }\r\n    };\r\nexport const deleteLoadDocument =\r\n  (load_id, doc_type, doc_name) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/remove/doc/${load_id}/${doc_type}/${doc_name}`;\r\n      await axios.delete(url);\r\n      dispatch({\r\n        type: LOAD_DOC_DELETE,\r\n        payload: { load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const uploadLoadDocument =\r\n  (load_id, doc_type, documents) => async (dispatch) => {\r\n    try {\r\n      const url = `/api/load/upload/load/${load_id}/${doc_type}`;\r\n      const form = new FormData();\r\n      for (let doc of documents) form.append(doc_type, doc);\r\n      const response = await axios.patch(url, form);\r\n      const { file_data } = response.data;\r\n      dispatch({\r\n        type: LOAD_DOC_UPLOAD,\r\n        payload: { file_data, load_id, doc_type },\r\n      });\r\n    } catch (err) {\r\n      dispatch(setAlert(err.message, \"error\"));\r\n    }\r\n  };\r\n\r\nexport const generateInvoice = (load_id, data) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/invoice\", {\r\n      load_id,\r\n      ...data,\r\n    });\r\n    dispatch({\r\n      type: INVOICE_CREATED,\r\n      payload: { load_id },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const searchLoads = (page = 0, limit = 15, search = \"\", module = \"\") => async (dispatch) => {\r\n  try {\r\n    const url = `/api/load/me?page=${page + 1\r\n      }&limit=15&search=${search}&module=${module}`;\r\n    const res = await axios.get(url);\r\n    dispatch({\r\n      type: RETURNED_SEARCHED_LOADS,\r\n      payload: { data: res.data, page, limit, search },\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetLoadsSearch =\r\n  (listBarType = \"\") =>\r\n    async (dispatch, getState) => {\r\n      dispatch({ type: RESET_SEARCHED_LOADS });\r\n      const {\r\n        load: { page, rowsPerPage },\r\n      } = getState();\r\n      // dispatch(getLoads(+page, +rowsPerPage, listBarType));\r\n    };\r\n\r\nexport const selectLoad = (input = null) => ({\r\n  type: SELECT_LOAD,\r\n  payload: input,\r\n});\r\n\r\n// Get post\r\nexport const getLoad = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/loads/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LOAD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addLoad = (formData, callback) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const {data, success} = await requestPost({uri: '/api/load', body: formData})\r\n    if(success){\r\n      dispatch({\r\n        type: ADD_LOAD,\r\n        payload: data,\r\n      });\r\n\r\n      notification(\"Load Created\")\r\n      if (callback) {\r\n        callback(success, data)\r\n      }\r\n    } else {\r\n      notification(data.message, 'error')\r\n    }\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n    console.log(err)\r\n  }\r\n};\r\n\r\nexport const updateLoad = (formData, module = \"\", bucketFiles = {}, callback) => async (dispatch, getState) => {\r\n  try {\r\n    const form = new FormData();\r\n    for (let key of Object.keys(formData)) {\r\n      if ([\"rateConfirmation\", \"proofDelivery\"].indexOf(key) < 0) {\r\n        const data = formData[key];\r\n        const isArray = Array.isArray(data);\r\n        const isNull = data === null;\r\n        let dataToSend = isArray && !isNull ? JSON.stringify(data) : data;\r\n        form.append(key, dataToSend);\r\n      }\r\n    }\r\n    form.append('bucketFiles', JSON.stringify(bucketFiles))\r\n    for (let key of [\"rateConfirmation\", \"proofDelivery\", \"accessorialsFiles\"]) {\r\n      const files = formData[key];\r\n      if (files) for (let file of files) form.append(key, file);\r\n    }\r\n\r\n    const { success, data } = await requestPatch({ uri: \"/api/load/modify\", body: form })\r\n    if (success) {\r\n      notification('Load Updated')\r\n      const {\r\n        load: {\r\n          rowsPerPage, page\r\n        },\r\n      } = getState();\r\n      dispatch(getLoads(page, rowsPerPage, module));\r\n    }\r\n    callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, \"error\");\r\n  }\r\n};\r\n\r\nexport const downloadDocuments = (file_name) => {\r\n  axios({\r\n    url: \"/api/load/download/\" + file_name,\r\n    method: \"GET\",\r\n    responseType: \"blob\",\r\n  }).then((res) => {\r\n    const parts = res.config.url.split(\"/\");\r\n    const name = parts[parts.length - 1];\r\n    const url = window.URL.createObjectURL(new Blob([res.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", name);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n//add pickup\r\n\r\n//patch pickup\r\nexport const patchPickup = (load_id, pickup) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(\r\n      `/api/load/pickup?load_id=${load_id}`,\r\n      pickup\r\n    );\r\n    dispatch({\r\n      type: PATCH_PICKUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n//patch drop\r\nexport const patchDrop = (load_id, drop) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/load/drop?load_id=${load_id}`, drop);\r\n    dispatch({\r\n      type: PATCH_DROP,\r\n      payload: res.date,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\n// Delete a load\r\nexport const deleteLoad = (load_id, callback) => async (dispatch) => {\r\n  try {\r\n    const { success, data } = await requestDelete({ uri: '/api/load', body: { data: { load_id: load_id } } })\r\n    notification(data.message, success ? 'success' : 'error');\r\n    if (success) {\r\n      dispatch({\r\n        type: DELETE_LOAD,\r\n        payload: load_id,\r\n      });\r\n    }\r\n    callback && callback(success, data)\r\n  } catch (err) {\r\n    notification(err.message, 'error')\r\n  }\r\n};\r\n\r\nexport const mergeDocuments = (data, headers) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/load/invoice/merge_docs`, data, headers);\r\n    console.log(\"Response :\", res);\r\n    dispatch({\r\n      type: MERGE_LOAD_DOCS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n\r\nexport const resetInvoiceGenerated = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: RESET_INVOICE_GENERATED,\r\n      payload: null,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setAlert(err.message, \"error\"));\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {notification, setAlert} from \"./alert\";\r\nimport { GET_DRIVERS, GET_DRIVER, ADD_DRIVER, PATCH_DRIVER, DELETE_DRIVER, DRIVER_ERROR, DELETE_DRIVER_LOAD } from \"./types.js\";\r\n\r\n//get current users drivers\r\nexport const getDrivers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/drivers/me\");\r\n    Object.assign(res.data, {timestamp: new Date()})\r\n    dispatch({\r\n      type: GET_DRIVERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err?.response?.statusText, status: err?.response?.status },\r\n    });\r\n  }\r\n};\r\n\r\n//add load\r\nexport const addDriver = (formData, isEdit) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/drivers\", formData, config);\r\n\r\n    notification(res.data.message);\r\n    dispatch(getDrivers());\r\n\r\n  } catch (err) {\r\n    let error = err.errors && Array.isArray(err.errors) && err.errors.length ? err.errors[0].msg : err.message;\r\n    dispatch(setAlert( error, \"error\"));\r\n    // dispatch({\r\n    //   type: DRIVER_ERROR,\r\n    //   payload: { msg: err.response.statusText, status: err.response.status },\r\n    // });\r\n  }\r\n};\r\n\r\n//patch driver\r\nexport const patchDriverLoads = (driver_id, loads) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.patch(`/api/drivers/loads?driver_id=${driver_id}`, { loads: loads });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: PATCH_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver\r\nexport const deleteDriver = (driver_id, cb) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/`, { data: { driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers.splice(index, 1);\r\n    }\r\n    notification('Deleted Successfully')\r\n    cb && cb(res);\r\n    dispatch({\r\n      type: DELETE_DRIVER,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//delete driver load\r\nexport const deleteDriverLoads = (driver_id, load_id) => async (dispatch, getState) => {\r\n  try {\r\n    let drivers = getState().driver.drivers;\r\n    const res = await axios.delete(`/api/drivers/loads`, { data: { load_id: load_id, driver_id: driver_id } });\r\n    let index = drivers.indexOf(drivers.find((o) => o._id === res.data._id));\r\n    if (index !== -1) {\r\n      drivers[index] = res.data;\r\n    }\r\n    dispatch({\r\n      type: DELETE_DRIVER_LOAD,\r\n      payload: drivers,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DRIVER_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const changeObjectKey = (obj, old_key, new_key) => {\r\n    if (old_key !== new_key) {\r\n        Object.defineProperty(obj, new_key,\r\n            Object.getOwnPropertyDescriptor(obj, old_key));\r\n        delete obj[old_key];\r\n    }\r\n    return obj;\r\n}","import {Button, Grid, Paper, Stack, Typography} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {getCheckStatusIcon} from \"../../../utils/utils\";\r\nimport Modal from \"../../Atoms/Modal\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {PRIMARY_BLUE} from \"../../layout/ui/Theme\";\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport {Alert} from \"../../Atoms\";\r\n\r\nconst FileContainer = styled(Paper)(({}) => ({\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 5,\r\n    overflow: 'hidden',\r\n    padding: 8,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n}))\r\n\r\nconst FileViewer = ({files = [], onClose, onRemoveAll}) => {\r\n    // console.log(files)\r\n    const config={\r\n        title: 'Edit File'\r\n    }\r\n    const Files = (files || []).map(file => {\r\n        return <FileContainer elevation={3}>\r\n            <DescriptionIcon sx={{color: PRIMARY_BLUE}} />\r\n            <Typography variant='subtitle2' align='center' sx={{width: 'inherit', overflow: 'hidden', textOverflow: 'ellipsis'}}>{file.name}</Typography>\r\n        </FileContainer>\r\n    })\r\n\r\n    return <Modal config={config} closeCallback={onClose}>\r\n        <Grid container spacing={2} sx={{display: 'grid'}}>\r\n            <Grid item>\r\n                <Alert config={{open: true, message: 'Previous files, if exist will be overwritten with new files.', severity: 'info'}} />\r\n            </Grid>\r\n            {files && <Grid item>\r\n                <Button variant='outlined' sx={{float: 'right'}} onClick={onRemoveAll} color='error'>Remove All</Button>\r\n            </Grid>}\r\n            <Grid item>\r\n                <Grid container gap={2} sx={{display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)'}}>\r\n                    {Files}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Modal>\r\n}\r\n\r\nconst LoadDetailsUploadComponent = (props) => {\r\n    const [fileViewConfig, setFileViewConfig] = useState({open: false, config: {}})\r\n    const {\r\n        edit, rateConfirmation = [], proofDelivery = [], accessorialsFiles = [], handleFileChange, rateConfirmationRef,\r\n        proofDeliveryRef, accessorialsRef, state, rateConFile, podFile, formAccessorialsFiles\r\n    } = props;\r\n    // console.log(rateConFile)\r\n    // console.log(accessorialsFiles)\r\n\r\n    function viewClickHandler(file, name, e) {\r\n        e.stopPropagation()\r\n        setFileViewConfig({open: true, config: [...file], name})\r\n    }\r\n\r\n    function onFileViewClose() {\r\n        setFileViewConfig({open: false, config: null});\r\n    }\r\n\r\n    function onRemoveAll() {\r\n        handleFileChange({target: { name: fileViewConfig.name, files: null }})\r\n        onFileViewClose();\r\n    }\r\n\r\n    return (<Stack sx={{alignItems: 'end'}}>\r\n        {fileViewConfig.open && <FileViewer files={fileViewConfig.config} onClose={onFileViewClose} onRemoveAll={onRemoveAll} />}\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {rateConfirmation.length ? (rateConfirmation.map((roc, idx) => {\r\n                return (<><span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                          <a href={roc} target=\"_blank\">\r\n                            Rate Con-{idx + 1}\r\n                          </a>\r\n                        </span></>)\r\n            })) : (<span>Rate Con</span>)}\r\n            <span>\r\n                      {edit ? <Fragment>\r\n                              {rateConFile\r\n                                  ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, rateConFile, 'rateConfirmation')} startIcon={<OpenInNewIcon />}>\r\n                                        View\r\n                                    </Button>\r\n                                  : <label htmlFor=\"contained-button-file1\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"rateConfirmation\"\r\n                                      disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                      onChange={handleFileChange}\r\n                                      ref={rateConfirmationRef}\r\n                                      id=\"contained-button-file1\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      {'Attach'}\r\n                                  </Button>\r\n                              </label>}\r\n                      </Fragment>\r\n                          : getCheckStatusIcon(!!rateConfirmation.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2} sx={{mb: 1}}>\r\n            {proofDelivery.length ? (proofDelivery.map((pod, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={pod} target=\"_blank\">\r\n                              POD-{idx + 1}\r\n                            </a>\r\n                          </span>\r\n                </>)\r\n            })) : (<span>POD</span>)}\r\n            <span>\r\n                      {edit ? podFile ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, podFile, 'proofDelivery')} startIcon={<OpenInNewIcon />}>\r\n                                  View\r\n                              </Button>\r\n                              : <label htmlFor=\"contained-button-file2\">\r\n                                  <input\r\n                                      style={{display: 'none'}}\r\n                                      type=\"file\"\r\n                                      multiple\r\n                                      name=\"proofDelivery\"\r\n                                      disabled={!edit}\r\n                                      onChange={handleFileChange}\r\n                                      ref={proofDeliveryRef}\r\n                                      id=\"contained-button-file2\"\r\n                                  />\r\n                                  <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                      Attach\r\n                                  </Button>\r\n                              </label>\r\n                          : getCheckStatusIcon(!!proofDelivery.length)}\r\n                    </span>\r\n        </Stack>\r\n        <Stack direction={'row'} spacing={2}>\r\n            {accessorialsFiles.length ? (accessorialsFiles.map((acc, idx) => {\r\n                return (<>\r\n                          <span style={{margin: 0, padding: 0, marginLeft: '2px'}}>\r\n                            <a href={acc} target=\"_blank\">\r\n                              Accessorials-{idx + 1}\r\n                            </a>\r\n                          </span></>)\r\n            })) : (<span>Accessorials</span>)}\r\n            <span>\r\n                      {edit ? formAccessorialsFiles\r\n                          ? <Button variant=\"outlined\" component=\"span\" size='small' onClick={viewClickHandler.bind(this, formAccessorialsFiles, 'accessorialsFiles')} startIcon={<OpenInNewIcon />}>\r\n                              View\r\n                          </Button>\r\n                          : <Fragment>\r\n                          <label htmlFor=\"contained-button-file3\">\r\n                              <input\r\n                                  style={{display: 'none'}}\r\n                                  type=\"file\"\r\n                                  multiple\r\n                                  name=\"accessorialsFiles\"\r\n                                  disabled={!edit || state.auth.user.role === \"driver\"}\r\n                                  onChange={handleFileChange}\r\n                                  ref={accessorialsRef}\r\n                                  id=\"contained-button-file3\"\r\n                              />\r\n                              <Button variant=\"outlined\" component=\"span\" size='small'>\r\n                                  Attach\r\n                              </Button>\r\n                          </label>\r\n                      </Fragment> : getCheckStatusIcon(!!accessorialsFiles?.length)}\r\n                    </span>\r\n        </Stack>\r\n    </Stack>)\r\n}\r\n\r\nexport default LoadDetailsUploadComponent;","import { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    minWidth: 200,\r\n    maxWidth: 350,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"grey\",\r\n    // boxShadow: \"1px 3px 1px #9E9E9E\",\r\n  },\r\n  cardcontent: {\r\n    flexDirection: \"row\",\r\n    wrap: \"wrap\",\r\n    minWidth: 100,\r\n    maxWidth: 150,\r\n    paddingLeft: 20,\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    \"&:last-child\": {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n  pickup: {\r\n    fontSize: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  h4: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  loadp: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n    paddingLeft: 150,\r\n    alignItems: \"center\",\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 30,\r\n    marginLeft: 0,\r\n  },\r\n  textField: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialog: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n  },\r\n  textFieldDialogPickup: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"75px\",\r\n  },\r\n  textFieldDialogDrop: {\r\n    \"& input\": {\r\n      color: \"#000000\",\r\n    },\r\n    \"& input:disabled\": {\r\n      color: \"#000000\",\r\n    },\r\n    marginLeft: \"25px\",\r\n  },\r\n  resize: {\r\n    fontSize: 13,\r\n  },\r\n  resizeDialog: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  newLoad: {\r\n    margin: 0,\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(1, 2, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflowY: \"auto\",\r\n    maxHeight: '90%',\r\n    outline: 'none'\r\n  },\r\n  rootLoadDetailModal: {\r\n    flexGrow: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport _ from 'lodash'\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Box,\r\n  MenuItem,\r\n  IconButton,\r\n  Select,\r\n  Modal,\r\n  CircularProgress\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos as ArrowForwardIosIcon, Close as CloseIcon, Edit as EditIcon, Done as DoneIcon } from '@mui/icons-material'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {TimePicker} from '@mui/x-date-pickers/TimePicker';\r\nimport {DateTimePicker} from '@mui/x-date-pickers/DateTimePicker'\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport FilledInput from '@mui/material/FilledInput';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport { green } from \"@mui/material/colors\";\r\nimport { FileCopyOutlined } from \"@mui/icons-material\";\r\nimport {AdapterMoment} from '@mui/x-date-pickers/AdapterMoment';\r\nimport { getDrivers } from \"../../actions/driver\";\r\nimport { changeObjectKey } from \"../../utils/helper\";\r\nimport { addLoad, updateLoad } from \"../../actions/load\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { blue } from \"../layout/ui/Theme\";\r\nimport LoadDetailsUploadComponent from \"./components/LoadDetailsUploadComponent\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport { useStyles } from \"./styles\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst formInitialState = {\r\n  status: \"\",\r\n  rate: \"\",\r\n  assignedTo: null,\r\n  trailorNumber: \"\",\r\n  rateConfirmation: null,\r\n  proofDelivery: null,\r\n  accessorials: [],\r\n  pickup: [],\r\n  drop: [],\r\n  invoice_created: false,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst DATE_PICKER_SLOT_PROPS = {\r\n  textField: {\r\n    helperText: 'DD/MM/YYYY hh:mm AM/PM',\r\n    size: 'small',\r\n    fullWidth: true\r\n  },\r\n},\r\n    TIME_PICKET_SLOT_PROPS = {\r\n      textField: {\r\n        size: 'small',\r\n        fullWidth: true\r\n      }\r\n    }\r\n\r\nconst TextPlaceHolder = ({ value }) => (value ? value : \"--\");\r\n\r\nconst LoadDetailModal = ({\r\n  modalEdit,\r\n  open,\r\n  handleClose: onModalClose,\r\n  listBarType,\r\n  load, canUpdate\r\n}) => {\r\n  let {\r\n    _id,\r\n    brokerage,\r\n    loadNumber,\r\n    rate,\r\n    trailorNumber,\r\n    pickup,\r\n    drop,\r\n    assignedTo = null,\r\n    user,\r\n    status = \"\",\r\n    accessorials = [],\r\n    invoice_created,\r\n    bucketFiles = [],\r\n  } = load || {};\r\n  const bktFiles = _.cloneDeep(bucketFiles)\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [edit, setEdit] = React.useState(true);\r\n  const [form, setForm] = React.useState({ ...formInitialState });\r\n  const {data: {data: LoadStatuses = []} = {}} = useFetch('/api/loadStatuses')\r\n  const [isProcessingAsyncRequest, setIsProcessingAsyncRequest] = useState(false);\r\n  const rateConfirmationRef = useRef();\r\n  const proofDeliveryRef = useRef();\r\n  const accessorialsRef = useRef(),\r\n      history = useHistory(),\r\n    SelectElement = edit ? OutlinedInput : FilledInput;\r\n  const {assignees = [] } = state.driver || {};\r\n  const assignedToOptions = assignees.map((item) => {\r\n    const { _id, firstName, lastName, role, user = {} } = item || {},\r\n        {name = '', role: assigneeRole, _id: assigneeId} = user || {};\r\n    return {\r\n      name, _id: assigneeId || _id, firstName, lastName, role: getRoleNameString(assigneeRole || role)\r\n    }\r\n  }) || [];\r\n\r\n  useEffect(() => {\r\n    setupDrivers();\r\n    setForm({\r\n      status,\r\n      assignedTo: user?._id,\r\n      accessorials,\r\n      trailorNumber,\r\n      pickup,\r\n      drop,\r\n      rate,\r\n      loadNumber,\r\n      invoice_created,\r\n    });\r\n    resetFileInputs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const error = state.load.error;\r\n    if (!error.msg) {\r\n      setEdit(false);\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.error]);\r\n  useEffect(() => {\r\n    if (modalEdit) setEdit(true);\r\n  }, [modalEdit]);\r\n  useEffect(() => {\r\n    if (!state.load.load) {\r\n      // if(handleClose) handleClose();\r\n    }\r\n  }, [state.load.load]);\r\n  const setupDrivers = () => {\r\n    dispatch(getDrivers());\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onModalClose({history});\r\n  }\r\n\r\n  const afterSubmit = (isSuccess) => {\r\n    setIsProcessingAsyncRequest(false);\r\n    if (isSuccess) handleClose();\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (form.status !== \"Empty\") {\r\n      form.invoice_created = false;\r\n    }\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(updateLoad({ ...form, _id }, listBarType, bktFiles, afterSubmit));\r\n    // resetFileInputs();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handlePickDropChange = ({ target: { value } }, keyToUpdate, childKey) => {\r\n    if (keyToUpdate === \"pickup\") {\r\n      setForm({ ...form, pickup: [{ ...form.pickup[0], [childKey]: value }] });\r\n    }\r\n    else if (keyToUpdate === \"drop\") {\r\n      setForm({ ...form, drop: [{ ...form.drop[0], [childKey]: value }] });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setForm({ ...form, assignedTo: user, status, accessorials, pickup, drop });\r\n    setEdit(false);\r\n    resetFileInputs();\r\n  };\r\n  const handleDateChange = (date, key) => {\r\n    setForm({ ...form, [key]: [{ ...form[key][0], [`${key}Date`]: date }] });\r\n  };\r\n  const handleFileChange = ({ target: { name, files } }) => {\r\n    setForm((f) => ({ ...f, [name]: files || null }));\r\n  };\r\n  const resetFileInputs = () => {\r\n    if (rateConfirmationRef.current) rateConfirmationRef.current.value = \"\";\r\n    if (proofDeliveryRef.current) proofDeliveryRef.current.value = \"\";\r\n  };\r\n  const handleInOutTime = (date, parent_key, child_key) => {\r\n    // parent_key: drop || pickup\r\n    // child_key: in_time || out_time\r\n    setForm((form) => ({\r\n      ...form,\r\n      [parent_key]: [{ ...form[parent_key][0], [child_key]: date }],\r\n    }));\r\n  };\r\n  const getRole = () => {\r\n    try {\r\n      const {\r\n        auth: {\r\n          user: { role },\r\n        },\r\n      } = state;\r\n      return role;\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const createCopy = () => {\r\n    let body = { ...load };\r\n    body = changeObjectKey(body, \"pickup\", \"pickUp\");\r\n    body = changeObjectKey(body, \"drop\", \"dropOff\");\r\n    setIsProcessingAsyncRequest(true);\r\n    dispatch(addLoad(body, afterSubmit));\r\n  };\r\n\r\n  if (bucketFiles.length) {\r\n    const alpha = [...bucketFiles];\r\n    bucketFiles = {\r\n      'proofDelivery': [],\r\n      'rateConfirmation': [],\r\n      'accessorialsFiles': []\r\n    };\r\n    alpha.forEach((item = {}, idx) => {\r\n      const { fileType = \"\", fileLocation = \"\" } = item;\r\n      bucketFiles[fileType].push(fileLocation)\r\n\r\n    });\r\n  } else bucketFiles = {};\r\n\r\n  const { rateConfirmation = [], proofDelivery = [], accessorialsFiles = [] } = bucketFiles || {};\r\n\r\n  const StaticDataShow = ({ heading, values = [], spacing = 2, sxObject = {} }) => {\r\n    return <Stack spacing={spacing} sx={{ ...sxObject }} className='staticInfo'>\r\n      <Stack><Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center', pt: 3 }}>{heading}</Typography></Stack>\r\n      {values.map(value => <Stack>\r\n        <TextPlaceHolder value={value} />\r\n      </Stack>)}\r\n    </Stack>\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"server-modal-title\"\r\n\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterMoment}>\r\n          <div style={{ width: '90%' }} className={classes.paper}>\r\n          <Stack direction={'row'} justifyContent={'space-between'} sx={{ mb: 2 }}>\r\n            {/*<DeleteIcon*/}\r\n            {/*    onClick={(e) => deleteLoad(_id, e)}*/}\r\n            {/*    style={{ color: \"rgb(220, 0, 78)\", cursor: \"pointer\" }}*/}\r\n            {/*/>*/}\r\n            <IconButton>\r\n              <CloseIcon\r\n                id=\"server-modal-title\"\r\n                onClick={handleClose}\r\n              />\r\n            </IconButton>\r\n          </Stack>\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} className={classes.rootLoadDetailModal}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.rootLoadDetailModal} spacing={2} sx={{ pl: 3, pr: 3 }}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Status</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"status\"\r\n                        value={form.status}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, status: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                      >\r\n                        {(LoadStatuses || []).map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <FormControl sx={{ m: 1 }} size=\"small\" fullWidth>\r\n                      <InputLabel id=\"multiple-name\">Assigned</InputLabel>\r\n                      <Select\r\n                        id=\"multiple-name\"\r\n                        name=\"assignedTo\"\r\n                        disabled={!edit || state.auth.user.role === \"driver\"}\r\n                        value={form.assignedTo}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, assignedTo: value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} sx={{}} />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {assignedToOptions.map((assignee) => (\r\n                          <MenuItem\r\n                            key={assignee._id}\r\n                            value={assignee._id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {`${assignee.firstName} ${assignee.lastName} (${assignee.role || '--'})`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    <InputLabel id=\"demo-multiple-name-label\">Accessorials</InputLabel>\r\n                    <FormControl sx={{ m: 0 }} fullWidth>\r\n                      <Select\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={form.accessorials}\r\n                        onChange={({ target: { value } }) => setForm({ ...form, accessorials: typeof value === 'string' ? value.split(',') : value, })}\r\n                        input={<SelectElement size='small' label=\"\" notched={false} />}\r\n                        MenuProps={MenuProps}\r\n                        disabled={!edit}\r\n                      >\r\n                        {[\r\n                          { id: 'Tonu', label: 'Tonu' },\r\n                          { id: 'Detention', label: 'Detention' },\r\n                          { id: 'Lumper-by-Broker', label: 'Lumper by Broker' },\r\n                          { id: 'Lumper-by-Carrier', label: 'Lumper by Carrier' },\r\n                          { id: 'Layover', label: 'Layover' },\r\n                          { id: 'scale-ticket', label: 'Scale Ticket' },\r\n                        ].map((name) => (\r\n                          <MenuItem\r\n                            key={name.id}\r\n                            value={name.id}\r\n                          // style={getStyles(name, personName, theme)}\r\n                          >\r\n                            {name.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sx={{ m: 2 }}>\r\n                <Divider />\r\n              </Grid>\r\n            </Grid>\r\n            {/********NEW Grid Start***************************************************/}\r\n\r\n            <Grid container>\r\n              <Grid item xs={2} sx={{ display: 'flex' }}>\r\n                <Box sx={{ alignItems: 'end', display: 'flex' }}>\r\n                  {edit ? <Box sx={{ position: 'relative' }}>\r\n                    <IconButton onClick={handleSubmit} disabled={isProcessingAsyncRequest}>\r\n                      <DoneIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>\r\n                    {isProcessingAsyncRequest && <CircularProgress\r\n                      size={65}\r\n                      sx={{\r\n                        color: green[500],\r\n                        position: 'absolute',\r\n                        top: -6,\r\n                        left: -6,\r\n                        zIndex: 1,\r\n                      }}\r\n                    />}\r\n                  </Box>\r\n                    : <IconButton onClick={() => setEdit(true)} title='Edit' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                      <EditIcon\r\n                        fontSize=\"large\"\r\n                        color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                      />\r\n                    </IconButton>}\r\n                  {edit ? <IconButton onClick={handleCancel} disabled={isProcessingAsyncRequest}>\r\n                    <CloseIcon\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton> : <IconButton onClick={createCopy} title='Create Copy' disabled={isProcessingAsyncRequest || !canUpdate}>\r\n                    <FileCopyOutlined\r\n                      fontSize=\"large\"\r\n                      color={isProcessingAsyncRequest ? \"disabled\" : 'primary'}\r\n                    />\r\n                  </IconButton>}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Grid container>\r\n                  <Grid xs={12} item display={\"flex\"} justifyContent={'center'}>\r\n                    <Stack>\r\n                      <Stack direction={'row'}>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                              id=\"outlined-basic\"\r\n                              name=\"loadNumber\"\r\n                              value={form.loadNumber}\r\n                              onChange={handleOnChange}\r\n                              label={'Load'}\r\n                              direction={'row'}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Load</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{loadNumber || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                      <Stack direction='row'>\r\n                        {edit ? getRole() &&\r\n                          (getRole() === \"admin\" || getRole() === \"dispatch\") && (\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              label=\"Rate\"\r\n                              name=\"rate\"\r\n                              value={form.rate}\r\n                              onChange={handleOnChange}\r\n                              direction={'row'}\r\n                              labelStyle={{ fontWeight: 800, fontSize: 18, color: '#03031A' }}\r\n                            />\r\n                          ) : <Fragment>\r\n                          <Typography sx={{ mr: 1, fontWeight: 600, fontSize: 18 }}>Rate</Typography>\r\n                          <Typography item sx={{ fontSize: 18 }}>{rate || '--'}</Typography>\r\n                        </Fragment>}\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container>\r\n                      {/*CENTER PART*/}\r\n                      <Grid item xs={5}>\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          <Stack>\r\n                            {edit && state.auth.user.role !== \"driver\" ? (\r\n                              <Stack>\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  placeholder=\"Shipper Name\"\r\n                                  value={form.pickup[0] ? form.pickup[0].shipperName : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"shipperName\")\r\n                                  }\r\n                                />\r\n                                <InputField\r\n                                  id=\"outlined-basic\"\r\n                                  variant=\"outlined\"\r\n                                  placeholder=\"Address\"\r\n                                  value={form.pickup[0] ? form.pickup[0].pickupAddress : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"pickupAddress\")\r\n                                  }\r\n                                />\r\n                                {edit && state.auth.user.role !== \"driver\" && <Fragment>\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"City\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupCity : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupCity\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    placeholder=\"State\"\r\n                                    value={\r\n                                      form.pickup[0] ? form.pickup[0].pickupState : \"\"\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupState\")\r\n                                    }\r\n                                  />\r\n                                  <InputField\r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Zip\"\r\n                                    value={form.pickup[0] ? form.pickup[0].pickupZip : \"\"}\r\n                                    onChange={(event) =>\r\n                                      handlePickDropChange(event, \"pickup\", \"pickupZip\")\r\n                                    }\r\n                                  />\r\n                                </Fragment>}\r\n                              </Stack>\r\n                            ) : <StaticDataShow\r\n                              heading={'Pickup'}\r\n                              values={[\r\n                                pickup && pickup[0] ? pickup[0].shipperName : \"\",\r\n                                form.pickup[0] ? form.pickup[0].pickupAddress : \"\",\r\n                                `${pickup && pickup[0] ? pickup[0].pickupCity : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupState : \"\"}, ${pickup && pickup[0] ? pickup[0].pickupZip : \"\"}`,\r\n                              ]}\r\n                            />}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            {edit ? <Grid container spacing={2}>\r\n                              <Grid item xs={12}>\r\n                                <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Pickup Time</Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                  <DateTimePicker\r\n                                      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\") || new Date()}\r\n                                      onChange={(date) => handleDateChange(date.toISOString(), \"pickup\")}\r\n                                      slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                      label='Pickup Date'\r\n                                  />\r\n                                </LocalizationProvider>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <DatePicker*/}\r\n                                {/*    value={*/}\r\n                                {/*      form.pickup[0] ? form.pickup[0].pickupDate : \"\"*/}\r\n                                {/*    }*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleDateChange(date, \"pickup\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                              </Grid>\r\n                              {/*<Grid item xs={6}>*/}\r\n                              {/*    <TimePicker*/}\r\n                              {/*      value={moment(form.pickup[0] ? form.pickup[0].pickupDate : \"\")}*/}\r\n                              {/*      onChange={(date) =>*/}\r\n                              {/*        handleDateChange(date, \"pickup\")*/}\r\n                              {/*      }*/}\r\n                              {/*      label='Pickup Time'*/}\r\n                              {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                              {/*    />*/}\r\n                              {/*</Grid>*/}\r\n                              <Grid item xs={6}>\r\n                                {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                                {/*  <TimePicker*/}\r\n                                {/*    label='In Time'*/}\r\n                                {/*    value={form.pickup[0] ? form.pickup[0].in_time : \"\"}*/}\r\n                                {/*    onChange={(date) =>*/}\r\n                                {/*      handleInOutTime(date, \"pickup\", \"in_time\")*/}\r\n                                {/*    }*/}\r\n                                {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                                {/*  />*/}\r\n                                {/*</LocalizationProvider>*/}\r\n                                <TimePicker\r\n                                    label='In Time'\r\n                                    value={moment( form.pickup[0] ? form.pickup[0].in_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                        handleInOutTime(date, \"pickup\", \"in_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                  <TimePicker\r\n                                    label='Out Time'\r\n                                    value={moment(form.pickup[0] ? form.pickup[0].out_time : \"\")}\r\n                                    onChange={(date) =>\r\n                                      handleInOutTime(date, \"pickup\", \"out_time\")\r\n                                    }\r\n                                    slotProps={TIME_PICKET_SLOT_PROPS}\r\n                                  />\r\n                              </Grid>\r\n                            </Grid>\r\n                              : <Fragment>\r\n                                <StaticDataShow\r\n                                  spacing={2}\r\n                                  sxObject={{ mt: 2 }}\r\n                                  heading={'Pickup Time'}\r\n                                  values={[\r\n                                    pickup && pickup[0] ? (\r\n                                      moment(pickup[0].pickupDate).format(\"LLL\")\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )\r\n                                  ]}\r\n                                />\r\n                                <Stack direction='row' justifyContent='space-evenly' spacing={2}>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].in_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                        <Box>{moment(pickup[0].in_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                  <Stack>\r\n                                    {pickup && pickup[0] && pickup[0].out_time ? (\r\n                                      <Stack sx={{ textAlign: 'left' }}>\r\n                                        <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time:</Typography>\r\n                                        <Box>{moment(pickup[0].out_time).format(\"h:mm A\")}</Box>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      \"--\"\r\n                                    )}\r\n                                  </Stack>\r\n                                </Stack>\r\n                              </Fragment>}\r\n                          </Stack>\r\n                          <Stack spacing={2}>\r\n                            <Grid item xs={12} style={{ textAlign: \"left\", width: '100%' }}>\r\n                              <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>PO#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={form && form.pickup[0] ? form.pickup[0].pickupPo : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupPo')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupPo : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems={'center'} spacing={1}>\r\n                                  <Typography fontWeight={700}>Reference#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupReference : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupReference')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupReference : \"\"}</Typography>}\r\n                                </Stack>\r\n                                <Stack direction='row' alignItems='center' spacing={1}>\r\n                                  <Typography fontWeight={700}>Delivery#</Typography>\r\n                                  {edit ?\r\n                                    <InputField\r\n                                      value={pickup && form.pickup[0] ? form.pickup[0].pickupDeliverNumber : \"\"}\r\n                                      onChange={(e) => handlePickDropChange(e, 'pickup', 'pickupDeliverNumber')}\r\n                                    />\r\n                                    : <Typography>{pickup && pickup[0] ? pickup[0].pickupDeliverNumber : \"\"}</Typography>}\r\n                                </Stack>\r\n                              </Stack>\r\n\r\n                              {/* <p>PO Ref# {pickup && pickup[0] ? pickup[0].pickupReference : ''}</p> */}\r\n\r\n                              {state.auth.user.role !== \"driver\" &&\r\n                                <InputField\r\n                                  id=\"outlined-multiline-static\"\r\n                                  placeholder=\"Pickup Notes\"\r\n                                  multiline\r\n                                  rows={2}\r\n                                  type='textarea'\r\n                                  value={form.pickup[0] ? form.pickup[0].notes : \"\"}\r\n                                  onChange={(event) =>\r\n                                    handlePickDropChange(event, \"pickup\", \"notes\")\r\n                                  }\r\n                                  variant=\"outlined\"\r\n                                  readOnly={!edit}\r\n                                />\r\n                              }\r\n                            </Grid>\r\n                          </Stack>\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={2} sx={{ display: 'flex', alignItem: 'center', mt: 5 }}>\r\n                        {/*Arrow*/}\r\n                        <ArrowForwardIosIcon\r\n                          style={{\r\n                            color: blue,\r\n                            marginTop: \"13%\",\r\n                            margin: '0 auto',\r\n                            height: 40,\r\n                            width: 40,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        {/*DROP*/}\r\n                        <Stack sx={{ textAlign: 'center' }}>\r\n                          {edit ? state.auth.user.role !== \"driver\" && <Fragment>\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Receiver Name\"\r\n                              value={form.drop[0] ? form.drop[0].receiverName : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"receiverName\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Address\"\r\n                              value={form.drop[0] ? form.drop[0].dropAddress : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropAddress\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"City\"\r\n                              value={form.drop[0] ? form.drop[0].dropCity : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropCity\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"State\"\r\n                              value={form.drop[0] ? form.drop[0].dropState : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropState\")\r\n                              }\r\n                            />\r\n                            <InputField\r\n                              id=\"outlined-basic\"\r\n                              variant=\"outlined\"\r\n                              placeholder=\"Zip\"\r\n                              value={form.drop[0] ? form.drop[0].dropZip : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"dropZip\")\r\n                              }\r\n                            />\r\n                          </Fragment>\r\n                            : <StaticDataShow\r\n                              heading={'Drop'}\r\n                              values={[\r\n                                drop && drop[0] ? drop[0].receiverName : \"\",\r\n                                form.drop[0] ? form.drop[0].dropAddress : \"\",\r\n                                `${drop && drop[0] ? drop[0].dropCity : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropState : \"\"},\r\n                                    ${drop && drop[0] ? drop[0].dropZip : \"\"}`\r\n                              ]}\r\n                            />}\r\n                        </Stack>\r\n                        <Stack spacing={2} sx={{ textAlign: 'center' }}>\r\n                          {edit ? <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <Typography sx={{ fontWeight: 600, fontSize: 18, textAlign: 'center' }}>Drop Time</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DateTimePicker\r\n                                  value={moment(form.drop[0] ? form.drop[0].dropDate : \"\") || new Date()}\r\n                                  onChange={(date) => handleDateChange(date.toISOString(), \"drop\")}\r\n                                  slotProps={DATE_PICKER_SLOT_PROPS}\r\n                                  label='Drop Date'\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <DatePicker*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].dropDate : \"\"}*/}\r\n                              {/*    onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            {/*<Grid item xs={6}>*/}\r\n                            {/*    <TimePicker*/}\r\n                            {/*        label='Drop Time'*/}\r\n                            {/*      value={moment(form.drop[0] ? form.drop[0].dropDate : \"\")}*/}\r\n                            {/*      onChange={(date) => handleDateChange(date, \"drop\")}*/}\r\n                            {/*      slotProps={TIME_PICKET_SLOT_PROPS}*/}\r\n                            {/*    />*/}\r\n                            {/*</Grid>*/}\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='In Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].in_time : \"\") || new Date()}\r\n                                  onChange={(date) => handleInOutTime(date, \"drop\", \"in_time\")}\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='In Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].in_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"in_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <TimePicker\r\n                                  label='Out Time'\r\n                                  value={moment(form.drop[0] ? form.drop[0].out_time : \"\")}\r\n                                  onChange={(date) =>\r\n                                      handleInOutTime(date, \"drop\", \"out_time\")\r\n                                  }\r\n                                  slotProps={TIME_PICKET_SLOT_PROPS}\r\n                              />\r\n                              {/*<LocalizationProvider dateAdapter={AdapterDateFns}>*/}\r\n                              {/*  <TimePicker*/}\r\n                              {/*    label='Out Time'*/}\r\n                              {/*    value={form.drop[0] ? form.drop[0].out_time : \"\"}*/}\r\n                              {/*    onChange={(date) =>*/}\r\n                              {/*      handleInOutTime(date, \"drop\", \"out_time\")*/}\r\n                              {/*    }*/}\r\n                              {/*    renderInput={(params) => <TextField {...params} variant='standard' />}*/}\r\n                              {/*  />*/}\r\n                              {/*</LocalizationProvider>*/}\r\n                            </Grid>\r\n                          </Grid> :\r\n                            <Fragment>\r\n                              <StaticDataShow\r\n                                spacing={2}\r\n                                sxObject={{ mt: 2 }}\r\n                                heading={'Drop Time'}\r\n                                values={[\r\n                                  drop && drop[0] ? (\r\n                                    moment(drop[0].dropDate).format(\"LLL\")\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )\r\n                                ]}\r\n                              />\r\n                              <Stack direction='row' justifyContent='space-evenly' spacing={1}>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].in_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>In Time: </Typography>\r\n                                      <Box>{moment(drop[0].in_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                                <Stack>\r\n                                  {drop && drop[0] && drop[0].out_time ? (\r\n                                    <Stack sx={{ textAlign: 'left' }}>\r\n                                      <Typography variant='subtitle2' sx={{ color: '#595959' }}>Out Time: </Typography>\r\n                                      <Box>{moment(drop[0].out_time).format(\"h:mm A\")}</Box>\r\n                                    </Stack>\r\n                                  ) : (\r\n                                    \"--\"\r\n                                  )}\r\n                                </Stack>\r\n                              </Stack>\r\n                            </Fragment>}\r\n                        </Stack>\r\n                        <Grid item xs={12} sx={{ textAlign: \"left\", mt: 1 }}>\r\n                          <Stack spacing={2} sx={{ mt: 2, mb: 2 }}>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>PO#</Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  dropPo='dropPo'\r\n                                  value={form && form.drop[0] ? form.drop[0].dropPo : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropPo')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropPo : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Reference# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropReference : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropReference')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropReference : \"\"}</Typography>}\r\n                            </Stack>\r\n                            <Stack direction='row' alignItems='center' spacing={1}>\r\n                              <Typography fontWeight={700}>Deliver# </Typography>\r\n                              {edit ?\r\n                                <InputField\r\n                                  value={form && form.drop[0] ? form.drop[0].dropDeliverNumber : \"\"}\r\n                                  onChange={(e) => handlePickDropChange(e, 'drop', 'dropDeliverNumber')}\r\n                                />\r\n                                : <Typography>{drop && drop[0] ? drop[0].dropDeliverNumber : \"\"}</Typography>}\r\n                            </Stack>\r\n                          </Stack>\r\n\r\n                          {/* <p>Deliver Ref#  {drop && drop[0] ? drop[0].dropReference : ''}</p> */}\r\n\r\n                          {state.auth.user.role !== \"driver\" && (\r\n                            <InputField\r\n                              id=\"outlined-multiline-static\"\r\n                              placeholder=\"Drop Notes\"\r\n                              multiline\r\n                              rows={2}\r\n                              type=\"textarea\"\r\n                              value={form.drop[0] ? form.drop[0].notes : \"\"}\r\n                              onChange={(event) =>\r\n                                handlePickDropChange(event, \"drop\", \"notes\")\r\n                              }\r\n                              variant=\"outlined\"\r\n                              readOnly={!edit}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2} sx={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n                <LoadDetailsUploadComponent\r\n                    edit={edit}\r\n                    rateConfirmation = {rateConfirmation}\r\n                    proofDelivery = {proofDelivery}\r\n                    accessorialsFiles = {accessorialsFiles}\r\n                    handleFileChange={handleFileChange}\r\n                    rateConfirmationRef={rateConfirmationRef}\r\n                    proofDeliveryRef={proofDeliveryRef}\r\n                    accessorialsRef={accessorialsRef}\r\n                    state={state}\r\n                    rateConFile={form.rateConfirmation}\r\n                    podFile={form.proofDelivery}\r\n                    formAccessorialsFiles={form.accessorialsFiles}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/*******************NEW Grid END***********************************/}\r\n\r\n\r\n\r\n\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              className={classes.rootLoadDetailModal}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Grid item xs={1}></Grid>\r\n              <Grid item xs={4} justifyContent={'center'} sx={{ textAlign: 'center' }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={2} justifyContent='center' display={'flex'}>\r\n                {/*<ArrowForwardIosIcon*/}\r\n                {/*  style={{*/}\r\n                {/*    color: blue,*/}\r\n                {/*    marginTop: \"13%\",*/}\r\n                {/*    margin: '0 auto',*/}\r\n                {/*    height: 40,*/}\r\n                {/*    width: 40,*/}\r\n                {/*  }}*/}\r\n                {/*/>*/}\r\n              </Grid>\r\n              <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n\r\n              </Grid>\r\n              <Grid item xs={1}></Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        </LocalizationProvider>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoadDetailModal, () => true);\r\n"],"sourceRoot":""}