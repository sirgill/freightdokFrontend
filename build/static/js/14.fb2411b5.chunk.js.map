{"version":3,"sources":["components/auth/signUpWithFMCSA/SignUp.js","components/Atoms/form/Switch.js","components/Atoms/UserMenu.js","components/Atoms/form/LoadingButton.js","components/Atoms/FullScreenLoader.js","components/Atoms/LoadingComponent.js","components/Atoms/Tooltip.js","components/layout/Spinner.js","components/Atoms/form/Input.js","components/Atoms/form/Password.jsx","components/Atoms/form/Select.js","actions/component.action.js","components/Atoms/form/RadioButtons.js","components/Atoms/form/DateRangePicker.js","components/Atoms/Alert.js","components/client/constants.js"],"names":["ErrorComponent","icon","getCheckStatusIcon","_jsxs","_Stack","justifyContent","gap","flex","children","_jsx","_Typography","align","sx","fontWeight","variant","SignUp","props","text","setText","useState","isAllowedToOperate","setIsAllowedToOperate","loading","setLoading","className","style","verticalAlignStyle","CompanyText","_Box","component","display","alignItems","onSubmit","async","e","preventDefault","data","status","axios","get","concat","headers","content","carrier","allowedToOperate","equalsIgnoreCase","history","push","FMCSA_VERIFICATION_LINK","notification","console","error","message","_Grid","container","spacing","item","xs","_TextField","type","label","width","inputProps","min","value","onChange","target","name","size","disabled","textAlign","LoadingButton","isLoading","loadingText","Link","to","LOGIN_LINK","styled","_Switch","_ref","theme","height","padding","Switch","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","userName","split","bgcolor","UserMenu","anchorElUser","setAnchorElUser","React","user","email","role","getUserDetail","dispatch","useDispatch","settings","title","onClick","changePasswordModal","logout","replace","onClose","callback","Tooltip","placement","_IconButton","event","currentTarget","p","_Avatar","_Menu","mt","MenuListProps","minWidth","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","bind","px","py","flexDirection","getRoleNameString","_Divider","map","setting","_MenuItem","fontSize","process","withRouter","memo","rest","isDisabled","_Button","startIcon","_CircularProgress","undefined","FullScreenLoader","_Backdrop","zIndex","drawer","Spinner","LoadingComponent","m","BootstrapTooltip","MuiTooltip","arrow","classes","popper","_ref2","tooltipClasses","palette","common","black","tooltip","backgroundColor","_ref3","proptype","PropTypes","isRequired","element","oneOf","CircularIndeterminate","marginLeft","CircularProgress","InputFieldPure","errorText","handleBlur","handleChange","hasError","InputProps","readOnly","helperText","fullWidth","inputRef","formControlSx","_FormControl","onBlur","InputField","Input","errors","classNameRoot","isCapitalize","trimValue","capitalize","max","_","isFunction","trim","Password","startAdornment","showPassword","setShowPassword","endAdornment","_InputAdornment","position","handleClickShowPassword","show","onMouseDown","edge","Visibility","VisibilityOff","func","Select","options","labelKey","valueKey","menuLabelCb","renderValue","showNone","required","items","useMemo","option","_InputLabel","_Select","labelId","border","_FormHelperText","array","object","node","bool","showDelete","uri","afterSuccessCb","body","stopPropagation","store","DELETE_COMPONENT","payload","removeDelete","getState","app","deleteComponent","CHANGE_PASSWORD","RadioButtonsGroupControlled","radioTitle","labelPlacement","defaultValue","alldisabled","displayAsRow","classNameGrp","radios","forEach","info","tooltipText","shouldDisplay","labelClassName","labelSx","Fragment","_Tooltip","_FormControlLabel","control","_Radio","componentsProps","typography","_FormLabel","_RadioGroup","row","RadioButtonPure","RadioButtonsGroup","config","containerSx","parentValue","setValue","staticRanges","isSelected","range","startDate","startOfDay","Date","endDate","endOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","getDateString","s","moment","format","DateRangePicker","pickerProps","setOpen","setAnchorEl","selectionRange","setSelectionRange","key","setStartDate","setEndDate","textField","setTextField","useEffect","togglePicker","_DateRange","_Popover","bottom","Picker","ranges","selection","Alert","classname","inStyles","severity","alertProps","_Collapse","in","_Alert","ROLE_NAMES","superAdmin","admin","ownerOperator","driver","support"],"mappings":"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","file":"static/js/14.fb2411b5.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Box, Grid, Stack, TextField, Typography} from \"@mui/material\";\r\nimport CompanyText from \"../../Atoms/CompanyText\";\r\nimport axios from \"axios\";\r\nimport {FMCSA_VERIFICATION_LINK, LOGIN_LINK} from \"../../constants\";\r\nimport {notification} from \"../../../actions/alert\";\r\nimport {getCheckStatusIcon, verticalAlignStyle} from \"../../../utils/utils\";\r\nimport {LoadingButton} from \"../../Atoms\";\r\nimport '../authcss/LoginRegister.css';\r\n\r\n\r\nfunction ErrorComponent () {\r\n    const icon = getCheckStatusIcon(false);\r\n    return <Stack justifyContent='center' gap={1} flex={1}>\r\n        <Typography align='center'>{icon}</Typography>\r\n        <Typography align={'center'} sx={{fontWeight: 550}}>Sorry!</Typography>\r\n        <Typography align={'center'} variant='subtitle2'>Your Authority is not active</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst SignUp = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [isAllowedToOperate, setIsAllowedToOperate] = useState(true),\r\n        [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = async (e) => {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        try {\r\n            let {data = {}, status} = await axios.get(`https://mobile.fmcsa.dot.gov/qc/services/carriers/${text}?webKey=e1b9823bbb9dd36dc33b53bc0e8ed0710f1bedca`, {\r\n                headers : {\r\n                    'content-type': \"application/json\"\r\n                }\r\n            });\r\n            if(status){\r\n                // data.content.carrier.allowedToOperate = 'n'\r\n                const {content: { carrier:  {allowedToOperate = 'n'} = {}} = {}} = data || {};\r\n                if(allowedToOperate.equalsIgnoreCase('y')){\r\n                    props.history.push(FMCSA_VERIFICATION_LINK, data)\r\n                } else {\r\n                    setIsAllowedToOperate(false);\r\n                }\r\n            } else {\r\n                notification('Unable to verify, Please try later.', 'error')\r\n            }\r\n        } catch (e) {\r\n            console.error(e.message)\r\n            notification(e.message, 'error')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    return  <section className=\"login\">\r\n        <div className=\"auth-wrapper auth-inner\" style={verticalAlignStyle}>\r\n            <CompanyText />\r\n            <Box component='form' sx={{flex: 1, display: 'flex', alignItems: 'center'}} className=\"\" onSubmit={onSubmit}>\r\n                {isAllowedToOperate ? <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type={'number'}\r\n                            label='Please enter DOT#'\r\n                            sx={{width: '100%'}}\r\n                            inputProps={{min: 1}}\r\n                            value={text}\r\n                            onChange={onChange}\r\n                            name='dot'\r\n                            size='small'\r\n                            disabled={loading}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item textAlign='center' xs={12}>\r\n                        <LoadingButton type='submit' isLoading={loading} loadingText='Verifying DOT#. Please wait...' disabled={!text || loading}>\r\n                            Next\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid> : <ErrorComponent />}\r\n\r\n            </Box>\r\n            {!isAllowedToOperate && <Typography className=\"forgot-password text-center\">\r\n                <Link to={'/signup/support'}>Contact Support</Link>\r\n            </Typography>}\r\n            <Typography component={Link} to={LOGIN_LINK} sx={{display: 'inline' }} align='center'>Sign In</Typography>\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\nexport default SignUp","import React from 'react';\r\nimport {FormControl, FormControlLabel, Switch as MuiSwitch} from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst SwitchStyled = styled(MuiSwitch)(({theme}) => ({\r\n        width: 50,\r\n        height: 27,\r\n        padding: 7,\r\n        '& .MuiSwitch-switchBase': {\r\n\r\n        },\r\n        '& .MuiSwitch-thumb': {\r\n            width: 20,\r\n            height: 20,\r\n            '&:before': {\r\n\r\n            }\r\n        },\r\n        '&.MuiSwitch-track': {\r\n\r\n        }\r\n    })\r\n)\r\n\r\nconst Switch = ({label, name, placement = 'start', value, onChange, disabled, sx, shouldDisplay = true}) => {\r\n    const handleChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        if (onChange) onChange({name, value: checked});\r\n    }\r\n\r\n    return <FormControl component='fieldset' sx={{display: shouldDisplay ? 'inline' : 'none', ...sx}}>\r\n        <FormControlLabel\r\n            control={<SwitchStyled\r\n                color={'primary'}\r\n                onChange={handleChange}\r\n                checked={!!value}\r\n                name={name}\r\n            />}\r\n            label={label}\r\n            labelPlacement={placement}\r\n            disabled={disabled}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nexport default Switch;","import {Avatar, Box, Divider, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {Tooltip} from \"./index\";\r\nimport React, {memo} from 'react'\r\nimport {getUserDetail} from \"../../utils/utils\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../constants\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {changePasswordModal} from \"../../actions/component.action\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    let userName = ''\r\n    if (!!name.split(' ')[0]) {\r\n        userName = (name.split(' ')[0][0])\r\n    }\r\n    if (!!name.split(' ') && name.split(' ')[1]) {\r\n        userName += (name.split(' ')[1][0]);\r\n    }\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: userName\r\n    };\r\n}\r\n\r\nconst UserMenu = ({history}) => {\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const {user: {name = '', email = '', role = ''} = {}} = getUserDetail();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = [\r\n        {title: 'Change Password', onClick: handlePasswordChange},\r\n        {title: 'Logout', onClick: onLogout},\r\n    ];\r\n\r\n    function handlePasswordChange() {\r\n        changePasswordModal(true);\r\n    }\r\n\r\n    const onOpen = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const onClose = (callback) => {\r\n        setAnchorElUser(null);\r\n        if (typeof callback === 'function') callback();\r\n    };\r\n\r\n    function onLogout() {\r\n        dispatch(logout());\r\n        history.replace(LOGIN_LINK);\r\n    }\r\n\r\n    return <Box>\r\n        <Tooltip title=\"Open settings\" placement='bottom'>\r\n            <IconButton onClick={onOpen} sx={{p: 0}}>\r\n                <Avatar {...stringAvatar(name || '')} />\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            sx={{mt: '45px'}}\r\n            MenuListProps={{\r\n                sx: {\r\n                    minWidth: '8em'\r\n                }\r\n            }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorElUser}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorElUser)}\r\n            onClose={onClose.bind(null)}\r\n        >\r\n            <Box sx={{px: 2, py: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontWeight={600}>{name || 'No Name'}</Typography>\r\n                <Typography variant='caption'>{email}</Typography>\r\n                <Typography variant='caption'>{getRoleNameString(role)}</Typography>\r\n            </Box>\r\n            <Divider/>\r\n            {settings.map((setting) => (\r\n                <MenuItem key={setting.title} onClick={onClose.bind(null, setting.onClick)}>\r\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                </MenuItem>\r\n            ))}\r\n            <Divider />\r\n            <Box sx={{px: 2, py: .5, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontSize={12}>Version: {process.env.REACT_APP_VERSION}</Typography>\r\n            </Box>\r\n        </Menu>\r\n    </Box>\r\n}\r\n\r\nexport default withRouter(memo(UserMenu, () => true))","import { Button, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoadingButton = ({ children, variant = 'contained', isLoading = false, loadingText, disabled, ...rest }) => {\r\n    const text = isLoading ? !!loadingText ? loadingText: children : children\r\n    const isDisabled = isLoading || disabled;\r\n    return (\r\n        <Button\r\n            disabled={isDisabled}\r\n            variant={variant}\r\n            {...rest}\r\n            startIcon={isLoading ? <CircularProgress size={20} color='inherit' /> : undefined}\r\n        >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nLoadingButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\r\n    loadingText: PropTypes.string\r\n}\r\n\r\nexport default LoadingButton","import Spinner from \"../layout/Spinner\";\r\nimport {Backdrop} from \"@mui/material\";\r\n\r\nconst FullScreenLoader = ({color = 'inherit'}) => {\r\n    return <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={true}\r\n    >\r\n        <Spinner sx={{color}} />\r\n    </Backdrop>\r\n}\r\n\r\nexport default FullScreenLoader;","import {Stack} from \"@mui/material\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport React from \"react\";\r\n\r\nconst LoadingComponent = () => {\r\n    return <Stack m={'auto'}>\r\n        <Spinner color={'primary'} sx={{width: '100%'}} className='items-center' />\r\n    </Stack>\r\n}\r\n\r\nexport default LoadingComponent;","import MuiTooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport {styled} from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }) => (\r\n    <MuiTooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default function Tooltip({title, children, placement=\"right\", ...props}) {\r\n    return (\r\n        <BootstrapTooltip title={title} placement={placement} {...props}>\r\n            <span>{children}</span>\r\n        </BootstrapTooltip>\r\n    );\r\n}\r\n\r\nTooltip.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    placement: PropTypes.oneOf(['right', 'left', 'bottom', 'top'])\r\n}","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            inputRef,\r\n                            formControlSx,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth} sx={formControlSx}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            inputRef={inputRef}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, inputRef={}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, formControlSx = {}, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        let {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (min && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            formControlSx={formControlSx}\r\n            inputRef={inputRef}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, onBlur, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = e => {\r\n        const {name, value} = e.target\r\n        if(onBlur){\r\n            onBlur({name, value})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","import {FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst Select = ({ options = [], labelKey = 'label', valueKey = 'id', label, menuLabelCb, value, name, onChange, errors={},\r\n                    renderValue = null, showNone=false, className='',disabled=false, required=false }) => {\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n    const items = useMemo(() => {\r\n        return (options || []).map(item => {\r\n            return <MenuItem value={item[valueKey]} key={item[valueKey]} disabled={!!item['disabled']}>\r\n                {menuLabelCb ? menuLabelCb({labelKey, option: item}) : item[labelKey]}\r\n            </MenuItem>\r\n        })\r\n    }, [options])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if(onChange){\r\n            onChange({name, value});\r\n        }\r\n    }\r\n\r\n    return  <FormControl required={required} error={hasError} fullWidth size='small' className={className} disabled={disabled}>\r\n        <InputLabel id=\"demo-simple-select-error-label\">{label}</InputLabel>\r\n        <MuiSelect\r\n            name={name}\r\n            labelId=\"demo-simple-select-error-label\"\r\n            id=\"demo-simple-select-error\"\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            renderValue={renderValue}\r\n            sx={{\r\n                '.MuiOutlinedInput-input': {\r\n                    border: 'none !important'\r\n                }\r\n            }}\r\n        >\r\n            {showNone && <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>}\r\n            {items}\r\n        </MuiSelect>\r\n        {hasError && <FormHelperText>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nSelect.proptype = {\r\n    options: PropTypes.array.isRequired,\r\n    labelKey: PropTypes.string,\r\n    valueKey: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    renderValue: PropTypes.node,\r\n    className: PropTypes.string,\r\n    showNone: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    menuLabelCb: PropTypes.func\r\n}\r\n\r\nexport default Select;","import store from \"../store\";\r\nimport {CHANGE_PASSWORD, DELETE_COMPONENT} from \"./types\";\r\n\r\n\r\nconst showDelete = ({message, uri, afterSuccessCb, body}) => (e) => {\r\n    e?.stopPropagation();\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {open: true, message, uri, afterSuccessCb, body}})\r\n}\r\n\r\nconst removeDelete = () => {\r\n    const data = store.getState().app.deleteComponent;\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {...data, open: false}})\r\n}\r\n\r\nconst changePasswordModal = (open) => {\r\n    store.dispatch({type: CHANGE_PASSWORD, payload: { open }})\r\n}\r\n\r\nexport {\r\n    showDelete,\r\n    removeDelete,\r\n    changePasswordModal\r\n}","import {Fragment, memo, useState} from \"react\";\r\nimport {FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Tooltip} from \"@mui/material\";\r\n\r\nconst RadioButtonsGroupControlled = (props) => {\r\n    const {\r\n        name, value, handleChange, radioTitle, options = [], labelPlacement = 'end',\r\n        className, defaultValue, disabled: alldisabled = false, displayAsRow = true, classNameGrp = ''\r\n    } = props;\r\n\r\n    let radios = []\r\n    options.forEach((option, i) => {\r\n        const {\r\n            label = '',\r\n            value,\r\n            info,\r\n            tooltipText = '',\r\n            shouldDisplay = true,\r\n            disabled = false,\r\n            labelClassName = '',\r\n            labelSx = {}\r\n        } = option;\r\n        if (shouldDisplay && shouldDisplay === 'function') {\r\n            const show = shouldDisplay(props)\r\n            if (!show) return;\r\n        }\r\n        radios.push(\r\n            <Fragment key={i}>\r\n                <Tooltip title={tooltipText} arrow>\r\n                    <FormControlLabel\r\n                        control={<Radio/>}\r\n                        label={label}\r\n                        disabled={alldisabled || disabled}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        className={labelClassName ? `${labelClassName} ${className}` : className}\r\n                        role='radio'\r\n                        componentsProps={{\r\n                            typography: {\r\n                                sx: labelSx\r\n                            }\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                {info && <span className='radioInfo'>{info}</span>}\r\n            </Fragment>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>{radioTitle}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={radioTitle}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                row={displayAsRow}\r\n                defaultValue={defaultValue}\r\n                className={classNameGrp}\r\n            >\r\n                {radios}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst RadioButtonPure = memo(RadioButtonsGroupControlled)\r\n\r\nconst RadioButtonsGroup = ({config = {}, onChange, containerSx, parentValue}) => {\r\n    const {title, options = [], defaultValue = '', ...rest} = config;\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value, type} = {}} = e;\r\n        setValue(value);\r\n        if (onChange) onChange({value, name, type});\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={containerSx}>\r\n            <RadioButtonPure\r\n                handleChange={handleChange}\r\n                value={parentValue || value}\r\n                radioTitle={title}\r\n                options={options}\r\n                {...rest}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioButtonsGroup","import { DateRangePicker as Picker } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport { endOfDay, startOfDay, startOfWeek, startOfMonth, startOfQuarter, startOfYear } from 'date-fns'\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport React, {Fragment, useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    InputAdornment,\r\n    IconButton,\r\n    Popover,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { DateRange } from \"@mui/icons-material\";\r\nimport './dateRangePicker.css'\r\n\r\nconst staticRanges = [\r\n    {\r\n        label: 'Today',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfDay(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Week',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfWeek(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Month',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfMonth(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Quarter',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfQuarter(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Year',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfYear(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    }\r\n]\r\n\r\nconst getDateString = (s, e) => {\r\n    return moment(s).format('MM/DD/YYYY') + ' - ' + moment(e).format('MM/DD/YYYY')\r\n}\r\n\r\nconst DateRangePicker = ({ value, onChange, label, name, pickerProps={} }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const id = open && Boolean(anchorEl) ? 'transition-popper' : undefined;\r\n    const [selectionRange, setSelectionRange] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [textField, setTextField] = useState(getDateString())\r\n\r\n    useEffect(() => {\r\n        if(value){\r\n            const {startDate, endDate} = value;\r\n            setSelectionRange(value)\r\n            setTextField(getDateString(startDate, endDate));\r\n        }\r\n    }, [value])\r\n\r\n    function handleSelect(ranges) {\r\n        const { selection: { startDate, endDate } = {} } = ranges;\r\n        setStartDate(() => startDate)\r\n        setEndDate(() => endDate)\r\n        setTextField(getDateString(startDate, endDate))\r\n        setSelectionRange({ startDate, endDate, key: 'selection' })\r\n        if (onChange) onChange({ name, value: { startDate, endDate } })\r\n    }\r\n\r\n\r\n    const togglePicker = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                name={name}\r\n                value={textField}\r\n                label={label}\r\n                size={'small'}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle Date range picker\"\r\n                            onClick={togglePicker}\r\n                            edge=\"end\"\r\n                            aria-describedby={id}\r\n                        >\r\n                            <DateRange />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n                readOnly\r\n            />\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={togglePicker} anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    bgcolor: 'background.paper',\r\n                    '&.rdrStaticRangeLabel': { fontSize: \"14px!important\" },\r\n                    '& .rdrDayNumber span::after': {\r\n                        bottom: '1px !important'\r\n                    }\r\n                }}\r\n                >\r\n                    <Picker\r\n                        ranges={[selectionRange]}\r\n                        onChange={handleSelect}\r\n                        className={'basePicker'}\r\n                        staticRanges={staticRanges}\r\n                        {...pickerProps}\r\n                    />\r\n                </Box>\r\n            </Popover>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DateRangePicker","import {Collapse, Alert as MuiAlert} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Alert = ({config, classname='', onClose = undefined, inStyles = {}}) => {\r\n    const {open, message = '', severity = '', variant = 'standard'} = config;\r\n\r\n    const alertProps = {\r\n        severity: severity || undefined,\r\n        variant\r\n    }\r\n    if(typeof onClose === 'function'){\r\n        alertProps.onClose = onClose;\r\n    }\r\n\r\n    return <Collapse in={open} sx={inStyles}>\r\n        <MuiAlert className={'alertbase ' + classname} {...alertProps}>\r\n            {message}\r\n        </MuiAlert>\r\n    </Collapse>\r\n}\r\n\r\nexport default Alert;","const ROLE_NAMES = {\r\n    superAdmin: 'Super Admin',\r\n    dispatch: 'Dispatch',\r\n    admin: 'Admin',\r\n    ownerOperator: 'Owner Operator',\r\n    driver: 'Driver',\r\n    support: 'Support',\r\n}\r\n\r\nexport const getRoleNameString = function (role) {\r\n    return ROLE_NAMES[role] || role;\r\n}"],"sourceRoot":""}