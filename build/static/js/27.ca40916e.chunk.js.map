{"version":3,"sources":["../node_modules/@mui/x-date-pickers/DatePicker/datePickerToolbarClasses.js","../node_modules/@mui/x-date-pickers/DatePicker/DatePickerToolbar.js","../node_modules/@mui/x-date-pickers/DatePicker/shared.js","../node_modules/@mui/x-date-pickers/DateField/useDateField.js","../node_modules/@mui/x-date-pickers/DateField/DateField.js","../node_modules/@mui/x-date-pickers/DesktopDatePicker/DesktopDatePicker.js","../node_modules/@mui/x-date-pickers/MobileDatePicker/MobileDatePicker.js","../node_modules/@mui/x-date-pickers/DatePicker/DatePicker.js","../node_modules/@mui/icons-material/ArrowForward.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Remove.js","../node_modules/@mui/icons-material/LocationOn.js","../node_modules/@mui/icons-material/ArrowDropDown.js","../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/material/node_modules/@mui/base/useAutocomplete/useAutocomplete.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["getDatePickerToolbarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DatePickerToolbarRoot","styled","PickersToolbar","name","overridesResolver","_","styles","root","DatePickerToolbarTitle","Typography","title","_ref","ownerState","_extends","isLandscape","margin","DatePickerToolbar","React","inProps","ref","props","useThemeProps","value","toolbarFormat","toolbarPlaceholder","views","other","_objectWithoutPropertiesLoose","utils","useUtils","localeText","useLocaleText","classes","composeClasses","useUtilityClasses","dateText","formatFromViews","resolveDateFormat","format","formatByString","_jsx","toolbarTitle","datePickerToolbarTitle","className","children","variant","align","useDatePickerDefaultizedProps","_themeProps$slots","_themeProps$disableFu","_themeProps$disablePa","_themeProps$slotProps","defaultDates","useDefaultDates","themeProps","_themeProps$localeTex","slots","uncapitalizeObjectKeys","components","applyDefaultViewProps","openTo","defaultViews","defaultOpenTo","disableFuture","disablePast","minDate","applyDefaultDate","maxDate","toolbar","slotProps","componentsProps","useDateField","inputRef","_props$disablePast","_props$disableFuture","_props$format","formats","keyboardDate","useDefaultizedDateField","forwardedProps","internalProps","splitFieldInternalAndForwardedProps","useField","valueManager","singleItemValueManager","fieldValueManager","singleItemFieldValueManager","validator","validateDate","valueType","_excluded2","_excluded3","DateField","_slots$textField","_slotProps$textField","InputProps","inputProps","TextField","textField","MuiTextField","_useSlotProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","externalInputRef","textFieldProps","_useDateField","onPaste","onKeyDown","inputMode","readOnly","clearable","onClear","fieldProps","ProcessedInputProps","processedFieldProps","useClearableField","DesktopDatePicker","_defaultizedProps$yea","_defaultizedProps$slo2","_props$localeText$ope","_props$localeText","defaultizedProps","viewRenderers","day","renderDateViewCalendar","month","year","yearsPerRow","openPickerIcon","CalendarIcon","field","_defaultizedProps$slo","resolveComponentProps","extractValidationProps","hidden","renderPicker","useDesktopPicker","getOpenDialogAriaText","openDatePickerDialogue","propTypes","autoFocus","PropTypes","bool","string","closeOnSelect","object","dayOfWeekFormatter","func","defaultCalendarMonth","any","defaultValue","disabled","disableHighlightToday","disableOpenPicker","displayWeekNumber","fixedWeekNumber","number","formatDensity","oneOf","refType","label","node","loading","monthsPerRow","onAccept","onChange","onClose","onError","onMonthChange","onOpen","onSelectedSectionsChange","onViewChange","onYearChange","open","orientation","reduceAnimations","referenceDate","renderLoading","selectedSections","oneOfType","shape","endIndex","isRequired","startIndex","shouldDisableDate","shouldDisableMonth","shouldDisableYear","showDaysOutsideCurrentMonth","sx","arrayOf","timezone","view","MobileDatePicker","useMobilePicker","DatePicker","desktopModeMediaQuery","DEFAULT_DESKTOP_MODE_MEDIA_QUERY","useMediaQuery","defaultMatches","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","BrowserRouter","n","e","t","arguments","length","r","Array","o","call","apply","concat","history","createBrowserHistory","_inheritsLoose","prototype","render","createElement","reactRouter","Router","this","Component","HashRouter","createHashHistory","resolveToLocation","normalizeToLocation","createLocation","forwardRefShim","forwardRef","LinkAnchor","innerRef","navigate","onClick","a","i","target","c","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Link","component","replace","u","to","f","s","__RouterContext","Consumer","invariant","location","createHref","href","createPath","push","forwardRefShim$1","forwardRef$1","NavLink","l","activeClassName","p","R","activeStyle","h","y","exact","isActive","m","v","sensitive","b","strict","P","style","w","x","g","pathname","matchPath","path","filter","join","joinClassnames","enumerable","get","MemoryRouter","Prompt","Redirect","Route","StaticRouter","Switch","generatePath","useHistory","useLocation","useParams","useRouteMatch","withRouter","usePreviousProps","current","stripDiacritics","normalize","findIndex","array","comp","defaultFilterOptions","config","undefined","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","option","candidate","indexOf","slice","createFilterOptions","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","parentElement","contains","document","activeElement","useAutocomplete","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","multiple","disableClearable","disableCloseOnSelect","disabledProp","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","onHighlightChange","onInputChange","openProp","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","useControlled","controlled","setInputValueState","state","focused","setFocused","resetInputValue","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","previousProps","valueChange","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","_ref2","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","getAttribute","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","direction","nextIndex","nextFocus","nextFocusDisabled","hasAttribute","validOptionIndex","getNextIndex","maxIndex","newIndex","Math","abs","setSelectionRange","syncHighlightedIndex","checkHighlightedOptionExists","every","val","value1","previousHighlightedOption","isSameValue","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","origin","isArray","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","defaultMuiPrevented","key","which","stopPropagation","handleFocus","handleBlur","handleInputChange","handleOptionMouseMove","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","role","getClearProps","tabIndex","type","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseMove","onTouchStart","expanded","getListSubheaderUtilityClass","listSubheaderClasses","ListSubheaderRoot","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","as","clsx","muiSkipListHighlight","getAutocompleteUtilityClass","autocompleteClasses","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","inputRoot","clearIndicator","visibility","width","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","sizeSmall","outlinedInputClasses","endAdornment","right","paddingTop","filledInputClasses","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","_ref6","AutocompleteNoOptions","noOptions","_ref7","AutocompleteListbox","listbox","_ref8","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","focusVisible","mainChannel","selectedOpacity","alpha","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","_ref9","AutocompleteGroupUl","groupUl","Autocomplete","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","ChipProps","clearIcon","ClearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","externalListboxRef","_getListboxProps","otherListboxProps","combinedListboxRef","useForkRef","startAdornment","getCustomizedTagProps","params","map","Chip","_jsxs","defaultRenderOption","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","InputLabelProps","clientWidth","option2","index2"],"mappings":"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","file":"static/js/27.ca40916e.chunk.js","sourcesContent":["import { unstable_generateUtilityClass as generateUtilityClass, unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nexport function getDatePickerToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiDatePickerToolbar', slot);\n}\nexport const datePickerToolbarClasses = generateUtilityClasses('MuiDatePickerToolbar', ['root', 'title']);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"isLandscape\", \"onChange\", \"toolbarFormat\", \"toolbarPlaceholder\", \"views\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { PickersToolbar } from '../internals/components/PickersToolbar';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { getDatePickerToolbarUtilityClass } from './datePickerToolbarClasses';\nimport { resolveDateFormat } from '../internals/utils/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    title: ['title']\n  };\n  return composeClasses(slots, getDatePickerToolbarUtilityClass, classes);\n};\nconst DatePickerToolbarRoot = styled(PickersToolbar, {\n  name: 'MuiDatePickerToolbar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({});\nconst DatePickerToolbarTitle = styled(Typography, {\n  name: 'MuiDatePickerToolbar',\n  slot: 'Title',\n  overridesResolver: (_, styles) => styles.title\n})(({\n  ownerState\n}) => _extends({}, ownerState.isLandscape && {\n  margin: 'auto 16px auto auto'\n}));\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [Custom components](https://mui.com/x/react-date-pickers/custom-components/)\n *\n * API:\n *\n * - [DatePickerToolbar API](https://mui.com/x/api/date-pickers/date-picker-toolbar/)\n */\nexport const DatePickerToolbar = /*#__PURE__*/React.forwardRef(function DatePickerToolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDatePickerToolbar'\n  });\n  const {\n      value,\n      isLandscape,\n      toolbarFormat,\n      toolbarPlaceholder = '––',\n      views\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const utils = useUtils();\n  const localeText = useLocaleText();\n  const classes = useUtilityClasses(props);\n  const dateText = React.useMemo(() => {\n    if (!value) {\n      return toolbarPlaceholder;\n    }\n    const formatFromViews = resolveDateFormat(utils, {\n      format: toolbarFormat,\n      views\n    }, true);\n    return utils.formatByString(value, formatFromViews);\n  }, [value, toolbarFormat, toolbarPlaceholder, utils, views]);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(DatePickerToolbarRoot, _extends({\n    ref: ref,\n    toolbarTitle: localeText.datePickerToolbarTitle,\n    isLandscape: isLandscape,\n    className: classes.root\n  }, other, {\n    children: /*#__PURE__*/_jsx(DatePickerToolbarTitle, {\n      variant: \"h4\",\n      align: isLandscape ? 'left' : 'center',\n      ownerState: ownerState,\n      className: classes.title,\n      children: dateText\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DatePickerToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  classes: PropTypes.object,\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   * @default `true` for Desktop, `false` for Mobile.\n   */\n  hidden: PropTypes.bool,\n  isLandscape: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Callback called when a toolbar is clicked\n   * @template TView\n   * @param {TView} view The view to open\n   */\n  onViewChange: PropTypes.func.isRequired,\n  readOnly: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  titleId: PropTypes.string,\n  /**\n   * Toolbar date format.\n   */\n  toolbarFormat: PropTypes.string,\n  /**\n   * Toolbar value placeholder—it is displayed when the value is empty.\n   * @default \"––\"\n   */\n  toolbarPlaceholder: PropTypes.node,\n  value: PropTypes.any,\n  /**\n   * Currently visible picker view.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']).isRequired,\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired).isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internals/hooks/useUtils';\nimport { applyDefaultViewProps } from '../internals/utils/views';\nimport { applyDefaultDate } from '../internals/utils/date-utils';\nimport { DatePickerToolbar } from './DatePickerToolbar';\nimport { uncapitalizeObjectKeys } from '../internals/utils/slots-migration';\nexport function useDatePickerDefaultizedProps(props, name) {\n  var _themeProps$slots, _themeProps$disableFu, _themeProps$disablePa, _themeProps$slotProps;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const localeText = React.useMemo(() => {\n    var _themeProps$localeTex;\n    if (((_themeProps$localeTex = themeProps.localeText) == null ? void 0 : _themeProps$localeTex.toolbarTitle) == null) {\n      return themeProps.localeText;\n    }\n    return _extends({}, themeProps.localeText, {\n      datePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  const slots = (_themeProps$slots = themeProps.slots) != null ? _themeProps$slots : uncapitalizeObjectKeys(themeProps.components);\n  return _extends({}, themeProps, {\n    localeText\n  }, applyDefaultViewProps({\n    views: themeProps.views,\n    openTo: themeProps.openTo,\n    defaultViews: ['year', 'day'],\n    defaultOpenTo: 'day'\n  }), {\n    disableFuture: (_themeProps$disableFu = themeProps.disableFuture) != null ? _themeProps$disableFu : false,\n    disablePast: (_themeProps$disablePa = themeProps.disablePast) != null ? _themeProps$disablePa : false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    slots: _extends({\n      toolbar: DatePickerToolbar\n    }, slots),\n    slotProps: (_themeProps$slotProps = themeProps.slotProps) != null ? _themeProps$slotProps : themeProps.componentsProps\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { singleItemFieldValueManager, singleItemValueManager } from '../internals/utils/valueManagers';\nimport { useField } from '../internals/hooks/useField';\nimport { validateDate } from '../internals/utils/validation/validateDate';\nimport { applyDefaultDate } from '../internals/utils/date-utils';\nimport { useUtils, useDefaultDates } from '../internals/hooks/useUtils';\nimport { splitFieldInternalAndForwardedProps } from '../internals/utils/fields';\nconst useDefaultizedDateField = props => {\n  var _props$disablePast, _props$disableFuture, _props$format;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  return _extends({}, props, {\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    format: (_props$format = props.format) != null ? _props$format : utils.formats.keyboardDate,\n    minDate: applyDefaultDate(utils, props.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, props.maxDate, defaultDates.maxDate)\n  });\n};\nexport const useDateField = ({\n  props: inProps,\n  inputRef\n}) => {\n  const props = useDefaultizedDateField(inProps);\n  const {\n    forwardedProps,\n    internalProps\n  } = splitFieldInternalAndForwardedProps(props, 'date');\n  return useField({\n    inputRef,\n    forwardedProps,\n    internalProps,\n    valueManager: singleItemValueManager,\n    fieldValueManager: singleItemFieldValueManager,\n    validator: validateDate,\n    valueType: 'date'\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"components\", \"componentsProps\", \"slots\", \"slotProps\", \"InputProps\", \"inputProps\"],\n  _excluded2 = [\"inputRef\"],\n  _excluded3 = [\"ref\", \"onPaste\", \"onKeyDown\", \"inputMode\", \"readOnly\", \"clearable\", \"onClear\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiTextField from '@mui/material/TextField';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useSlotProps } from '@mui/base/utils';\nimport { refType } from '@mui/utils';\nimport { useDateField } from './useDateField';\nimport { useClearableField } from '../hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [DateField](http://mui.com/x/react-date-pickers/date-field/)\n * - [Fields](https://mui.com/x/react-date-pickers/fields/)\n *\n * API:\n *\n * - [DateField API](https://mui.com/x/api/date-pickers/date-field/)\n */\nconst DateField = /*#__PURE__*/React.forwardRef(function DateField(inProps, ref) {\n  var _ref, _slots$textField, _slotProps$textField;\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDateField'\n  });\n  const {\n      components,\n      componentsProps,\n      slots,\n      slotProps,\n      InputProps,\n      inputProps\n    } = themeProps,\n    other = _objectWithoutPropertiesLoose(themeProps, _excluded);\n  const ownerState = themeProps;\n  const TextField = (_ref = (_slots$textField = slots == null ? void 0 : slots.textField) != null ? _slots$textField : components == null ? void 0 : components.TextField) != null ? _ref : MuiTextField;\n  const _useSlotProps = useSlotProps({\n      elementType: TextField,\n      externalSlotProps: (_slotProps$textField = slotProps == null ? void 0 : slotProps.textField) != null ? _slotProps$textField : componentsProps == null ? void 0 : componentsProps.textField,\n      externalForwardedProps: other,\n      ownerState\n    }),\n    {\n      inputRef: externalInputRef\n    } = _useSlotProps,\n    textFieldProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded2);\n\n  // TODO: Remove when mui/material-ui#35088 will be merged\n  textFieldProps.inputProps = _extends({}, inputProps, textFieldProps.inputProps);\n  textFieldProps.InputProps = _extends({}, InputProps, textFieldProps.InputProps);\n  const _useDateField = useDateField({\n      props: textFieldProps,\n      inputRef: externalInputRef\n    }),\n    {\n      ref: inputRef,\n      onPaste,\n      onKeyDown,\n      inputMode,\n      readOnly,\n      clearable,\n      onClear\n    } = _useDateField,\n    fieldProps = _objectWithoutPropertiesLoose(_useDateField, _excluded3);\n  const {\n    InputProps: ProcessedInputProps,\n    fieldProps: processedFieldProps\n  } = useClearableField({\n    onClear,\n    clearable,\n    fieldProps,\n    InputProps: fieldProps.InputProps,\n    slots,\n    slotProps,\n    components,\n    componentsProps\n  });\n  return /*#__PURE__*/_jsx(TextField, _extends({\n    ref: ref\n  }, processedFieldProps, {\n    InputProps: _extends({}, ProcessedInputProps, {\n      readOnly\n    }),\n    inputProps: _extends({}, fieldProps.inputProps, {\n      inputMode,\n      onPaste,\n      onKeyDown,\n      ref: inputRef\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  className: PropTypes.string,\n  /**\n   * If `true`, a clear button will be shown in the field allowing value clearing.\n   * @default false\n   */\n  clearable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']),\n  component: PropTypes.elementType,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * Format of the date when rendered in the input(s).\n   */\n  format: PropTypes.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the clear button is clicked.\n   */\n  onClear: PropTypes.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.\n   * For example, on time fields it will be used to determine the date to set.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The currently selected sections.\n   * This prop accept four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.\n   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 4. If `null` is provided, no section will be selected\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number, PropTypes.shape({\n    endIndex: PropTypes.number.isRequired,\n    startIndex: PropTypes.number.isRequired\n  })]),\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)\n   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)\n   *\n   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: \"DD\"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.\n   *\n   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.\n   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\\u200e/g, '')`.\n   *\n   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.\n   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.\n   *\n   * @default `false`\n   */\n  shouldRespectLeadingZeros: PropTypes.bool,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The ref object used to imperatively interact with the field.\n   */\n  unstableFieldRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport { DateField };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { refType } from '@mui/utils';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { useDatePickerDefaultizedProps } from '../DatePicker/shared';\nimport { useLocaleText, useUtils, validateDate } from '../internals';\nimport { useDesktopPicker } from '../internals/hooks/useDesktopPicker';\nimport { CalendarIcon } from '../icons';\nimport { DateField } from '../DateField';\nimport { extractValidationProps } from '../internals/utils/validation/extractValidationProps';\nimport { renderDateViewCalendar } from '../dateViewRenderers';\nimport { resolveDateFormat } from '../internals/utils/date-utils';\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [DesktopDatePicker API](https://mui.com/x/api/date-pickers/desktop-date-picker/)\n */\nconst DesktopDatePicker = /*#__PURE__*/React.forwardRef(function DesktopDatePicker(inProps, ref) {\n  var _defaultizedProps$yea, _defaultizedProps$slo2, _props$localeText$ope, _props$localeText;\n  const localeText = useLocaleText();\n  const utils = useUtils();\n\n  // Props with the default values common to all date pickers\n  const defaultizedProps = useDatePickerDefaultizedProps(inProps, 'MuiDesktopDatePicker');\n  const viewRenderers = _extends({\n    day: renderDateViewCalendar,\n    month: renderDateViewCalendar,\n    year: renderDateViewCalendar\n  }, defaultizedProps.viewRenderers);\n\n  // Props with the default values specific to the desktop variant\n  const props = _extends({}, defaultizedProps, {\n    viewRenderers,\n    format: resolveDateFormat(utils, defaultizedProps, false),\n    yearsPerRow: (_defaultizedProps$yea = defaultizedProps.yearsPerRow) != null ? _defaultizedProps$yea : 4,\n    slots: _extends({\n      openPickerIcon: CalendarIcon,\n      field: DateField\n    }, defaultizedProps.slots),\n    slotProps: _extends({}, defaultizedProps.slotProps, {\n      field: ownerState => {\n        var _defaultizedProps$slo;\n        return _extends({}, resolveComponentProps((_defaultizedProps$slo = defaultizedProps.slotProps) == null ? void 0 : _defaultizedProps$slo.field, ownerState), extractValidationProps(defaultizedProps), {\n          ref\n        });\n      },\n      toolbar: _extends({\n        hidden: true\n      }, (_defaultizedProps$slo2 = defaultizedProps.slotProps) == null ? void 0 : _defaultizedProps$slo2.toolbar)\n    })\n  });\n  const {\n    renderPicker\n  } = useDesktopPicker({\n    props,\n    valueManager: singleItemValueManager,\n    valueType: 'date',\n    getOpenDialogAriaText: (_props$localeText$ope = (_props$localeText = props.localeText) == null ? void 0 : _props$localeText.openDatePickerDialogue) != null ? _props$localeText$ope : localeText.openDatePickerDialogue,\n    validator: validateDate\n  });\n  return renderPicker();\n});\nDesktopDatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the popover or modal will close after submitting the full date.\n   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value` and `defaultValue` are empty.\n   * @deprecated Consider using `referenceDate` instead.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The default value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, the open picker button will not be rendered (renders only the field).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * Format of the date when rendered in the input(s).\n   * Defaults to localized format based on the used `views`.\n   */\n  format: PropTypes.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Locale for components texts.\n   * Allows overriding texts coming from `LocalizationProvider` and `theme`.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Months rendered per row.\n   * @default 3\n   */\n  monthsPerRow: PropTypes.oneOf([3, 4]),\n  /**\n   * Name attribute used by the `input` element in the Field.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the value is accepted.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see `open`).\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.\n   *\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error describing why the current value is not valid.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see `open`).\n   */\n  onOpen: PropTypes.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * Callback fired on year change.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n  /**\n   * Control the popup or dialog open state.\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * The currently selected sections.\n   * This prop accept four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.\n   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 4. If `null` is provided, no section will be selected\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number, PropTypes.shape({\n    endIndex: PropTypes.number.isRequired,\n    startIndex: PropTypes.number.isRequired\n  })]),\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Define custom view renderers for each section.\n   * If `null`, the section will only have field editing.\n   * If `undefined`, internally defined view will be the used.\n   */\n  viewRenderers: PropTypes.shape({\n    day: PropTypes.func,\n    month: PropTypes.func,\n    year: PropTypes.func\n  }),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired),\n  /**\n   * Years rendered per row.\n   * @default 4\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n};\nexport { DesktopDatePicker };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { resolveComponentProps } from '@mui/base/utils';\nimport { refType } from '@mui/utils';\nimport { useMobilePicker } from '../internals/hooks/useMobilePicker';\nimport { useDatePickerDefaultizedProps } from '../DatePicker/shared';\nimport { useLocaleText, useUtils, validateDate } from '../internals';\nimport { DateField } from '../DateField';\nimport { extractValidationProps } from '../internals/utils/validation/extractValidationProps';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { renderDateViewCalendar } from '../dateViewRenderers';\nimport { resolveDateFormat } from '../internals/utils/date-utils';\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [MobileDatePicker API](https://mui.com/x/api/date-pickers/mobile-date-picker/)\n */\nconst MobileDatePicker = /*#__PURE__*/React.forwardRef(function MobileDatePicker(inProps, ref) {\n  var _defaultizedProps$slo2, _props$localeText$ope, _props$localeText;\n  const localeText = useLocaleText();\n  const utils = useUtils();\n\n  // Props with the default values common to all date pickers\n  const defaultizedProps = useDatePickerDefaultizedProps(inProps, 'MuiMobileDatePicker');\n  const viewRenderers = _extends({\n    day: renderDateViewCalendar,\n    month: renderDateViewCalendar,\n    year: renderDateViewCalendar\n  }, defaultizedProps.viewRenderers);\n\n  // Props with the default values specific to the mobile variant\n  const props = _extends({}, defaultizedProps, {\n    viewRenderers,\n    format: resolveDateFormat(utils, defaultizedProps, false),\n    slots: _extends({\n      field: DateField\n    }, defaultizedProps.slots),\n    slotProps: _extends({}, defaultizedProps.slotProps, {\n      field: ownerState => {\n        var _defaultizedProps$slo;\n        return _extends({}, resolveComponentProps((_defaultizedProps$slo = defaultizedProps.slotProps) == null ? void 0 : _defaultizedProps$slo.field, ownerState), extractValidationProps(defaultizedProps), {\n          ref\n        });\n      },\n      toolbar: _extends({\n        hidden: false\n      }, (_defaultizedProps$slo2 = defaultizedProps.slotProps) == null ? void 0 : _defaultizedProps$slo2.toolbar)\n    })\n  });\n  const {\n    renderPicker\n  } = useMobilePicker({\n    props,\n    valueManager: singleItemValueManager,\n    valueType: 'date',\n    getOpenDialogAriaText: (_props$localeText$ope = (_props$localeText = props.localeText) == null ? void 0 : _props$localeText.openDatePickerDialogue) != null ? _props$localeText$ope : localeText.openDatePickerDialogue,\n    validator: validateDate\n  });\n  return renderPicker();\n});\nMobileDatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the popover or modal will close after submitting the full date.\n   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value` and `defaultValue` are empty.\n   * @deprecated Consider using `referenceDate` instead.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The default value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, the open picker button will not be rendered (renders only the field).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * Format of the date when rendered in the input(s).\n   * Defaults to localized format based on the used `views`.\n   */\n  format: PropTypes.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Locale for components texts.\n   * Allows overriding texts coming from `LocalizationProvider` and `theme`.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Months rendered per row.\n   * @default 3\n   */\n  monthsPerRow: PropTypes.oneOf([3, 4]),\n  /**\n   * Name attribute used by the `input` element in the Field.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the value is accepted.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see `open`).\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.\n   *\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error describing why the current value is not valid.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see `open`).\n   */\n  onOpen: PropTypes.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * Callback fired on year change.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n  /**\n   * Control the popup or dialog open state.\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * The currently selected sections.\n   * This prop accept four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.\n   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 4. If `null` is provided, no section will be selected\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number, PropTypes.shape({\n    endIndex: PropTypes.number.isRequired,\n    startIndex: PropTypes.number.isRequired\n  })]),\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Define custom view renderers for each section.\n   * If `null`, the section will only have field editing.\n   * If `undefined`, internally defined view will be the used.\n   */\n  viewRenderers: PropTypes.shape({\n    day: PropTypes.func,\n    month: PropTypes.func,\n    year: PropTypes.func\n  }),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired),\n  /**\n   * Years rendered per row.\n   * @default 3\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n};\nexport { MobileDatePicker };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"desktopModeMediaQuery\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useThemeProps } from '@mui/material/styles';\nimport { refType } from '@mui/utils';\nimport { DesktopDatePicker } from '../DesktopDatePicker';\nimport { MobileDatePicker } from '../MobileDatePicker';\nimport { DEFAULT_DESKTOP_MODE_MEDIA_QUERY } from '../internals/utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Demos:\n *\n * - [DatePicker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [Validation](https://mui.com/x/react-date-pickers/validation/)\n *\n * API:\n *\n * - [DatePicker API](https://mui.com/x/api/date-pickers/date-picker/)\n */\nconst DatePicker = /*#__PURE__*/React.forwardRef(function DatePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDatePicker'\n  });\n  const {\n      desktopModeMediaQuery = DEFAULT_DESKTOP_MODE_MEDIA_QUERY\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  // defaults to `true` in environments where `window.matchMedia` would not be available (i.e. test/jsdom)\n  const isDesktop = useMediaQuery(desktopModeMediaQuery, {\n    defaultMatches: true\n  });\n  if (isDesktop) {\n    return /*#__PURE__*/_jsx(DesktopDatePicker, _extends({\n      ref: ref\n    }, other));\n  }\n  return /*#__PURE__*/_jsx(MobileDatePicker, _extends({\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the popover or modal will close after submitting the full date.\n   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n  /**\n   * Overridable components.\n   * @default {}\n   * @deprecated Please use `slots`.\n   */\n  components: PropTypes.object,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   * @deprecated Please use `slotProps`.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter.  Deprecated, will be removed in v7: Use `date` instead.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * Default calendar month displayed when `value` and `defaultValue` are empty.\n   * @deprecated Consider using `referenceDate` instead.\n   */\n  defaultCalendarMonth: PropTypes.any,\n  /**\n   * The default value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   * @default '@media (pointer: fine)'\n   * @example '@media (min-width: 720px)' or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery: PropTypes.string,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, the open picker button will not be rendered (renders only the field).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * Calendar will show more weeks in order to match this value.\n   * Put it to 6 for having fix number of week in Gregorian calendars\n   * @default undefined\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * Format of the date when rendered in the input(s).\n   * Defaults to localized format based on the used `views`.\n   */\n  format: PropTypes.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Locale for components texts.\n   * Allows overriding texts coming from `LocalizationProvider` and `theme`.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.any,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.any,\n  /**\n   * Months rendered per row.\n   * @default 3\n   */\n  monthsPerRow: PropTypes.oneOf([3, 4]),\n  /**\n   * Name attribute used by the `input` element in the Field.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the value is accepted.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see `open`).\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * If the error has a non-null value, then the `TextField` will be rendered in `error` state.\n   *\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error describing why the current value is not valid.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see `open`).\n   */\n  onOpen: PropTypes.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * Callback fired on year change.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n  /**\n   * Control the popup or dialog open state.\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.\n   */\n  referenceDate: PropTypes.any,\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * The currently selected sections.\n   * This prop accept four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If an object with a `startIndex` and `endIndex` properties are provided, the sections between those two indexes will be selected.\n   * 3. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 4. If `null` is provided, no section will be selected\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number, PropTypes.shape({\n    endIndex: PropTypes.number.isRequired,\n    startIndex: PropTypes.number.isRequired\n  })]),\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (e.g. when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} If `true` the date will be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * Disable specific month.\n   * @template TDate\n   * @param {TDate} month The month to test.\n   * @returns {boolean} If `true`, the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n  /**\n   * Disable specific year.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} If `true`, the year will be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documention} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.any,\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day', 'month', 'year']),\n  /**\n   * Define custom view renderers for each section.\n   * If `null`, the section will only have field editing.\n   * If `undefined`, internally defined view will be the used.\n   */\n  viewRenderers: PropTypes.shape({\n    day: PropTypes.func,\n    month: PropTypes.func,\n    year: PropTypes.func\n  }),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired),\n  /**\n   * Years rendered per row.\n   * @default 4 on desktop, 3 on mobile\n   */\n  yearsPerRow: PropTypes.oneOf([3, 4])\n} : void 0;\nexport { DatePicker };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\nexports.default = _default;","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","'use client';\n\n/* eslint-disable no-constant-condition */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value,\n    inputValue\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    let listboxNode = listboxRef.current;\n    if (listboxRef.current.getAttribute('role') !== 'listbox') {\n      listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n    }\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    // In case of mouse clicks and touch (in mobile devices) we avoid scrolling the element and keep both behaviors same.\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse' && reason !== 'touch') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && previousProps.inputValue === inputValue && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value and inputValue haven't changed\n    // If it exists and the value and the inputValue haven't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseMove = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    if (highlightedIndexRef.current !== index) {\n      setHighlightedIndex({\n        event,\n        index,\n        reason: 'mouse'\n      });\n    }\n  };\n  const handleOptionTouchStart = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'touch'\n    });\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (!disabledProp && (inputValue === '' || !open)) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperatively so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      type: 'button',\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseMove: handleOptionMouseMove,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    expanded: popupOpen && anchorEl,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nListSubheader.muiSkipListHighlight = true;\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'expanded', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel: getOptionLabelProp,\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n  const combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n  const defaultGetOptionLabel = option => {\n    var _option$label;\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, otherListboxProps, ListboxProps, {\n          ref: combinedListboxRef,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}