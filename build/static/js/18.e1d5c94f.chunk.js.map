{"version":3,"sources":["components/auth/signUpWithFMCSA/SignUp.js","components/Atoms/form/Input.js","components/Atoms/form/Switch.js","components/Atoms/Tooltip.js","components/client/constants.js","components/Atoms/UserMenu.js","components/Atoms/form/LoadingButton.js","components/Atoms/form/Password.jsx","components/Atoms/form/Select.js","actions/component.action.js","components/Atoms/form/RadioButtons.js","components/Atoms/form/DateRangePicker.js","components/Atoms/Alert.js"],"names":["ErrorComponent","icon","getCheckStatusIcon","_jsxs","_Stack","justifyContent","gap","flex","children","_jsx","_Typography","align","sx","fontWeight","variant","SignUp","props","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","isAllowedToOperate","setIsAllowedToOperate","_useState5","_useState6","loading","setLoading","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_yield$axios$get","_yield$axios$get$data","data","_ref2$content","_ref2$content2$carrie","_ref2$content2$carrie3","wrap","_context","prev","next","preventDefault","axios","get","concat","headers","sent","status","content","carrier","allowedToOperate","equalsIgnoreCase","history","push","FMCSA_VERIFICATION_LINK","notification","t0","console","log","message","finish","stop","_x","apply","arguments","className","style","verticalAlignStyle","CompanyText","_Box","component","display","alignItems","_Grid","container","spacing","item","xs","_TextField","type","label","width","inputProps","min","value","onChange","target","name","size","disabled","textAlign","LoadingButton","isLoading","loadingText","Link","to","LOGIN_LINK","InputFieldPure","errorText","handleBlur","handleChange","hasError","InputProps","readOnly","helperText","fullWidth","rest","_objectWithoutProperties","_excluded","_FormControl","_objectSpread","error","onBlur","InputField","memo","Input","_props$errors","errors","_props$isCapitalize","classNameRoot","isCapitalize","_props$inputProps","_props$type","_props$fullWidth","_props$trimValue","trimValue","_excluded2","_e$target","capitalize","trim","_e$target2","max","_","isFunction","styled","_Switch","theme","height","padding","BootstrapTooltip","MuiTooltip","arrow","classes","popper","_ref2","_ref3","_defineProperty","tooltipClasses","color","palette","common","black","tooltip","backgroundColor","Tooltip","_ref4","title","_ref4$placement","placement","proptype","PropTypes","string","isRequired","element","oneOf","ROLE_NAMES","superAdmin","dispatch","admin","ownerOperator","getRoleNameString","role","stringToColor","i","hash","length","charCodeAt","toString","slice","stringAvatar","userName","split","bgcolor","UserMenu","_React$useState","React","_React$useState2","anchorElUser","setAnchorElUser","_getUserDetail$user","getUserDetail","user","_getUserDetail$user2","_getUserDetail$user2$","_getUserDetail$user2$2","email","_getUserDetail$user2$3","useDispatch","settings","onClick","changePasswordModal","logout","replace","onClose","callback","_IconButton","event","currentTarget","p","_Avatar","_Menu","mt","MenuListProps","minWidth","id","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","bind","px","py","flexDirection","_Divider","map","setting","_MenuItem","withRouter","_ref$variant","_ref$isLoading","isDisabled","_Button","startIcon","_CircularProgress","undefined","Password","_ref$label","_ref$errors","startAdornment","showPassword","setShowPassword","endAdornment","_InputAdornment","position","show","onMouseDown","edge","Visibility","VisibilityOff","func","Select","_ref$options","options","_ref$labelKey","labelKey","_ref$valueKey","valueKey","_ref$renderValue","renderValue","_ref$showNone","showNone","_ref$className","items","useMemo","_InputLabel","_Select","labelId","border","_FormHelperText","array","object","node","bool","showDelete","uri","afterSuccessCb","stopPropagation","store","DELETE_COMPONENT","payload","removeDelete","getState","app","deleteComponent","CHANGE_PASSWORD","RadioButtonsGroupControlled","radioTitle","_props$options","_props$labelPlacement","labelPlacement","defaultValue","_props$disabled","alldisabled","_props$displayAsRow","displayAsRow","_props$classNameGrp","classNameGrp","radios","forEach","option","_option$label","info","_option$tooltipText","tooltipText","_option$shouldDisplay","shouldDisplay","_option$disabled","_option$labelClassNam","labelClassName","_option$labelSx","labelSx","Fragment","_Tooltip","_FormControlLabel","control","_Radio","componentsProps","typography","_FormLabel","_RadioGroup","row","RadioButtonPure","RadioButtonsGroup","_ref$config","config","containerSx","parentValue","_config$options","_config$defaultValue","setValue","staticRanges","isSelected","range","startDate","startOfDay","Date","endDate","endOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","getDateString","s","moment","format","DateRangePicker","setOpen","setAnchorEl","key","selectionRange","setSelectionRange","_useState7","_useState8","setStartDate","_useState9","_useState10","setEndDate","_useState11","_useState12","textField","setTextField","togglePicker","_DateRange","_Popover","fontSize","bottom","Picker","ranges","_ranges$selection","selection","_ranges$selection2","Alert","_ref$classname","classname","_ref$inStyles","inStyles","_config$message","_config$severity","severity","_config$onClose","_config$variant","alertProps","_Collapse","in","_Alert"],"mappings":"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","file":"static/js/18.e1d5c94f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Box, Grid, Stack, TextField, Typography} from \"@mui/material\";\r\nimport CompanyText from \"../../Atoms/CompanyText\";\r\nimport axios from \"axios\";\r\nimport {FMCSA_VERIFICATION_LINK, LOGIN_LINK} from \"../../constants\";\r\nimport {notification} from \"../../../actions/alert\";\r\nimport {getCheckStatusIcon, verticalAlignStyle} from \"../../../utils/utils\";\r\nimport {LoadingButton} from \"../../Atoms\";\r\n\r\n\r\nfunction ErrorComponent () {\r\n    const icon = getCheckStatusIcon(false);\r\n    return <Stack justifyContent='center' gap={1} flex={1}>\r\n        <Typography align='center'>{icon}</Typography>\r\n        <Typography align={'center'} sx={{fontWeight: 550}}>Sorry!</Typography>\r\n        <Typography align={'center'} variant='subtitle2'>Your Authority is not active</Typography>\r\n    </Stack>\r\n}\r\n\r\nconst SignUp = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [isAllowedToOperate, setIsAllowedToOperate] = useState(true),\r\n        [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = async (e) => {\r\n        setLoading(true);\r\n        e.preventDefault();\r\n        try {\r\n            let {data = {}, status} = await axios.get(`https://mobile.fmcsa.dot.gov/qc/services/carriers/${text}?webKey=e1b9823bbb9dd36dc33b53bc0e8ed0710f1bedca`, {\r\n                headers : {\r\n                    'content-type': \"application/json\"\r\n                }\r\n            });\r\n            if(status){\r\n                // data.content.carrier.allowedToOperate = 'n'\r\n                const {content: { carrier:  {allowedToOperate = 'n'} = {}} = {}} = data || {};\r\n                if(allowedToOperate.equalsIgnoreCase('y')){\r\n                    props.history.push(FMCSA_VERIFICATION_LINK, data)\r\n                } else {\r\n                    setIsAllowedToOperate(false);\r\n                }\r\n            } else {\r\n                notification('Unable to verify, Please try later.', 'error')\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n            notification(e.message, 'error')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    return  <section className=\"login\">\r\n        <div className=\"auth-wrapper auth-inner\" style={verticalAlignStyle}>\r\n            <CompanyText />\r\n            <Box component='form' sx={{flex: 1, display: 'flex', alignItems: 'center'}} className=\"\" onSubmit={onSubmit}>\r\n                {isAllowedToOperate ? <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type={'number'}\r\n                            label='Please enter DOT#'\r\n                            sx={{width: '100%'}}\r\n                            inputProps={{min: 1}}\r\n                            value={text}\r\n                            onChange={onChange}\r\n                            name='dot'\r\n                            size='small'\r\n                            disabled={loading}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item textAlign='center' xs={12}>\r\n                        <LoadingButton type='submit' isLoading={loading} loadingText='Verifying DOT#. Please wait...' disabled={!text || loading}>\r\n                            Next\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid> : <ErrorComponent />}\r\n\r\n            </Box>\r\n            {!isAllowedToOperate && <Typography className=\"forgot-password text-center\">\r\n                <Link to={'/signup/support'}>Contact Support</Link>\r\n            </Typography>}\r\n                <p className=\"forgot-password text-center\">\r\n                   <Link to={LOGIN_LINK}>Sign In</Link>\r\n                </p>\r\n        </div>\r\n    </section>\r\n\r\n}\r\n\r\nexport default SignUp","import React, {memo} from 'react'\r\nimport _ from 'lodash';\r\nimport {FormControl, TextField} from \"@mui/material\";\r\n\r\nconst InputFieldPure = ({\r\n                            errorText,\r\n                            handleBlur,\r\n                            handleChange,\r\n                            hasError,\r\n                            className,\r\n                            name,\r\n                            value,\r\n                            InputProps,\r\n                            readOnly,\r\n                            inputProps,\r\n                            helperText,\r\n                            fullWidth,\r\n                            ...rest\r\n                        }) => {\r\n    return <FormControl component='' fullWidth={fullWidth}>\r\n        <TextField\r\n            name={name}\r\n            error={hasError}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={className}\r\n            value={value}\r\n            InputProps={{\r\n                className: '',\r\n                ...InputProps\r\n            }}\r\n            helperText={hasError ? errorText : helperText}\r\n            size='small'\r\n            inputProps={{readOnly, ...inputProps}}\r\n            {...rest}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nconst InputField = memo(InputFieldPure)\r\n\r\nconst Input = (props) => {\r\n    const {\r\n        label, name, errors = {}, onChange, value, className, classNameRoot, isCapitalize = false, inputProps = {},\r\n        type = 'text', onBlur, InputProps, readOnly, helperText, fullWidth = true, trimValue = false, ...rest\r\n    } = props;\r\n    const hasError = errors[name] || false,\r\n        errorText = errors[name]\r\n\r\n    const handleChange = (e) => {\r\n        let {name, value} = e.target;\r\n        if (isCapitalize) {\r\n            value = value.capitalize()\r\n        }\r\n        if (trimValue) {\r\n            value = value.trim();\r\n        }\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        const {name, value} = e.target\r\n        if (type === 'number') {\r\n            const {max, min} = inputProps;\r\n            if (max && value > max) {\r\n                _.isFunction(onChange) && onChange({name, value: max})\r\n            } else if (max && value < min) {\r\n                _.isFunction(onChange) && onChange({name, value: min})\r\n            }\r\n        }\r\n        if (onBlur) onBlur({name, value})\r\n    }\r\n\r\n    return (\r\n        <InputField\r\n            value={value}\r\n            name={name}\r\n            label={label}\r\n            hasError={hasError}\r\n            errorText={errorText}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            className={className}\r\n            InputProps={InputProps}\r\n            inputProps={inputProps}\r\n            readOnly={readOnly}\r\n            type={type}\r\n            helperText={helperText}\r\n            fullWidth={fullWidth}\r\n            {...rest}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport {FormControl, FormControlLabel, Switch as MuiSwitch} from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst SwitchStyled = styled(MuiSwitch)(({theme}) => ({\r\n        width: 50,\r\n        height: 27,\r\n        padding: 7,\r\n        '& .MuiSwitch-switchBase': {\r\n\r\n        },\r\n        '& .MuiSwitch-thumb': {\r\n            width: 20,\r\n            height: 20,\r\n            '&:before': {\r\n\r\n            }\r\n        },\r\n        '&.MuiSwitch-track': {\r\n\r\n        }\r\n    })\r\n)\r\n\r\nconst Switch = ({label, name, placement = 'start', value, onChange, disabled, sx, shouldDisplay = true}) => {\r\n    const handleChange = (e) => {\r\n        const {name, checked} = e.target;\r\n        if (onChange) onChange({name, value: checked});\r\n    }\r\n\r\n    return <FormControl component='fieldset' sx={{display: shouldDisplay ? 'inline' : 'none', ...sx}}>\r\n        <FormControlLabel\r\n            control={<SwitchStyled\r\n                color={'primary'}\r\n                onChange={handleChange}\r\n                checked={!!value}\r\n                name={name}\r\n            />}\r\n            label={label}\r\n            labelPlacement={placement}\r\n            disabled={disabled}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\nexport default Switch;","import MuiTooltip, { tooltipClasses } from '@mui/material/Tooltip';\r\nimport {styled} from \"@mui/material/styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BootstrapTooltip = styled(({ className, ...props }) => (\r\n    <MuiTooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.arrow}`]: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nexport default function Tooltip({title, children, placement=\"right\", ...props}) {\r\n    return (\r\n        <BootstrapTooltip title={title} placement={placement} {...props}>\r\n            {children}\r\n        </BootstrapTooltip>\r\n    );\r\n}\r\n\r\nTooltip.proptype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    placement: PropTypes.oneOf(['right', 'left', 'bottom', 'top'])\r\n}","const ROLE_NAMES = {\r\n    superAdmin: 'Super Admin',\r\n    dispatch: 'Dispatch',\r\n    admin: 'Admin',\r\n    ownerOperator: 'Owner Operator'\r\n}\r\n\r\nexport const getRoleNameString = function (role) {\r\n    return ROLE_NAMES[role] || role;\r\n}","import {Avatar, Box, Divider, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {Tooltip} from \"./index\";\r\nimport React, {memo} from 'react'\r\nimport {getUserDetail} from \"../../utils/utils\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {LOGIN_LINK} from \"../constants\";\r\nimport {getRoleNameString} from \"../client/constants\";\r\nimport {changePasswordModal} from \"../../actions/component.action\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    let userName = ''\r\n    if (!!name.split(' ')[0]) {\r\n        userName = (name.split(' ')[0][0])\r\n    }\r\n    if (!!name.split(' ') && name.split(' ')[1]) {\r\n        userName += (name.split(' ')[1][0]);\r\n    }\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: userName\r\n    };\r\n}\r\n\r\nconst UserMenu = ({history}) => {\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const {user: {name = '', email = '', role = ''} = {}} = getUserDetail();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = [\r\n        {title: 'Change Password', onClick: handlePasswordChange},\r\n        {title: 'Logout', onClick: onLogout},\r\n    ];\r\n\r\n    function handlePasswordChange() {\r\n        changePasswordModal(true);\r\n    }\r\n\r\n    const onOpen = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const onClose = (callback) => {\r\n        setAnchorElUser(null);\r\n        if (typeof callback === 'function') callback();\r\n    };\r\n\r\n    function onLogout() {\r\n        dispatch(logout());\r\n        history.replace(LOGIN_LINK);\r\n    }\r\n\r\n    return <Box>\r\n        <Tooltip title=\"Open settings\" placement='bottom'>\r\n            <IconButton onClick={onOpen} sx={{p: 0}}>\r\n                <Avatar {...stringAvatar(name || '')} />\r\n            </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n            sx={{mt: '45px'}}\r\n            MenuListProps={{\r\n                sx: {\r\n                    minWidth: '8em'\r\n                }\r\n            }}\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorElUser}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(anchorElUser)}\r\n            onClose={onClose.bind(null)}\r\n        >\r\n            <Box sx={{px: 2, py: 1, display: 'flex', flexDirection: 'column'}}>\r\n                <Typography fontWeight={600}>{name || 'No Name'}</Typography>\r\n                <Typography variant='caption'>{email}</Typography>\r\n                <Typography variant='caption'>{getRoleNameString(role)}</Typography>\r\n            </Box>\r\n            <Divider/>\r\n            {settings.map((setting) => (\r\n                <MenuItem key={setting.title} onClick={onClose.bind(null, setting.onClick)}>\r\n                    <Typography textAlign=\"center\">{setting.title}</Typography>\r\n                </MenuItem>\r\n            ))}\r\n        </Menu>\r\n    </Box>\r\n}\r\n\r\nexport default withRouter(memo(UserMenu, () => true))","import { Button, CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoadingButton = ({ children, variant = 'contained', isLoading = false, loadingText, disabled, ...rest }) => {\r\n    const text = isLoading ? !!loadingText ? loadingText: children : children\r\n    const isDisabled = isLoading || disabled;\r\n    return (\r\n        <Button\r\n            disabled={isDisabled}\r\n            variant={variant}\r\n            {...rest}\r\n            startIcon={isLoading ? <CircularProgress size={20} color='inherit' /> : undefined}\r\n        >\r\n            {text}\r\n        </Button>\r\n    )\r\n}\r\n\r\nLoadingButton.propTypes = {\r\n    children: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    variant: PropTypes.oneOf(['contained', 'outlined', 'text']),\r\n    loadingText: PropTypes.string\r\n}\r\n\r\nexport default LoadingButton","import {FormControl, IconButton, InputAdornment, TextField} from '@mui/material';\r\nimport React from 'react'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Password = ({onChange, name, label = 'Password', value, errors = {}, startAdornment, ...rest}) => {\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if (onChange) onChange({name, value});\r\n    }\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                fullWidth\r\n                label={label}\r\n                value={value}\r\n                error={hasError}\r\n                helperText={hasError ? errorText : ''}\r\n                size='small'\r\n                onChange={handleChange}\r\n                name={name}\r\n                InputProps={{\r\n                    startAdornment,\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                        >\r\n                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n\r\n                }}\r\n                {...rest}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nPassword.proptype = {\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Password","import {FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useMemo} from \"react\";\r\n\r\nconst Select = ({ options = [], labelKey = 'label', valueKey = 'id', label, value, name, onChange, errors={},\r\n                    renderValue = null, showNone=false, className='' }) => {\r\n    const hasError = !!errors[name],\r\n        errorText = errors[name];\r\n    const items = useMemo(() => {\r\n        return (options || []).map(item => {\r\n            return <MenuItem value={item[valueKey]} key={item[valueKey]} disabled={!!item['disabled']}>\r\n                {item[labelKey]}\r\n            </MenuItem>\r\n        })\r\n    }, [options])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        if(onChange){\r\n            onChange({name, value});\r\n        }\r\n    }\r\n\r\n    return  <FormControl error={hasError} fullWidth size='small' className={className}>\r\n        <InputLabel id=\"demo-simple-select-error-label\">{label}</InputLabel>\r\n        <MuiSelect\r\n            name={name}\r\n            labelId=\"demo-simple-select-error-label\"\r\n            id=\"demo-simple-select-error\"\r\n            value={value}\r\n            label={label}\r\n            onChange={handleChange}\r\n            renderValue={renderValue}\r\n            sx={{\r\n                '.MuiOutlinedInput-input': {\r\n                    border: 'none !important'\r\n                }\r\n            }}\r\n        >\r\n            {showNone && <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>}\r\n            {items}\r\n        </MuiSelect>\r\n        {hasError && <FormHelperText>{errorText}</FormHelperText>}\r\n    </FormControl>\r\n}\r\n\r\nSelect.proptype = {\r\n    options: PropTypes.array.isRequired,\r\n    labelKey: PropTypes.string,\r\n    valueKey: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    renderValue: PropTypes.node,\r\n    className: PropTypes.string,\r\n    showNone: PropTypes.bool\r\n}\r\n\r\nexport default Select;","import store from \"../store\";\r\nimport {CHANGE_PASSWORD, DELETE_COMPONENT} from \"./types\";\r\n\r\n\r\nconst showDelete = ({message, uri, afterSuccessCb}) => (e) => {\r\n    e.stopPropagation();\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {open: true, message, uri, afterSuccessCb}})\r\n}\r\n\r\nconst removeDelete = () => {\r\n    const data = store.getState().app.deleteComponent;\r\n    store.dispatch({type: DELETE_COMPONENT, payload: {...data, open: false}})\r\n}\r\n\r\nconst changePasswordModal = (open) => {\r\n    store.dispatch({type: CHANGE_PASSWORD, payload: { open }})\r\n}\r\n\r\nexport {\r\n    showDelete,\r\n    removeDelete,\r\n    changePasswordModal\r\n}","import {Fragment, memo, useState} from \"react\";\r\nimport {FormControl, FormControlLabel, FormLabel, Grid, Radio, RadioGroup, Tooltip} from \"@mui/material\";\r\n\r\nconst RadioButtonsGroupControlled = (props) => {\r\n    const {\r\n        name, value, handleChange, radioTitle, options = [], labelPlacement = 'end',\r\n        className, defaultValue, disabled: alldisabled = false, displayAsRow = true, classNameGrp = ''\r\n    } = props;\r\n\r\n    let radios = []\r\n    options.forEach((option, i) => {\r\n        const {\r\n            label = '',\r\n            value,\r\n            info,\r\n            tooltipText = '',\r\n            shouldDisplay = true,\r\n            disabled = false,\r\n            labelClassName = '',\r\n            labelSx = {}\r\n        } = option;\r\n        if (shouldDisplay && shouldDisplay === 'function') {\r\n            const show = shouldDisplay(props)\r\n            if (!show) return;\r\n        }\r\n        radios.push(\r\n            <Fragment key={i}>\r\n                <Tooltip title={tooltipText} arrow>\r\n                    <FormControlLabel\r\n                        control={<Radio/>}\r\n                        label={label}\r\n                        disabled={alldisabled || disabled}\r\n                        value={value}\r\n                        labelPlacement={labelPlacement}\r\n                        className={labelClassName ? `${labelClassName} ${className}` : className}\r\n                        role='radio'\r\n                        componentsProps={{\r\n                            typography: {\r\n                                sx: labelSx\r\n                            }\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                {info && <span className='radioInfo'>{info}</span>}\r\n            </Fragment>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <FormControl component='fieldset'>\r\n            <FormLabel component='legend'>{radioTitle}</FormLabel>\r\n            <RadioGroup\r\n                aria-label={radioTitle}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n                row={displayAsRow}\r\n                defaultValue={defaultValue}\r\n                className={classNameGrp}\r\n            >\r\n                {radios}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst RadioButtonPure = memo(RadioButtonsGroupControlled)\r\n\r\nconst RadioButtonsGroup = ({config = {}, onChange, containerSx, parentValue}) => {\r\n    const {title, options = [], defaultValue = '', ...rest} = config;\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    const handleChange = (e) => {\r\n        const {target: {name, value, type} = {}} = e;\r\n        setValue(value);\r\n        if (onChange) onChange({value, name, type});\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={containerSx}>\r\n            <RadioButtonPure\r\n                handleChange={handleChange}\r\n                value={parentValue || value}\r\n                radioTitle={title}\r\n                options={options}\r\n                {...rest}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioButtonsGroup","import { DateRangePicker as Picker } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport { endOfDay, startOfDay, startOfWeek, startOfMonth, startOfQuarter, startOfYear } from 'date-fns'\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport React, { Fragment, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    InputAdornment,\r\n    IconButton,\r\n    Popover,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { DateRange } from \"@mui/icons-material\";\r\nimport './dateRangePicker.css'\r\n\r\nconst staticRanges = [\r\n    {\r\n        label: 'Today',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfDay(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Week',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfWeek(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Month',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfMonth(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Quarter',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfQuarter(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    },\r\n    {\r\n        label: 'This Year',\r\n        isSelected: () => false,\r\n        range: () => ({\r\n            startDate: startOfYear(new Date()),\r\n            endDate: endOfDay(new Date()),\r\n        })\r\n    }\r\n]\r\n\r\nconst getDateString = (s, e) => {\r\n    return moment(s).format('MM/DD/YYYY') + ' - ' + moment(e).format('MM/DD/YYYY')\r\n}\r\n\r\nconst DateRangePicker = ({ value, onChange, label, name }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const id = open && Boolean(anchorEl) ? 'transition-popper' : undefined;\r\n    const [selectionRange, setSelectionRange] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [textField, setTextField] = useState(getDateString())\r\n\r\n    function handleSelect(ranges) {\r\n        const { selection: { startDate, endDate } = {} } = ranges;\r\n        setStartDate(() => startDate)\r\n        setEndDate(() => endDate)\r\n        setTextField(getDateString(startDate, endDate))\r\n        setSelectionRange({ startDate, endDate, key: 'selection' })\r\n        if (onChange) onChange({ name, value: { startDate, endDate } })\r\n    }\r\n\r\n\r\n    const togglePicker = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                name={name}\r\n                value={textField}\r\n                label={label}\r\n                size={'small'}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            aria-label=\"toggle Date range picker\"\r\n                            onClick={togglePicker}\r\n                            edge=\"end\"\r\n                            aria-describedby={id}\r\n                        >\r\n                            <DateRange />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                }}\r\n                readOnly\r\n            />\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={togglePicker} anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    bgcolor: 'background.paper',\r\n                    '&.rdrStaticRangeLabel': { fontSize: \"14px!important\" },\r\n                    '& .rdrDayNumber span::after': {\r\n                        bottom: '1px !important'\r\n                    }\r\n                }}\r\n                >\r\n                    <Picker\r\n                        ranges={[selectionRange]}\r\n                        onChange={handleSelect}\r\n                        className={'basePicker'}\r\n                        staticRanges={staticRanges}\r\n                    />\r\n                </Box>\r\n            </Popover>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DateRangePicker","import {Collapse, Alert as MuiAlert} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Alert = ({config, classname='', inStyles = {}}) => {\r\n    const {open, message = '', severity = '', onClose = undefined, variant = 'standard'} = config;\r\n\r\n    const alertProps = {\r\n        severity: severity || undefined,\r\n        variant\r\n    }\r\n    if(typeof onClose === 'function'){\r\n        alertProps.onClose = onClose;\r\n    }\r\n\r\n    return <Collapse in={open} sx={inStyles}>\r\n        <MuiAlert className={'alertbase ' + classname} {...alertProps}>\r\n            {message}\r\n        </MuiAlert>\r\n    </Collapse>\r\n}\r\n\r\nexport default Alert;"],"sourceRoot":""}