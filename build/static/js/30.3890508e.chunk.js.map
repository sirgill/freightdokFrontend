{"version":3,"sources":["views/ownerOperator/FormModal.js","views/ownerOperator/OwnerOperator.js","components/Atoms/table/Pagination.jsx","components/layout/Spinner.js","components/Atoms/table/Table.jsx","hooks/useFetch.js"],"names":["formTemplate","firstName","lastName","phone","FormModal","props","history","match","params","id","onCloseUrl","form","setForm","React","useState","errors","setErrors","mutation","loading","useMutation","isFetching","data","useFetch","ownerOpData","updateForm","_ref2","name","value","useEffect","onBlur","_ref3","afterSubmit","_ref4","success","message","triggerCustomEvent","notification","handleClose","push","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","PaperProps","sx","width","children","DialogTitle","color","blue","textAlign","fontWeight","letterSpacing","_jsx","DialogContent","Grid","container","component","noValidate","direction","rowSpacing","p","item","xs","Input","label","onChange","disabled","required","LoadingButton","type","onClick","e","preventDefault","body","_ref","validateForm","_","isEmpty","isLoading","loadingText","OwnerOperator","path","useRouteMatch","row","setRow","setLoading","useHistory","fetchOwnerOp","axios","get","getBaseUrl","then","r","catch","err","console","log","addEvent","window","removeEvent","afterDelete","tableConfig","rowCellPadding","emptyMessage","columns","emptyState","renderer","Fragment","role","_Button","variant","stopPropagation","concat","_id","mr","showDelete","uri","afterSuccessCb","includes","EnhancedTable","config","Route","render","StyledPagination","styled","Pagination","theme","breakpoints","down","height","StyledStack","Stack","justifyContent","display","flexWrap","TablePagination","onPageChange","page","count","limit","length","setLength","Array","isArray","alignItems","Typography","fontSize","Math","ceil","size","pgNum","CircularIndeterminate","_Box","marginLeft","CircularProgress","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","isFunction","bgcolor","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","_IconButton","bind","cell","i","valueFormatter","isObject","hover","cursor","getTableCell","_ref6","onRefetch","isRefetching","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","showRefresh","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","ref","useRef","url","title","_Grid","gap","ErrorOutlineIcon","_Typography","okText","onOk","onDialogClose","content","_DialogContentText","getTableContent","_TableHead","className","backgroundColor","borderTop","_TableBody","Date","now","style","_ref$current","current","table","calculatedHeight","offsetHeight","undefined","_Stack","_Refresh","_TableContainer","_Paper","boxShadow","mb","getLoader","innerHeight","position","Spinner","_Table","el","stickyHeader","withRouter","memo","callback","arguments","options","setData","error","setError","setIsRefetching","requestCall","queryParams","serialize","requestGet","showTriggers","result","finally","refetch"],"mappings":"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","file":"static/js/30.3890508e.chunk.js","sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport _ from 'lodash';\r\nimport {blue} from \"../../components/layout/ui/Theme\";\r\nimport Grid from '@mui/material/Grid'\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {notification} from \"../../actions/alert\";\r\nimport {triggerCustomEvent} from \"../../utils/utils\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {Input, LoadingButton} from \"../../components/Atoms\";\r\n\r\nconst validateForm = ({firstName, lastName, phone}) => {\r\n    let errors = {}\r\n    if (!firstName) {\r\n        errors.firstName = 'Please provide the First Name'\r\n    }\r\n    if (!lastName) {\r\n        errors.lastName = 'Please provide the Last Name'\r\n        // return [false, 'Please provide the Last Name', 'lastName']\r\n    }\r\n    if (!phone) {\r\n        errors.phone = 'Please provide the Phone Number'\r\n    }\r\n    return errors\r\n}\r\nconst formTemplate = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n}\r\n\r\n\r\nconst FormModal = (props) => {\r\n    const {history, match: {params: {id = ''} = {}} = {}, onCloseUrl} = props;\r\n    const [form, setForm] = React.useState(formTemplate);\r\n    const [errors, setErrors] = useState(formTemplate);\r\n    const {mutation, loading} = useMutation(\"/api/ownerOperator\"),\r\n        {loading: isFetching, data} = useFetch(\"/api/ownerOperator/\" + id),\r\n        {data: ownerOpData} = data || {};\r\n\r\n    const updateForm = ({name, value}) => {\r\n        setForm({...form, [name]: value});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerOpData) {\r\n            setForm(ownerOpData);\r\n        }\r\n    }, [ownerOpData])\r\n\r\n    const onBlur = ({name, value}) => {\r\n        if (value) {\r\n            setErrors({...errors, [name]: ''});\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = {...form};\r\n        const errors = validateForm(body);\r\n        if (_.isEmpty(errors)) {\r\n            mutation(body, null, afterSubmit);\r\n        } else {\r\n            setErrors({...errors})\r\n        }\r\n    };\r\n\r\n    const afterSubmit = ({success, data}) => {\r\n        const {message} = data || {};\r\n        if (success) {\r\n            triggerCustomEvent('refreshOwnerOp');\r\n            notification(message || 'Owner operator created');\r\n            handleClose();\r\n        } else {\r\n            notification(message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        history.push(onCloseUrl);\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={false}\r\n            maxWidth={\"md\"}\r\n            open={true}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                sx: {\r\n                    width: 400\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" sx={{\r\n                color: blue,\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: 1\r\n            }}>\r\n                {id ? \"Edit\" : 'Add'} Owner Operator\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container component='form' noValidate direction='column' rowSpacing={3} p={1}>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Input\r\n                                name={\"firstName\"}\r\n                                label={\"First Name\"}\r\n                                onChange={updateForm}\r\n                                value={form.firstName || ''}\r\n                                errors={errors}\r\n                                onBlur={onBlur}\r\n                                fullWidth\r\n                                disabled={isFetching || loading}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"lastName\"}\r\n                            label={\"Last Name\"}\r\n                            onChange={updateForm}\r\n                            value={form.lastName || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"phone\"}\r\n                            label={\"Phone Number\"}\r\n                            onChange={updateForm}\r\n                            value={form.phone || ''}\r\n                            onBlur={onBlur}\r\n                            errors={errors}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            onClick={onSubmit}\r\n                            isLoading={loading || isFetching}\r\n                            loadingText={loading ? 'Updating...' : isFetching ? 'Please wait...' : null}\r\n                        >\r\n                            Update\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FormModal","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button} from \"@mui/material\";\r\nimport {Route, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport axios from \"axios\";\r\nimport {getBaseUrl} from \"../../config\";\r\nimport FormModal from \"./FormModal\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\n\r\n\r\nconst OwnerOperator = () => {\r\n  const { path } = useRouteMatch(),\r\n      [row, setRow] = useState([]),\r\n      [loading, setLoading] = useState(false),\r\n    history = useHistory();\r\n\r\n  function fetchOwnerOp() {\r\n      setLoading(true);\r\n      axios.get(getBaseUrl() + '/api/ownerOperator').then(r => {\r\n          const {data: {data = []} = {}} = r;\r\n          setRow(data);\r\n          setLoading(false);\r\n      })\r\n          .catch(err => {\r\n              console.log(err.message)\r\n              setLoading(false);\r\n          })\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetchOwnerOp();\r\n      addEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n\r\n      return () => removeEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n  }, [])\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            fetchOwnerOp()\r\n        }\r\n    }\r\n\r\n\r\n  const tableConfig = {\r\n    rowCellPadding: \"inherit\",\r\n    emptyMessage: \"No Owner Operator Found\",\r\n    columns: [\r\n      {\r\n        id: \"firstName\",\r\n        label: \"First Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"lastName\",\r\n        label: \"Last Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"role\",\r\n        label: \"Role\",\r\n        renderer: () => {\r\n          return <Fragment>Owner Operator</Fragment>;\r\n        },\r\n      },\r\n\r\n      {\r\n        id: \"update\",\r\n        renderer: ({ row, role }) => {\r\n          return (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  history.push(path + `/edit/${row._id}`);\r\n                }}\r\n                sx={{mr: 1}}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color={'error'}\r\n                  onClick={showDelete({\r\n                      uri: \"/api/ownerOperator/\"+ row._id,\r\n                      message: 'Are you sure you want to delete this Owner Operator?',\r\n                      afterSuccessCb: afterDelete\r\n                  })}\r\n                  disabled={['ownerOperator', 'dispatch',].includes(role)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Fragment>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <EnhancedTable\r\n        config={tableConfig}\r\n        data={row}\r\n        loading={loading}\r\n      />\r\n        {/*<Button*/}\r\n        {/*    variant='contained'*/}\r\n        {/*    component={Link}*/}\r\n        {/*    to={path + '/add'}*/}\r\n        {/*    className={'addNewOwnerOp'}*/}\r\n        {/*    sx={{position: 'absolute', right: 10}}*/}\r\n        {/*>*/}\r\n        {/*    Add Owner Operator*/}\r\n        {/*</Button>*/}\r\n      <Route path={path + \"/add\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n      <Route path={path + \"/edit/:id\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnerOperator;\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 0, count = 0, limit = 1}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (onPageChange) {\r\n            onPageChange(e, pgNum)\r\n        }\r\n    }\r\n\r\n    if (length < 10 && count < 10) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            {count > 10 &&\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {data.length} of {count} entries</Typography>}\r\n            {data.length !== count && <StyledPagination\r\n                count={Math.ceil(count / limit)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                page={page + 1}\r\n                size=\"medium\"\r\n                onChange={onChange}\r\n            />}\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                <DeleteIcon color={'error'}/>\r\n            </IconButton>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.isObject(row) ? _.get(row, id, emptyState) : (row[id] || emptyState);\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length;\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    key={Date.now()}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        {showRefresh && <Stack alignItems='flex-end'>\r\n            <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>\r\n        </Stack>}\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 64px)' : 'auto'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit}/>}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setData(null);\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;"],"sourceRoot":""}