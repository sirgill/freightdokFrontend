{"version":3,"sources":["views/ownerOperator/FormModal.js","views/ownerOperator/OwnerOperator.js","hooks/useMutation.js","components/Atoms/Dialog.js","components/layout/Spinner.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","../node_modules/@mui/icons-material/Add.js","hooks/useFetchWithSearchPagination.js","hooks/useLazyFetch.js"],"names":["formTemplate","firstName","lastName","phone","FormModal","props","history","match","params","id","onCloseUrl","form","setForm","React","useState","errors","setErrors","mutation","loading","useMutation","isFetching","data","useLazyFetch","lazyFetchCondition","ownerOpData","updateForm","_ref2","name","value","useEffect","onBlur","_ref3","afterSubmit","_ref4","success","message","triggerCustomEvent","notification","handleClose","push","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","PaperProps","sx","width","children","DialogTitle","color","blue","textAlign","fontWeight","letterSpacing","_jsx","DialogContent","Grid","container","component","noValidate","direction","rowSpacing","p","item","xs","Input","label","onChange","disabled","required","email","LoadingButton","type","onClick","e","preventDefault","body","_ref","isEmailValid","validateForm","_","isEmpty","isLoading","loadingText","OwnerOperator","path","useRouteMatch","edit","delete","canDelete","add","UserSettings","getUserPermissionsByDashboardId","queryData","page","isPaginationLoading","limit","onLimitChange","onPageChange","refetch","isRefetching","useFetchWithSearchPagination","totalCount","useHistory","fetchOwnerOp","useCallback","addEvent","window","removeEvent","afterDelete","tableConfig","rowCellPadding","showRefresh","emptyMessage","count","onPageSizeChange","columns","emptyState","renderer","Fragment","row","_Button","variant","stopPropagation","concat","_id","mr","showDelete","uri","afterSuccessCb","Actions","Link","to","startIcon","AddIcon","_Fragment","EnhancedTable","config","onRefetch","actions","Route","render","url","callback","arguments","length","undefined","showTriggers","options","setLoading","async","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","toLowerCase","then","res","catch","err","finally","Transition","ref","Slide","preventBackdropClose","className","title","onOk","okText","content","onCancel","equalsIgnoreCase","MuiDialog","TransitionComponent","DialogActions","Button","CircularIndeterminate","_Box","height","display","justifyContent","alignItems","marginLeft","CircularProgress","StyledPagination","styled","Pagination","theme","breakpoints","down","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","Typography","fontSize","Select","Math","ceil","size","pgNum","Cell","_TableCell","padding","DeleteIcon","_Delete","Headers","role","headerCellSx","hasDelete","headers","useMemo","map","column","index","visible","isFunction","bgcolor","_TableRow","TableData","_ref5","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","Tooltip","placement","_IconButton","bind","cell","i","valueFormatter","get","hover","cursor","getTableCell","_ref6","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","getUserDetail","user","indexOf","useRef","isValidElement","_Grid","gap","ErrorOutlineIcon","_Typography","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","borderTop","_TableBody","style","_ref$current","current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","_Stack","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","position","getLoader","innerHeight","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","debounceTime","setData","setPage","setLimit","searchQuery","setSearchQuery","setIsPaginationLoading","isSearching","setIsSearching","setIsRefetching","isInitialLoad","fetchData","debouncedSearch","debounce","cancel","requestGet","console","error","handleSearch","showPagination","pageOptions","setPageOptions","setError","requestCall","object","result","lazyFetch"],"mappings":"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","file":"static/js/26.0a1fe7e6.chunk.js","sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport _ from 'lodash';\r\nimport { blue } from \"../../components/layout/ui/Theme\";\r\nimport Grid from '@mui/material/Grid'\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { notification } from \"../../actions/alert\";\r\nimport { isEmailValid, triggerCustomEvent } from \"../../utils/utils\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport { Input, LoadingButton } from \"../../components/Atoms\";\r\nimport useLazyFetch from \"../../hooks/useLazyFetch\";\r\n\r\nconst validateForm = ({ firstName, lastName, phone, email }) => {\r\n    let errors = {}\r\n    if (!firstName) {\r\n        errors.firstName = 'Please provide the First Name'\r\n    }\r\n    if (!lastName) {\r\n        errors.lastName = 'Please provide the Last Name'\r\n        // return [false, 'Please provide the Last Name', 'lastName']\r\n    }\r\n    if (!phone) {\r\n        errors.phone = 'Please provide the Phone Number'\r\n    }\r\n    if (!email) {\r\n        errors.email = 'Please provide the Email'\r\n    }\r\n    if (!isEmailValid(email)) {\r\n        errors.email = 'Invalid Email'\r\n    }\r\n    return errors\r\n}\r\nconst formTemplate = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n}\r\n\r\n\r\nconst FormModal = (props) => {\r\n    const { history, match: { params: { id = '' } = {} } = {}, onCloseUrl } = props;\r\n    const [form, setForm] = React.useState(formTemplate);\r\n    const [errors, setErrors] = useState(formTemplate);\r\n    const { mutation, loading } = useMutation(\"/api/ownerOperator\"),\r\n        { loading: isFetching, data } = useLazyFetch(\"/api/ownerOperator/\" + id, { lazyFetchCondition: !!id }),\r\n        { data: ownerOpData } = data || {};\r\n\r\n    const updateForm = ({ name, value }) => {\r\n        setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ownerOpData) {\r\n            setForm(ownerOpData);\r\n        }\r\n    }, [ownerOpData])\r\n\r\n    const onBlur = ({ name, value }) => {\r\n        if (value) {\r\n            setErrors({ ...errors, [name]: '' });\r\n        }\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const body = { ...form };\r\n        const errors = validateForm(body);\r\n        if (_.isEmpty(errors)) {\r\n            mutation(body, null, afterSubmit);\r\n        } else {\r\n            setErrors({ ...errors })\r\n        }\r\n    };\r\n\r\n    const afterSubmit = ({ success, data }) => {\r\n        const { message } = data || {};\r\n        if (success) {\r\n            triggerCustomEvent('refreshOwnerOp');\r\n            notification(message || 'Owner operator created');\r\n            handleClose();\r\n        } else {\r\n            notification(message, 'error');\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        history.push(onCloseUrl);\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={false}\r\n            maxWidth={\"md\"}\r\n            open={true}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            PaperProps={{\r\n                sx: {\r\n                    width: 400\r\n                }\r\n            }}\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\" sx={{\r\n                color: blue,\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: 1\r\n            }}>\r\n                {id ? \"Edit\" : 'Add'} Owner Operator\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container component='form' noValidate direction='column' rowSpacing={3} p={1}>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Input\r\n                                name={\"firstName\"}\r\n                                label={\"First Name\"}\r\n                                onChange={updateForm}\r\n                                value={form.firstName || ''}\r\n                                errors={errors}\r\n                                onBlur={onBlur}\r\n                                fullWidth\r\n                                disabled={isFetching || loading}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"lastName\"}\r\n                            label={\"Last Name\"}\r\n                            onChange={updateForm}\r\n                            value={form.lastName || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"email\"}\r\n                            label={\"Email\"}\r\n                            onChange={updateForm}\r\n                            value={form.email || ''}\r\n                            errors={errors}\r\n                            onBlur={onBlur}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Input\r\n                            name={\"phone\"}\r\n                            label={\"Phone Number\"}\r\n                            onChange={updateForm}\r\n                            value={form.phone || ''}\r\n                            onBlur={onBlur}\r\n                            errors={errors}\r\n                            fullWidth\r\n                            disabled={isFetching || loading}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            onClick={onSubmit}\r\n                            isLoading={loading || isFetching}\r\n                            loadingText={loading ? 'Updating...' : isFetching ? 'Please wait...' : null}\r\n                        >\r\n                            {id ? 'Update' : 'Add'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default FormModal","import React, {Fragment, useCallback, useEffect} from \"react\";\r\nimport {Button} from \"@mui/material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {Link, Route, useHistory, useRouteMatch} from \"react-router-dom\";\r\nimport EnhancedTable from \"../../components/Atoms/table/Table\";\r\nimport FormModal from \"./FormModal\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {showDelete} from \"../../actions/component.action\";\r\nimport {UserSettings} from \"../../components/Atoms/client\";\r\nimport useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\n\r\n\r\nconst OwnerOperator = () => {\r\n  const { path } = useRouteMatch(),\r\n        {edit, delete: canDelete, add} = UserSettings.getUserPermissionsByDashboardId('ownerOperator'),\r\n        {data: queryData, loading, page, isPaginationLoading, limit, onLimitChange, onPageChange, refetch, isRefetching} = useFetchWithSearchPagination('/api/ownerOperator'),\r\n        { data, totalCount} = queryData || {},\r\n        history = useHistory();\r\n\r\n  const fetchOwnerOp = useCallback(() => {\r\n        refetch();\r\n    }, [refetch]);\r\n\r\n  useEffect(() => {\r\n      addEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n\r\n      return () => removeEvent(window, 'refreshOwnerOp', fetchOwnerOp)\r\n  }, [fetchOwnerOp])\r\n\r\n    const afterDelete = ({success}) => {\r\n        if(success) {\r\n            fetchOwnerOp()\r\n        }\r\n    }\r\n\r\n\r\n  const tableConfig = {\r\n    rowCellPadding: \"normal\",\r\n    showRefresh: true,\r\n    emptyMessage: \"No Owner Operator Found\",\r\n    count: totalCount,\r\n      page,\r\n      limit,\r\n      onPageSizeChange: onLimitChange,\r\n      onPageChange,\r\n    columns: [\r\n      {\r\n        id: \"firstName\",\r\n        label: \"First Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"lastName\",\r\n        label: \"Last Name\",\r\n        emptyState: '--',\r\n      },\r\n      {\r\n        id: \"role\",\r\n        label: \"Role\",\r\n        renderer: () => {\r\n          return <Fragment>Owner Operator</Fragment>;\r\n        },\r\n      },\r\n        {\r\n            id: 'email',\r\n            label: 'Email'\r\n        },\r\n      {\r\n        id: \"update\",\r\n        renderer: ({ row }) => {\r\n          return (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  history.push(path + `/edit/${row._id}`);\r\n                }}\r\n                sx={{mr: 1}}\r\n                disabled={!edit}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color={'error'}\r\n                  onClick={showDelete({\r\n                      uri: \"/api/ownerOperator/\"+ row._id,\r\n                      message: 'Are you sure you want to delete this Owner Operator?',\r\n                      afterSuccessCb: afterDelete\r\n                  })}\r\n                  disabled={!canDelete}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Fragment>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const Actions = <Button\r\n      variant='contained'\r\n      component={Link}\r\n      to={path + '/add'}\r\n      disabled={!add}\r\n      startIcon={<AddIcon />}\r\n  >\r\n      Add\r\n  </Button>\r\n\r\n  return (\r\n    <>\r\n      <EnhancedTable\r\n        config={tableConfig}\r\n        data={data}\r\n        loading={loading}\r\n        isRefetching={isRefetching}\r\n        onRefetch={refetch}\r\n        isPaginationLoading={isPaginationLoading}\r\n        actions={Actions}\r\n      />\r\n\r\n      <Route path={path + \"/add\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n      <Route path={path + \"/edit/:id\"} render={(props) => <FormModal {...props} onCloseUrl={path} />} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OwnerOperator;\r\n","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {Box} from \"@mui/material\";\r\n\r\n\r\nexport default function CircularIndeterminate(props) {\r\n  return (\r\n    <Box sx={{\r\n      height: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      '& > * + *': {\r\n        marginLeft: 2,\r\n      },\r\n    }}>\r\n      <CircularProgress {...props}/>\r\n    </Box>\r\n  );\r\n}\r\n","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onPageSizeChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onPageSizeChange === 'function'){\r\n            onPageSizeChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role}) {\r\n    const {headerCellSx = {}, hasDelete} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>{label}</Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb\r\n    } = config;\r\n    const {role} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false}) => {\r\n    data = data || [];\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} />\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onPageSizeChange={onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport _ from 'lodash'\r\nimport {requestGet} from \"../utils/request\";\r\n\r\nconst useFetchWithSearchPagination = (url, debounceTime = 500) => {\r\n    const [data, setData] = useState([]),\r\n        [loading, setLoading] = useState(false),\r\n        [page, setPage] = useState(1),\r\n        [limit, setLimit] = useState(100),\r\n        [searchQuery, setSearchQuery] = useState(''),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false),\r\n        [isSearching, setIsSearching] = useState(false),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        isInitialLoad = useRef(true);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url, page, limit, ]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const debouncedSearch = _.debounce(() => {\r\n            if (!isInitialLoad.current) {\r\n                setIsSearching(true);\r\n                fetchData();\r\n            }\r\n        }, debounceTime);\r\n\r\n        debouncedSearch();\r\n\r\n        return debouncedSearch.cancel;\r\n    }, [searchQuery]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        requestGet({uri: `${url}?page=${page}&search=${searchQuery}&limit=${limit}`})\r\n            .then(res => {\r\n                const {data} = res;\r\n                setData(data);\r\n            })\r\n            .catch(e => {\r\n                console.error(e.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsPaginationLoading(false);\r\n                setIsSearching(false);\r\n                setIsRefetching(false);\r\n                if (isInitialLoad.current) {\r\n                    isInitialLoad.current = false;\r\n                }\r\n            })\r\n    }, [url, page, limit, searchQuery, isRefetching]);\r\n\r\n    const onPageChange = (e, pgNum) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(pgNum);\r\n    }\r\n\r\n    const handleSearch = ({value}) => {\r\n        setSearchQuery(value);\r\n        setPage(1);\r\n    };\r\n\r\n    const onLimitChange = ({value}) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n        setLimit(value);\r\n    }\r\n\r\n    const refetch = () => {\r\n        setPage(1);\r\n        setIsRefetching(true);\r\n        fetchData();\r\n    };\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        handleSearch,\r\n        refetch,\r\n        onLimitChange,\r\n        searchQuery,\r\n        isPaginationLoading,\r\n        isSearching,\r\n        isRefetching\r\n    };\r\n};\r\n\r\nexport default useFetchWithSearchPagination","import React, { useEffect, useState } from 'react'\r\nimport { requestGet } from '../utils/request';\r\nimport { serialize } from '../utils/utils';\r\n\r\nconst useLazyFetch = (url, options = {}, callback = null) => {\r\n    const { showPagination = true, page, limit, lazyFetchCondition } = options,\r\n        [data, setData] = useState(undefined);\r\n    const [pageOptions, setPageOptions] = useState({ page: (page || 1), limit: (limit || 10) });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false)\r\n\r\n    function requestCall(object) {\r\n        const { page, limit } = object || {};\r\n        let uri = url;\r\n        if (showPagination) {\r\n            if (page && limit) {\r\n                setPageOptions({ page, limit })\r\n            }\r\n            uri = `${uri}?page=${page || pageOptions.page}&limit=${limit || pageOptions.limit}`\r\n        }\r\n        if (options.queryParams) {\r\n            uri = `${uri}&${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({ uri, callback, showTriggers: false })\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n                setIsPaginationLoading(false);\r\n            })\r\n    }\r\n\r\n    const onLimitChange = ({ value }) => {\r\n        // setPageOptions({...pageOptions, limit: value});\r\n        setIsPaginationLoading(true);\r\n        requestCall({ limit: value, page: pageOptions.page })\r\n    }\r\n\r\n    const onPageChange = (e, pgNum) => {\r\n        // setPageOptions({...pageOptions, page: pgNum});\r\n        setIsPaginationLoading(true);\r\n        requestCall({ page: pgNum, limit: pageOptions.limit })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall({ page, limit: pageOptions.limit });\r\n    }\r\n\r\n\r\n    const lazyFetch = () => {\r\n        setLoading(true)\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const callCondition = typeof lazyFetchCondition === 'function' ? lazyFetchCondition() : lazyFetchCondition\r\n        if (callCondition) {\r\n            lazyFetch();\r\n        }\r\n    }, [])\r\n\r\n    return {\r\n        lazyFetch, data, loading, error, refetch: onRefetch, isRefetching,\r\n        onLimitChange, onPageChange, isPaginationLoading, ...pageOptions\r\n    }\r\n}\r\n\r\nexport default useLazyFetch"],"sourceRoot":""}