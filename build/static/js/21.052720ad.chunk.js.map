{"version":3,"sources":["components/invoices/InvoiceService.js","components/invoices/NewInvoice.js","components/invoices/InvoicesList.js","hooks/useMutation.js","components/Atoms/Modal.js","components/Atoms/Dialog.js","components/Atoms/table/Pagination.jsx","components/Atoms/table/Table.jsx","components/Atoms/form/InputField.js","hooks/useFetch.js","hooks/useFetchWithSearchPagination.js","components/invoices/MoveToMyLoads.js"],"names":["LOOKUP_DATA","label","cost","InvoiceService","_ref","serviceName","amount","price","quantity","description","index","deleteService","onChangeService","handleChange","e","name","target","value","_jsx","Fragment","children","_jsxs","className","InputField","onChange","placeholder","parseInt","onBlur","type","concat","parseFloat","toFixed","_IconButton","onClick","bind","DeleteOutlineIcon","color","LookUp","_ref2","handleClose","anchorEl","onAddNewService","list","setList","useState","handleClick","selected","_Popover","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_Stack","sx","p","width","autoFocus","val","toLowerCase","filtered","filter","item","includes","_List","map","data","_ListItemButton","_ListItem","disablePadding","secondaryAction","_ListItemText","primary","_Button","startIcon","AddCircleOutlineIcon","InvoiceServiceWrapper","_ref3","services","setAnchorEl","React","servicesComp","useMemo","s","event","currentTarget","Title","variant","_Typography","fontWeight","Temporray","forwardRef","props","ref","pdf","setNotes","brokerage","loadNumber","getTotal","addService","notes","rateConfirmation","proofDelivery","accessorials","reactToPrintContent","reactToPrintTrigger","docFileViewer","orgName","getUserDetail","user","_Grid","container","direction","display","media","xs","justifyContent","flexGrow","spacing","textAlign","_Divider","borderBottomWidth","borderColor","blue","height","alignItems","gap","htmlFor","background","borderRadius","cursor","accept","style","getCheckStatusIcon","length","ReactToPrint","content","documentTitle","removeAfterPrint","trigger","pageStyle","onPrintError","console","error","onBeforePrint","Promise","resolve","setTimeout","log","fonts","family","source","DialogComponent","transition","saveServices","useRef","pickup","drop","rate","bucketFiles","PdfViewer","pdfUrl","pdfFileName","pages","setPages","useEffect","script","document","createElement","src","async","onload","blob","fetch","then","response","headers","get","equalsIgnoreCase","reader","FileReader","result","pdfjsLib","window","GlobalWorkerOptions","workerSrc","version","getDocument","promise","pdfDocument","numPages","promises","i","push","getPage","all","pagePromises","page","viewport","getViewport","scale","canvas","context","getContext","renderContext","canvasContext","render","toDataURL","pageImages","readAsArrayBuffer","body","appendChild","_Fragment","position","minHeight","alt","_Box","objectFit","doc","fileLocation","fileName","useCallback","current","disabled","_Dialog","PaperProps","TransitionComponent","maxWidth","_DialogContent","Invoice","_ref4","match","params","setOpen","setPdf","setServices","mutation","loading","useMutation","useFetch","GET_LOAD_HISTORY","Transition","history","useHistory","_Zoom","onExited","goBack","total","reduce","acc","service","Intl","NumberFormat","currency","format","obj","_ref5","row","clone","splice","_ref6","success","modalConfig","title","InvoicesList","edit","UserSettings","getUserPermissionsByDashboardId","path","useRouteMatch","isLoadingPdf","_data","limit","onPageChange","onLimitChange","refetch","isPaginationLoading","isRefetching","useFetchWithSearchPagination","checkboxes","setCheckboxes","loads","config","rowCellPadding","headerCellSx","pt","pb","emptyMessage","showRefresh","count","arguments","resetCheckboxes","showCheckbox","columns","renderer","pickupCity","pickupState","pickupDate","moment","dropCity","dropState","dropDate","firstName","lastName","valueFormatter","join","emptyState","getDollarPrefixedPrice","Date","toLocaleString","visible","_ref7","Tooltip","placement","component","Link","to","_id","DescriptionIcon","invoiceUrl","preventDefault","_PictureAsPdf","_ref8","ReplayIcon","actions","LoadingButton","isLoading","loadingText","onSendToTriumph","loadIds","_ref9","forEach","invoice","notification","message","invoiceCreated","EnhancedTable","onRefetch","onRefresh","onCheckboxChange","key","indexOf","newCheckboxes","toSpliced","checkboxKey","Route","MoveToMyLoads","onCloseUrl","getInvoices","exact","url","callback","undefined","showTriggers","options","setLoading","afterSubmit","uri","queryParams","serialize","asyncApiCall","fn","requestPut","requestDelete","requestPatch","requestPost","getRequestCb","res","catch","err","finally","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","showClose","titleStyles","other","DialogTitle","m","IconButton","left","top","palette","grey","CloseIcon","Modal","closeCallback","closeUrl","paperProps","preventBackdropClick","useTheme","fullScreen","_useMediaQuery","breakpoints","down","addEvent","removeEvent","ENHANCED_DASHBOARD","DialogContent","dividers","borderTop","Slide","preventBackdropClose","onOk","okText","onCancel","MuiDialog","DialogActions","Button","StyledPagination","Pagination","StyledStack","Stack","flexWrap","TablePagination","setLength","Array","isArray","Typography","fontSize","Select","Math","ceil","size","pgNum","Cell","_TableCell","DeleteIcon","_Delete","Headers","role","handleRequestSort","hasSort","hasDelete","sortField","sortOrder","column","sort","_","isFunction","bgcolor","_TableSortLabel","active","unshift","_TableRow","TableData","handleRowClick","handleDelete","rest","dataKey","rowIndex","hasDeletePermission","onRowClick","rowStyleCb","rowStyle","deleteCell","scope","cell","cellPadding","Error","checked","_Checkbox","hover","getTableCell","tableState","setTableState","dialog","setDialog","hasOnClickUrl","onPageSizeChange","onRowClickDataCallback","onDelete","deleteMessage","deletePermissions","containerHeight","handleSortChange","Actions","isValidElement","property","field","order","stopPropagation","ErrorOutlineIcon","onDialogClose","_DialogContentText","getTableContent","_TableHead","backgroundColor","_TableBody","_ref$current","table","calculatedHeight","offsetHeight","_ref$current2","tableContainer","scrollTo","py","_Refresh","_TableContainer","_Paper","el","boxShadow","mb","getLoader","innerHeight","Spinner","_Table","stickyHeader","_Backdrop","zIndex","drawer","withRouter","memo","InputPure","labelKey","valueKey","onChangeSelect","showFirstBlank","cloneDeep","opts","opt","Input","multiple","labelStyle","formGrpStyle","errorText","FormGroup","marginRight","values","l","setData","setError","setIsRefetching","requestCall","requestGet","orderBy","debounceTime","setPage","setLimit","searchQuery","setSearchQuery","setIsPaginationLoading","isSearching","setIsSearching","setSortField","setSortOrder","isInitialLoad","fetchData","debouncedSearch","debounce","cancel","handleSearch","Container","up","getLoadStatuses","setValue","statuses","LOAD_STATUSES","status","onSubmit","replace","showNone","fullWidth"],"mappings":"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","file":"static/js/21.052720ad.chunk.js","sourcesContent":["import React, { useMemo, Fragment, useState } from \"react\";\r\nimport './styles.css'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport { Button, IconButton, List, Popover, Stack, ListItem, ListItemText, ListItemButton } from \"@mui/material\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst LOOKUP_DATA = [\r\n    { label: \"Detention\", cost: '67' },\r\n    { label: \"Loads\", cost: '1000' },\r\n    { label: \"Lumper\", cost: '786' },\r\n]\r\n\r\nconst InvoiceService = ({ serviceName, amount, price, quantity, description, index, deleteService, onChangeService }) => {\r\n    const handleChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        if (onChangeService) {\r\n            onChangeService(index, { name, value })\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (e) => {\r\n        const name = e.target.name\r\n        const value = parseInt(e.target.value)\r\n        onChangeService(index, { name, value })\r\n    }\r\n\r\n    const onBlur = (name, value) => {\r\n        if (+value < 0) {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value: 1 })\r\n                onChangeService(index, { name: 'amount', value: parseInt(price) });\r\n\r\n            }\r\n        } else {\r\n            if (onChangeService) {\r\n                onChangeService(index, { name, value });\r\n                onChangeService(index, { name: 'amount', value: parseInt(price) * +value });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <tr className='invoiceServiceRow'>\r\n                <td>{serviceName}</td>\r\n                <td><InputField name={'description'} value={description} onChange={handleChange} className='serviceInputField'\r\n                    placeholder={'Enter item description'} /></td>\r\n                <td><InputField name={'quantity'} onChange={handleQuantity} onBlur={onBlur} className='serviceInputField' type='number' value={quantity} /></td>\r\n                <td><InputField name={'price'} onChange={handleChange} value={price} className='serviceInputField' /></td>\r\n                <td>{amount ? `$${parseFloat(amount).toFixed(2)}` : '$0.00'}</td>\r\n                <td><IconButton onClick={deleteService.bind(null, index)} className='deleteService'>\r\n                    <DeleteOutlineIcon color={'error'} />\r\n                </IconButton></td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst LookUp = ({ handleClose, anchorEl, onAddNewService }) => {\r\n    const [list, setList] = useState(LOOKUP_DATA)\r\n    const onChange = (e) => {\r\n        const val = e.target.value.toLowerCase();\r\n        if (val) {\r\n            const filtered = list.filter(item => item.label.toLowerCase().includes(val));\r\n            setList(filtered)\r\n        } else setList(LOOKUP_DATA)\r\n    }\r\n\r\n    const handleClick = (selected) => {\r\n        if (onAddNewService) {\r\n            onAddNewService(selected)\r\n        }\r\n        handleClose()\r\n    }\r\n\r\n    return <Popover\r\n        id={'jugal'}\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        <Stack sx={{ p: 2, width: 500 }}>\r\n            <Stack>\r\n                <InputField name={'search'} autoFocus placeholder='Type on item name' onChange={onChange} />\r\n            </Stack>\r\n            <Stack>\r\n                <List>\r\n                    {list.map(data => {\r\n                        return <ListItemButton key={data.label} onClick={handleClick.bind(null, data)}>\r\n                            <ListItem disablePadding secondaryAction={<span\r\n                                className={'listButtonPickerCost'}>{\"$\" + data.cost}</span>}>\r\n                                <ListItemText primary={data.label} />\r\n                            </ListItem>\r\n                        </ListItemButton>\r\n                    })}\r\n                </List>\r\n            </Stack>\r\n            <Stack>\r\n                <Button startIcon={<AddCircleOutlineIcon />}>\r\n                    Create a new Item\r\n                </Button>\r\n            </Stack>\r\n        </Stack>\r\n    </Popover>\r\n}\r\n\r\nconst InvoiceServiceWrapper = ({ services, onAddNewService, onChangeService, deleteService }) => {\r\n    // console.log('services', services)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const servicesComp = useMemo(() => {\r\n        return services.map((s, index) => {\r\n            return <InvoiceService key={index} {...s} index={index} onChangeService={onChangeService}\r\n                deleteService={deleteService} />\r\n        })\r\n    }, [services])\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <table className='invoiceServiceTable'>\r\n                <tr className='tableHeader'>\r\n                    <th>Services</th>\r\n                    <th />\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Amount</th>\r\n                    <th />\r\n                </tr>\r\n                {servicesComp}\r\n                <tr className='addNewItemRow'>\r\n                    <td className='addNewItem' onClick={handleClick}>\r\n                        <Button sx={{ width: 135 }} startIcon={<AddCircleOutlineIcon />}>\r\n                            Add new item\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <LookUp handleClose={handleClose} anchorEl={anchorEl} onAddNewService={onAddNewService} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InvoiceServiceWrapper;","// import jsPDF from \"jspdf\";\r\n// import  'jspdf-autotable'\r\nimport {Box, Button, Dialog, DialogContent, Divider, Grid, IconButton, Stack, Typography, Zoom,} from \"@mui/material\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {blue} from \"../layout/ui/Theme\";\r\nimport InputField from \"../Atoms/form/InputField\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport \"../../App.css\";\r\nimport \"./styles.css\";\r\nimport InvoiceServiceWrapper from \"./InvoiceService\";\r\nimport {getCheckStatusIcon, getUserDetail} from \"../../utils/utils\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {GET_LOAD_HISTORY} from \"../../config/requestEndpoints\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\n\r\n\r\nconst Title = ({ name, sx = {}, variant = \"body1\", children }) => {\r\n    return (\r\n        <Typography sx={{ fontWeight: 700, ...sx }} variant={variant}>\r\n            {children || name}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst Temporray = React.forwardRef((props, ref) => {\r\n    const {pdf,\r\n        setNotes,\r\n        brokerage,\r\n        loadNumber,\r\n        getTotal,\r\n        onChangeService,\r\n        services,\r\n        addService,\r\n        deleteService,\r\n        notes,\r\n        rateConfirmation,\r\n        proofDelivery,\r\n        accessorials,\r\n        reactToPrintContent,\r\n        reactToPrintTrigger,\r\n        docFileViewer} = props;\r\n    const {orgName} = getUserDetail().user;\r\n    return <div ref={ref} className=\"printArea\">\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            sx={{ display: pdf ? \"inline-flex\" : \"inline-flex\" }}\r\n        >\r\n            <style type=\"text/css\" media=\"print\">{\"\\\r\n               @page {\\ size: portrait;\\ }\\\r\n          \"}</style>\r\n            <Grid item xs={12} sx={{ p: 3 }}>\r\n                <Grid container justifyContent={\"space-between\"}>\r\n                    <Grid item sx={{ flexGrow: 1 }}>\r\n                        <Stack spacing={1}>\r\n                            <Stack>\r\n                                <Typography sx={{ textAlign: \"left\" }} variant=\"h5\">\r\n                                    {orgName}\r\n                                </Typography>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack>\r\n                            <Stack>\r\n                                <Typography variant=\"h5\" sx={{ textAlign: \"right\" }}>\r\n                                    Invoice\r\n                                </Typography>\r\n                            </Stack>\r\n                            <Stack className='notesStack'>\r\n                                <InputField label=\"Notes\" type=\"textarea\" onChange={(e) => setNotes(e.target.value)} />\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n            <Grid xs={12} item>\r\n                <Grid container justifyContent={\"space-between\"}>\r\n                    <Grid item>\r\n                        <Stack spacing={1} sx={{ p: 3 }}>\r\n                            <Stack>\r\n                                <Typography>Bill To:</Typography>\r\n                            </Stack>\r\n                            <Stack>\r\n                                <Title sx={{ fontWeight: 700 }}>{brokerage}</Title>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack justifyContent={\"space-between\"} sx={{ height: \"100%\" }}>\r\n                            <Stack direction={\"row\"} alignItems={\"center\"} spacing={2} p={3}>\r\n                                <Title>Load Number: </Title>\r\n                                <Title>{loadNumber}</Title>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider sx={{ borderBottomWidth: \"thin\", borderColor: blue }} />\r\n\r\n            <Grid item sx={{ p: 2 }} display={\"inherit\"} direction=\"column\">\r\n                <Stack sx={{ textAlign: \"right\" }}>\r\n                    <Title>Total: {getTotal() || '- -'}</Title>\r\n                </Stack>\r\n                <Grid container alignItems={\"end\"} justifyContent={\"space-between\"}>\r\n                    <Grid item xs={12} className='invoiceServiceWrapperGrid'>\r\n                        <InvoiceServiceWrapper\r\n                            onChangeService={onChangeService} services={services} onAddNewService={addService}\r\n                            deleteService={deleteService}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={3} item>\r\n                        <Typography className='notesPrintBlock'>Notes: {notes || 'N.A'}</Typography>\r\n                    </Grid>\r\n                    <Grid xs={5} item>\r\n                        <Stack justifyContent={\"center\"} gap={\"10px\"} className='stack_Uploaders'>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'rateCon'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>\r\n                                        Rate Con\r\n                                    </Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'rateCon'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!rateConfirmation.length)}\r\n                                </div>\r\n                            </Stack>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'pod'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>\r\n                                        Proof Of Delivery\r\n                                    </Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'pod'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!proofDelivery.length)}\r\n                                </div>\r\n                            </Stack>\r\n                            <Stack direction={\"row\"} justifyContent={'center'} gap={'10px'}>\r\n                                <label htmlFor={'accessorials'}>\r\n                                    <Typography textAlign={'center'} sx={{\r\n                                        width: 150,\r\n                                        background: 'rgb(0, 123, 255)',\r\n                                        color: '#FFF',\r\n                                        borderRadius: '4px',\r\n                                        cursor: 'pointer'\r\n                                    }}>Accessorials</Typography>\r\n                                    <input type={'file'} accept={'pdf'} id={'accessorials'} style={{ display: 'none' }} />\r\n                                </label>\r\n                                <div>\r\n                                    {getCheckStatusIcon(!!accessorials.length)}\r\n                                </div>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                    <Grid xs={3} item display={\"flex\"} justifyContent={\"end\"}>\r\n                        <ReactToPrint\r\n                            content={reactToPrintContent}\r\n                            documentTitle=\"Invoice\"\r\n                            removeAfterPrint\r\n                            trigger={reactToPrintTrigger}\r\n                            pageStyle={'portrait'}\r\n                            onPrintError={(e) => console.error(\"React to print error\", e)}\r\n                            onBeforePrint={() => new Promise(resolve => {\r\n                                setTimeout(() => {\r\n                                    console.log('waiting for print')\r\n                                    resolve(\"\")\r\n                                }, 1000)\r\n                            })}\r\n                            fonts={[{family: \"Open Sans\", source:\"\"}]}\r\n                        />\r\n                        {/*<Button variant='contained' onClick={createPdf}>Print Invoice</Button>*/}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        {docFileViewer}\r\n    </div>\r\n})\r\n\r\nconst DialogComponent = ({\r\n    transition,\r\n    handleClose,\r\n    open,\r\n    data,\r\n    pdf,\r\n    getTotal,\r\n    services,\r\n    addService,\r\n    onChangeService,\r\n    deleteService,\r\n    notes,\r\n    setNotes, saveServices,\r\n}) => {\r\n    const ref = React.useRef(null);\r\n    const {\r\n        brokerage = \"\",\r\n        loadNumber = \"\",\r\n        pickup = [],\r\n        drop = [],\r\n        rate = \"\",\r\n        accessorials = [],\r\n        proofDelivery = [],\r\n        rateConfirmation = [],\r\n        bucketFiles\r\n    } = data || {};\r\n\r\n\r\n    const PdfViewer = ({ pdfUrl, pdfFileName }) => {\r\n        const [pages, setPages] = useState([]);\r\n        useEffect(() => {\r\n\r\n            const script = document.createElement('script');\r\n            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js';\r\n            script.async = true;\r\n            script.onload = async () => {\r\n                // Once PDF.js script is loaded, fetch and render PDF\r\n\r\n\r\n                const blob = await fetch(`https://cors.freightdok.io/${pdfUrl}`)\r\n                    .then(response => {\r\n                        const contentType = response.headers.get('content-type');\r\n                        if (contentType.equalsIgnoreCase('application/pdf'))\r\n                            return response.blob();\r\n                        else\r\n                            return null;\r\n                    })\r\n\r\n                if (blob) {\r\n                    {\r\n                        const reader = new FileReader();\r\n                        reader.onload = () => {\r\n                            const pdf = reader.result;\r\n                            // Initialize PDF.js library\r\n                            const pdfjsLib = window['pdfjs-dist/build/pdf'];\r\n                            pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.js`;\r\n\r\n                            // Load PDF document\r\n                            pdfjsLib.getDocument({ data: pdf }).promise.then(pdfDocument => {\r\n                                const numPages = pdfDocument.numPages;\r\n                                const promises = [];\r\n                                for (let i = 1; i <= numPages; i++) {\r\n                                    promises.push(pdfDocument.getPage(i));\r\n                                }\r\n                                Promise.all(promises).then(pages => {\r\n                                    const pagePromises = pages.map(page => {\r\n                                        const viewport = page.getViewport({ scale: 2 });\r\n                                        const canvas = document.createElement('canvas');\r\n                                        const context = canvas.getContext('2d');\r\n                                        canvas.height = viewport.height;\r\n                                        canvas.width = viewport.width;\r\n\r\n                                        const renderContext = {\r\n                                            canvasContext: context,\r\n                                            viewport: viewport\r\n                                        };\r\n                                        return page.render(renderContext).promise.then(() => {\r\n                                            return canvas.toDataURL();\r\n                                        });\r\n                                    });\r\n                                    Promise.all(pagePromises).then(pageImages => {\r\n                                        setPages(pageImages);\r\n                                    });\r\n                                });\r\n                            });\r\n                        };\r\n                        reader.readAsArrayBuffer(blob);\r\n                    }\r\n                }\r\n                else {\r\n                    setPages(false)\r\n                }\r\n            };\r\n            document.body.appendChild(script);\r\n        }, [pdfUrl]);\r\n\r\n        if (pages) {\r\n            return (\r\n                <>\r\n                    <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n                        {pages.map((page, index) => (\r\n                            <img\r\n                                key={index}\r\n                                src={page}\r\n                                alt={`Page ${index + 1}`}\r\n                                style={{ width: '100%', /* position: 'absolute', top: `${index * 100}%`, left: 0,*/ }}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return (<>\r\n                <Box sx={{ position: 'relative', minHeight: '100vh', display: 'flex', justifyContent: 'center' }}>\r\n                    <img className=\"printThisFull\" src={pdfUrl} alt={pdfFileName} style={{width: '1100px', height: '1200px', objectFit: 'contain'}} />\r\n                </Box>\r\n            </>)\r\n        }\r\n    };\r\n\r\n\r\n    const docFileViewer = React.useMemo(() => {\r\n        return bucketFiles && bucketFiles.map(doc => {\r\n            return (<div className=\"bucketImageContainer\">\r\n                <div>\r\n                    <PdfViewer pdfUrl={doc.fileLocation} pdfFileName={doc.fileName} />\r\n                    {/* <img className=\"printThisFull\" src={doc.fileLocation} alt={doc.fileName} /> */}\r\n                </div>\r\n            </div>)\r\n        })\r\n    }, [bucketFiles])\r\n\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        if(saveServices){\r\n            saveServices();\r\n        }\r\n        return ref.current;\r\n    }, [ref.current, saveServices]);\r\n\r\n\r\n    const reactToPrintTrigger = React.useCallback(() => {\r\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n        // to the root node of the returned component as it will be overwritten.\r\n\r\n        // Bad: the `onClick` here will be overwritten by `react-to-print`\r\n        // return <button onClick={() => alert('This will not work')}>Print this out!</button>;\r\n\r\n        // Good\r\n        return (\r\n            <Button className='printInvoice' variant={'contained'} disabled={!services.length}>\r\n                Create Invoice\r\n            </Button>\r\n        );\r\n    }, [services]);\r\n\r\n    return (\r\n        <Dialog\r\n            className=\"printThisFull\"\r\n            PaperProps={{\r\n                sx: { width: \"70%\" },\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={transition}\r\n            maxWidth={\"lg\"}\r\n        >\r\n            <DialogContent sx={{ p: 0 }}>\r\n                <Temporray\r\n                    ref={ref}\r\n                    pdf={pdf}\r\n                    setNotes={setNotes}\r\n                    brokerage={brokerage}\r\n                    loadNumber={loadNumber}\r\n                    getTotal={getTotal}\r\n                    onChangeService={onChangeService}\r\n                    services={services}\r\n                    addService={addService}\r\n                    deleteService={deleteService}\r\n                    notes={notes}\r\n                    rateConfirmation={rateConfirmation}\r\n                    proofDelivery={proofDelivery}\r\n                    accessorials={accessorials}\r\n                    reactToPrintContent={reactToPrintContent}\r\n                    docFileViewer={docFileViewer}\r\n                    reactToPrintTrigger={reactToPrintTrigger}\r\n                />\r\n            </DialogContent>\r\n        </Dialog >\r\n    );\r\n};\r\n\r\nconst Invoice = ({ match: { params: { id = \"\" } = {} } = {} }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [pdf, setPdf] = useState(false);\r\n    const [services, setServices] = useState([]),\r\n        [notes, setNotes] = useState(''),\r\n        {mutation, loading} = useMutation('/api/create-invoicev2', null),\r\n        {data: {data = {}} = {}} = useFetch(GET_LOAD_HISTORY + `/${id}`),\r\n        {loadNumber = null} = data || {};\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleClickOpen();\r\n    }, []);\r\n\r\n    const handleClose = (e, reason = \"\") => {\r\n        // if (reason === 'backdropClick') return\r\n        setOpen(false);\r\n    };\r\n\r\n    const addService = (service) => {\r\n        const { label, cost } = service;\r\n        let obj = {\r\n            serviceName: label,\r\n            description: '',\r\n            quantity: 1,\r\n            price: cost,\r\n            amount: cost\r\n        }\r\n        setServices([...services, obj])\r\n    }\r\n\r\n    const onChangeService = (index, { name, value }) => {\r\n        const row = services[index];\r\n        row[name] = value;\r\n        const clone = [...services];\r\n        clone[index] = row\r\n        setServices(clone);\r\n    }\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return history.goBack();\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const getTotal = useCallback(() => {\r\n        const total = services.reduce((acc, service) => parseFloat(service.amount) + acc, 0)\r\n        let USDollar = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        });\r\n        return USDollar.format(total.toFixed(2))\r\n    }, [services]);\r\n\r\n    const deleteService = (index) => {\r\n        const data = services\r\n        data.splice(index, 1)\r\n        setServices([...data])\r\n    }\r\n\r\n    const saveServices = () => {\r\n        const data = {\r\n            services, notes, loadNumber\r\n        }\r\n        mutation(data, 'post', ({data, success}) => {\r\n\r\n        });\r\n    }\r\n\r\n    // const createInvoice = async () => {\r\n        // const blob = await pdf(\r\n        //     <Document>\r\n        //         <Page size=\"A4\">\r\n        //             <View>\r\n        //                 jugal\r\n        //             </View>\r\n        //         </Page>\r\n        //     </Document>\r\n        // ).toBlob()\r\n        // console.log(blob)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <DialogComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                transition={Transition}\r\n                data={data}\r\n                pdf={pdf}\r\n                services={services}\r\n                addService={addService}\r\n                onChangeService={onChangeService}\r\n                getTotal={getTotal}\r\n                deleteService={deleteService}\r\n                notes={notes}\r\n                setNotes={setNotes}\r\n                saveServices={saveServices}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n","import React, {Fragment, useState} from 'react';\r\nimport {Box, Stack, IconButton} from \"@mui/material\";\r\nimport {Link, Route, useRouteMatch} from \"react-router-dom\";\r\nimport {PictureAsPdf} from \"@mui/icons-material\";\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Invoice from \"./NewInvoice\";\r\nimport moment from \"moment\";\r\nimport EnhancedTable from \"../Atoms/table/Table\";\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport MoveToMyLoads from \"./MoveToMyLoads\";\r\nimport {UserSettings} from \"../Atoms/client\";\r\nimport {getDollarPrefixedPrice} from \"../../utils/utils\";\r\nimport useFetchWithSearchPagination from \"../../hooks/useFetchWithSearchPagination\";\r\nimport Tooltip from \"../Atoms/Tooltip\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {notification} from \"../../actions/alert\";\r\n\r\nconst modalConfig = {\r\n    title: 'Move invoice'\r\n}\r\nexport default function InvoicesList() {\r\n    const {edit = false} = UserSettings.getUserPermissionsByDashboardId('invoices') || {};\r\n    const {path} = useRouteMatch();\r\n    const {mutation, loading: isLoadingPdf} = useMutation('/create-be-invoice-pdf', null, true)\r\n    const {\r\n            data: _data, loading, page, limit, onPageChange, onLimitChange, refetch,\r\n            isPaginationLoading, isRefetching\r\n        } = useFetchWithSearchPagination('/api/load/invoice_loads'),\r\n        [checkboxes, setCheckboxes] = useState([]),\r\n        {loads, total} = _data || {};\r\n\r\n    const config = {\r\n        rowCellPadding: \"normal\",\r\n        headerCellSx: {pt: 1, pb: 1},\r\n        emptyMessage: 'No Invoices found',\r\n        showRefresh: true,\r\n        page,\r\n        limit,\r\n        count: total,\r\n        onPageChange: (...args) => {\r\n            onPageChange(...args);\r\n            resetCheckboxes();\r\n        },\r\n        onLimitChange: (...args) => {\r\n            onLimitChange(...args);\r\n            resetCheckboxes();\r\n        },\r\n        showCheckbox: true,\r\n        columns: [\r\n            {\r\n                id: 'loadNumber',\r\n                label: 'Load Number',\r\n            },\r\n            {\r\n                id: \"country\",\r\n                label: \"Pickup City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.pickup[0].pickupCity}, {row.pickup[0].pickupState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"pickupDate\",\r\n                label: \"Pickup Date\",\r\n                renderer: ({row: {pickup = []} = {}}) => {\r\n                    const [{pickupDate = ''}] = pickup;\r\n                    return moment(pickupDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"deliveryCountry\",\r\n                label: \"Delivery City/State\",\r\n                renderer: ({row}) => {\r\n                    return (\r\n                        <Fragment>\r\n                            {row.drop[0].dropCity}, {row.drop[0].dropState}\r\n                        </Fragment>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                id: \"deliveryDate\",\r\n                label: \"Delivery Date\",\r\n                renderer: ({row: {drop = []} = {}}) => {\r\n                    const [{dropDate = ''}] = drop;\r\n                    return moment(dropDate).format('MM/DD/YYYY')\r\n                }\r\n            },\r\n            {\r\n                id: \"assigned\",\r\n                label: \"Assigned To\",\r\n                renderer: ({row}) => {\r\n                    const {user = {}} = {} = row || {},\r\n                        {name = '', firstName, lastName} = user || {};\r\n                    return name || `${firstName || '--'} ${lastName || ''}`\r\n                }\r\n            },\r\n            {\r\n                id: \"accessorials\",\r\n                label: \"Accessorials\",\r\n                valueFormatter: (value) => (value || []).join(', ')\r\n            },\r\n            {\r\n                id: \"company\",\r\n                label: \"Company\",\r\n                renderer: ({row}) => {\r\n                    return row?.brokerage\r\n                },\r\n                emptyState: '--'\r\n            },\r\n            {\r\n                id: 'rate',\r\n                label: 'Rate',\r\n                emptyState: '--',\r\n                valueFormatter: (value) => value ? getDollarPrefixedPrice(value) : ''\r\n            },\r\n            {\r\n                id: 'updatedAt',\r\n                label: 'Updated On',\r\n                valueFormatter: (value) => new Date(value).toLocaleString()\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Invoice',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <Stack direction={'row'}>\r\n                        <Tooltip title='Create Invoice' placement='top'>\r\n                            <IconButton\r\n                                component={Link}\r\n                                to={path + '/' + row._id}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                            >\r\n                                <DescriptionIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {row.invoiceUrl && <Tooltip title='Server Invoice' placement='top'>\r\n                            <IconButton\r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    window.open(row.invoiceUrl, '_blank')\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                            >\r\n                                <PictureAsPdf sx={{color: 'red'}}/>\r\n                            </IconButton>\r\n                        </Tooltip>}\r\n                    </Stack>\r\n                }\r\n            },\r\n            {\r\n                id: '',\r\n                label: 'Move',\r\n                visible: !!edit,\r\n                renderer: ({row}) => {\r\n                    return <IconButton\r\n                        component={Link}\r\n                        to={path + '/moveToMyLoads/' + row._id}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <ReplayIcon/>\r\n                    </IconButton>\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    const onCheckboxChange = (row, e) => {\r\n        e.preventDefault();\r\n        const key = row['loadNumber'];\r\n        const index = checkboxes.indexOf(key);\r\n        let newCheckboxes = [...checkboxes]\r\n        if(index > -1) {\r\n            newCheckboxes = newCheckboxes.toSpliced(index, 1)\r\n        } else {\r\n            newCheckboxes.push(key);\r\n        }\r\n        setCheckboxes(newCheckboxes);\r\n    }\r\n\r\n    const onRefresh = () => {\r\n        refetch();\r\n        resetCheckboxes();\r\n    }\r\n\r\n    const resetCheckboxes = () => setCheckboxes([])\r\n\r\n    const onSendToTriumph = () => {\r\n        mutation({loadIds: checkboxes}, null, ({success, data}) => {\r\n              if(data.data.length){\r\n                data.data.forEach((invoice, index) => {\r\n                    setTimeout(() => {\r\n                        notification(invoice.message, invoice.invoiceCreated ? 'success' : 'error');\r\n                    }, index * 2000); \r\n                });\r\n              }  \r\n            if(success) {\r\n                resetCheckboxes();\r\n                refetch();\r\n            }\r\n        })\r\n    }\r\n\r\n    const actions = <Box>\r\n        <LoadingButton\r\n            variant='contained'\r\n            disabled={!checkboxes.length}\r\n            isLoading={isLoadingPdf}\r\n            loadingText='Please Wait...'\r\n            onClick={onSendToTriumph}\r\n        >\r\n            Upload on Triumph\r\n        </LoadingButton>\r\n    </Box>\r\n\r\n    return (\r\n        <Box sx={{height: 'inherit'}}>\r\n            <Fragment>\r\n                <EnhancedTable\r\n                    config={config}\r\n                    data={loads}\r\n                    loading={loading}\r\n                    onRefetch={onRefresh}\r\n                    isRefetching={isRefetching}\r\n                    isPaginationLoading={isPaginationLoading}\r\n                    onCheckboxChange={onCheckboxChange}\r\n                    checkboxes={checkboxes}\r\n                    checkboxKey={'loadNumber'}\r\n                    actions={actions}\r\n                />\r\n                {edit && <Route path={path + '/moveToMyLoads/:id'}\r\n                                render={(props) => <MoveToMyLoads onCloseUrl={path}\r\n                                                                  getInvoices={refetch}\r\n                                                                  modalConfig={modalConfig} {...props} />}/>}\r\n                {edit && <Route path={path + '/:id'} exact component={Invoice} onCloseUrl={path}/>}\r\n            </Fragment>\r\n        </Box>\r\n    )\r\n}","import {useState} from \"react\";\r\nimport {requestDelete, requestPatch, requestPost, requestPut} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst getRequestCb = (type) => {\r\n    let fn;\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n        case 'put' : {\r\n            fn = requestPut\r\n            break;\r\n        }\r\n        case 'delete' : {\r\n            fn = requestDelete\r\n            break;\r\n        }\r\n        case 'patch' : {\r\n            fn = requestPatch\r\n            break;\r\n        }\r\n        default: {\r\n            fn = requestPost;\r\n        }\r\n    }\r\n    return fn;\r\n}\r\n\r\nconst useMutation = (url, callback = null, showTriggers=false, options={}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mutation = async (body, type = 'post', afterSubmit) => {\r\n        let uri = url;\r\n        if(options.queryParams){\r\n            uri = uri + \"?\" + serialize(options.queryParams)\r\n        }\r\n        setLoading(true);\r\n        if(!type){\r\n            type = 'post'\r\n        }\r\n        const asyncApiCall = getRequestCb(type.toLowerCase());\r\n        if(asyncApiCall) {\r\n            return asyncApiCall({uri, callback, body, showTriggers})\r\n                .then(res => {\r\n                    if(afterSubmit){\r\n                        afterSubmit({...res})\r\n                    }\r\n                    return res\r\n                })\r\n                .catch(err => {\r\n                    return err;\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    return { mutation, loading }\r\n}\r\n\r\nexport default useMutation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {styled, useTheme} from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMediaQuery, Zoom} from \"@mui/material\";\r\nimport {addEvent, removeEvent} from \"../../utils/utils\";\r\nimport {ENHANCED_DASHBOARD} from \"../client/routes\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({theme}) => ({\r\n    \"& .MuiDialogContent-root\": {\r\n        padding: theme.spacing(2),\r\n    },\r\n    \"& .MuiDialogActions-root\": {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n    const {children, onClose, showClose,titleStyles, ...other} = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2, textAlign: 'center', ...titleStyles }} {...other}>\r\n            {showClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: \"absolute\",\r\n                        left: 8,\r\n                        top: 12,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ) : null}\r\n            {children}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Modal(props) {\r\n    const {config = {}, children, closeCallback} = props,\r\n        {\r\n            title = \"\",\r\n            closeUrl = \"\",\r\n            showClose = true,\r\n            paperProps = {},\r\n            preventBackdropClick = false,\r\n            titleStyles = {}\r\n        } = config;\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClick && reason.equalsIgnoreCase('backdropClick')) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        setOpen(true);\r\n        addEvent(window, 'closeModal', handleClose)\r\n\r\n        return () => removeEvent(window, 'closeModal', handleClose)\r\n    }, []);\r\n\r\n    const Transition = useMemo(() => {\r\n        return React.forwardRef(function Transition(props, ref) {\r\n            const history = useHistory();\r\n            return (\r\n                <Zoom\r\n                    ref={ref}\r\n                    {...props}\r\n                    onExited={() => {\r\n                        return closeCallback ? closeCallback() : closeUrl ? history.push(closeUrl || ENHANCED_DASHBOARD) : history.goBack()\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby={title || \"customized-dialog-title\"}\r\n            open={open}\r\n            maxWidth={'lg'}\r\n            TransitionComponent={Transition}\r\n            PaperProps={paperProps}\r\n            fullScreen={fullScreen}\r\n        >\r\n            {title && <BootstrapDialogTitle\r\n                id={title || \"customized-dialog-title\"}\r\n                onClose={handleClose}\r\n                showClose={showClose}\r\n                titleStyles={titleStyles}\r\n            >\r\n                {title}\r\n            </BootstrapDialogTitle>}\r\n            <DialogContent dividers sx={{borderTop: 'none'}}>{children}</DialogContent>\r\n            {/* <DialogActions>\r\n          <Button autoFocus onClick={onOkHandler}>\r\n            {okButtonText}\r\n          </Button>\r\n        </DialogActions> */}\r\n        </BootstrapDialog>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MuiDialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialog(props) {\r\n    const {open = false, config, onClose, preventBackdropClose = false, className} = props,\r\n        {title, onOk, okText = 'Save', content, onCancel} = config;\r\n\r\n    const handleClose = (e, reason = '') => {\r\n        if (preventBackdropClose && reason.equalsIgnoreCase('backdropclick')) {\r\n            return\r\n        }\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MuiDialog\r\n                className={className}\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                onClose={handleClose}\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {typeof title === 'function' ? title({...config}) :\r\n                    <DialogTitle sx={{fontWeight: 550}}>{title}</DialogTitle>}\r\n                <DialogContent>\r\n                    {typeof content === 'function' ? content({config}) : content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {typeof onCancel === 'function' ? onCancel({config, onClose}): <Button variant='outlined' onClick={handleClose}>Cancel</Button>}\r\n                    {typeof okText === 'function' ? okText({config, onOk}) : <Button variant='contained'\r\n                                                                                     color={okText.equalsIgnoreCase('delete') ? 'error' : 'primary'}\r\n                                                                                     onClick={onOk}\r\n                    >\r\n                        {okText}\r\n                    </Button>}\r\n                </DialogActions>\r\n            </MuiDialog>\r\n        </div>\r\n    );\r\n}","import Pagination from \"@mui/material/Pagination\"\r\nimport Stack from \"@mui/material/Stack\"\r\nimport Typography from \"@mui/material/Typography\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport styled from \"@mui/material/styles/styled\";\r\nimport {Select} from \"../index\";\r\n\r\nconst StyledPagination = styled(Pagination)(({theme}) => ({\r\n    \"& .MuiPaginationItem-root\": {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            height: \"1.8rem\",\r\n            width: \"1rem\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst StyledStack = styled(Stack)(({theme}) => ({\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        justifyContent: 'center'\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n        '& .pageSizeSelect': {\r\n        width: 80\r\n        }\r\n}))\r\n\r\nconst TablePagination = ({data = [], onPageChange, page = 1, count = 0, limit = 1, onLimitChange, isLoading}) => {\r\n    const [length, setLength] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(data)) {\r\n            setLength(data.length);\r\n        }\r\n    }, [data]);\r\n\r\n    const onChange = (e, pgNum) => {\r\n        if (+page !== +pgNum && typeof onPageChange === 'function') {\r\n            onPageChange(e, +pgNum)\r\n        }\r\n    }\r\n\r\n    const handlePageSize = ({value}) => {\r\n        if(typeof onLimitChange === 'function'){\r\n            onLimitChange({value});\r\n        }\r\n    }\r\n\r\n    if (count <= 5) {\r\n        return null;\r\n    }\r\n    return (\r\n        <StyledStack direction='row' alignItems={'center'}>\r\n            <Typography sx={{color: '#525F7F'}} fontSize={12}>Showing {length} of {count} entries</Typography>\r\n            <Stack direction='row' alignItems='center'>\r\n                <Select\r\n                    disabled={isLoading}\r\n                    name='pageSize'\r\n                    label=''\r\n                    value={limit}\r\n                    options={[\r\n                        {id: 5, label: 5},\r\n                        {id: 10, label: 10},\r\n                        {id: 20, label: 20},\r\n                        {id: 50, label: 50},\r\n                        {id: 100, label: 100},\r\n                    ]}\r\n                    className='pageSizeSelect'\r\n                    onChange={handlePageSize}\r\n                />\r\n                <StyledPagination\r\n                    disabled={isLoading}\r\n                    count={Math.ceil(count / limit)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    page={page}\r\n                    size=\"medium\"\r\n                    onChange={onChange}\r\n                />\r\n            </Stack>\r\n        </StyledStack>\r\n    )\r\n}\r\n\r\nexport default TablePagination\r\n","import {\r\n    Backdrop,\r\n    Box,\r\n    Checkbox,\r\n    DialogContentText,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow, TableSortLabel, Typography\r\n} from '@mui/material';\r\nimport _ from 'lodash';\r\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\r\nimport React, {Fragment, memo, useEffect, useMemo, useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TablePagination from './Pagination';\r\nimport Spinner from \"../../layout/Spinner\";\r\nimport {Delete, Refresh} from \"@mui/icons-material\";\r\nimport Dialog from \"../Dialog\";\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {getUserDetail} from \"../../../utils/utils\";\r\nimport Tooltip from \"../Tooltip\";\r\n\r\nconst Cell = styled(TableCell)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n        padding: '0 8px',\r\n    }\r\n}))\r\nconst DeleteIcon = styled(Delete)(({theme}) => ({\r\n    [theme.breakpoints.down('xs')]: {\r\n        fontSize: 14,\r\n    }\r\n}))\r\n\r\nfunction Headers({columns = [], config = {}, role, handleRequestSort, hasSort}) {\r\n    const {headerCellSx = {}, hasDelete, sortField, sortOrder, showCheckbox} = config;\r\n    const headers = useMemo(() => {\r\n        return columns.map((column, index) => {\r\n            const {label = '', id = '', visible = true, sort = false} = column || {};\r\n            // eslint-disable-next-line array-callback-return\r\n            const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n            if (!isVisible) {\r\n                return null;\r\n            }\r\n            return (\r\n                <Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}\r\n                      key={id || index}>\r\n                    {(hasSort && sort)\r\n                        ? <TableSortLabel onClick={(e) => handleRequestSort(e, id)} active={id === sortField}\r\n                                     direction={sortOrder}\r\n                                     sx={{ ...headerCellSx}}>\r\n                        {label}\r\n                    </TableSortLabel>\r\n                        : label}\r\n                </Cell>\r\n            )\r\n        })\r\n    }, [columns, headerCellSx])\r\n\r\n    if(showCheckbox){\r\n        headers.unshift(<Cell padding={'normal'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}} />)\r\n    }\r\n    return <TableRow>\r\n        {headers}\r\n        {hasDelete && <Cell padding={'none'} sx={{color: '#000', bgcolor: '#fafafa', fontWeight: 800, ...headerCellSx}}/>}\r\n    </TableRow>;\r\n}\r\n\r\nconst getTableCell = ({\r\n                          row = [],\r\n                          columns = {},\r\n                          config = {},\r\n                          handleRowClick,\r\n                          rowIndex,\r\n                          handleDelete,\r\n                          hasDeletePermission,\r\n                          checkboxKey,\r\n                          ...rest\r\n                      }) => {\r\n    const {\r\n        hasDelete = false,\r\n        rowCellPadding = 'none',\r\n        onRowClick = undefined,\r\n        rowStyleCb,\r\n        showCheckbox = false\r\n    } = config;\r\n    const {role, onCheckboxChange, checkboxes} = rest;\r\n    let rowStyle = {}\r\n    if (rowStyleCb) {\r\n        rowStyle = rowStyleCb({row}) || {};\r\n    }\r\n    const rowClickHandler = (e) => {\r\n            e.preventDefault();\r\n            if (_.isFunction(handleRowClick)) handleRowClick(row)\r\n        },\r\n        deleteCell = <Cell sx={{}} padding={'none'} component=\"th\" scope=\"row\">\r\n            <Tooltip title='Delete' placement='top'>\r\n                <IconButton onClick={handleDelete.bind(this, row._id, row)} disabled={!hasDeletePermission}>\r\n                    <DeleteIcon color={'error'}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Cell>;\r\n\r\n    const cell = columns.map((column, i) => {\r\n        const {id = '', renderer, emptyState = '--', valueFormatter, visible = true, cellPadding} = column || {};\r\n        const isVisible = _.isFunction(visible) ? visible({column, role}) : visible;\r\n        if (!isVisible) {\r\n            return null;\r\n        }\r\n        let cell;\r\n        if (valueFormatter && _.isFunction(valueFormatter)) {\r\n            cell = valueFormatter(row[id]);\r\n        } else if (_.isFunction(renderer)) {\r\n            cell = renderer({row, role}, rowIndex) || emptyState;\r\n        } else {\r\n            cell = _.get(row, id, emptyState) || emptyState;\r\n        }\r\n        return <Cell key={id + i} padding={cellPadding || rowCellPadding || 'normal'} component=\"th\" scope=\"row\">\r\n            {cell}\r\n        </Cell>\r\n    });\r\n\r\n    if(showCheckbox){\r\n        if(!checkboxKey){\r\n            throw new Error('Checkbox key not provided');\r\n        }\r\n        const checked = checkboxes.indexOf(row[checkboxKey]) > -1;\r\n        cell.unshift(<Cell onClick={onCheckboxChange.bind(this, row)}>\r\n            <Checkbox checked={checked} />\r\n        </Cell>)\r\n    }\r\n\r\n    return <TableRow key={rowIndex} hover={!!onRowClick} onClick={rowClickHandler}\r\n                     sx={!!onRowClick ? {cursor: 'pointer', ...rowStyle} : {...rowStyle}}>\r\n        {cell}\r\n        {hasDelete && deleteCell}\r\n    </TableRow>;\r\n}\r\n\r\nconst TableData = ({columns, data = [], config = {}, handleRowClick, handleDelete, ...rest}) => {\r\n\r\n    return (data || []).map((row, index) => {\r\n        const {dataKey = ''} = config;\r\n        if (dataKey) {\r\n            row = row[dataKey];\r\n        }\r\n        return getTableCell({row, columns, config, handleRowClick, rowIndex: index, handleDelete, ...rest})\r\n    })\r\n}\r\n\r\n\r\nconst EnhancedTable = ({config = {}, data = [], history, loading = false, onRefetch, isRefetching, actions, isPaginationLoading=false, ...rest}) => {\r\n    data = data || [];\r\n    const {onCheckboxChange, checkboxes, checkboxKey} = rest;\r\n    const [tableState, setTableState] = useState({}),\r\n        [dialog, setDialog] = useState({open: false, config: {}}),\r\n        {\r\n            columns = [],\r\n            onRowClick,\r\n            hasOnClickUrl = true,\r\n            onPageChange,\r\n            page,\r\n            count,\r\n            limit,\r\n            onPageSizeChange,\r\n            onLimitChange,\r\n            size = 'medium',\r\n            emptyMessage = '',\r\n            onRowClickDataCallback,\r\n            showRefresh = false,\r\n            onDelete,\r\n            deleteMessage,\r\n            deletePermissions = [],\r\n            containerHeight='',\r\n            sortField,\r\n            sortOrder = 'asc',\r\n            handleSortChange,\r\n            hasSort = false\r\n        } = config,\r\n        {role = ''} = getUserDetail().user,\r\n        hasDeletePermission = typeof deletePermissions === 'boolean' ? deletePermissions : deletePermissions.indexOf(role) > -1 || false,\r\n        ref = React.useRef([]);\r\n    const length = Array.isArray(data) && data.length,\r\n        Actions = useMemo(() => {\r\n        if(actions && React.isValidElement(actions)){\r\n            return actions;\r\n        }\r\n        return <></>\r\n    }, [actions]);\r\n\r\n    const handleRowClick = (row) => {\r\n        if (hasOnClickUrl && onRowClick) {\r\n            const url = onRowClick(row);\r\n            if (onRowClickDataCallback) {\r\n                row = onRowClickDataCallback(row)\r\n            }\r\n            history.push(url, row);\r\n        } else if (onRowClick) {\r\n            onRowClick(row)\r\n        }\r\n    }\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = sortField === property && sortOrder === 'asc';\r\n        // setOrder(isAsc ? 'desc' : 'asc');\r\n        // setOrderBy(property);\r\n        handleSortChange && handleSortChange({field: property, order: isAsc ? 'desc' : 'asc'})\r\n    };\r\n\r\n    const handleDelete = (id, row, e) => {\r\n        e.stopPropagation();\r\n        const config = {\r\n            title: () => <Grid container alignItems='center' sx={{p: '16px 24px'}} gap={1}>\r\n                <ErrorOutlineIcon color='error'/>\r\n                <Typography sx={{fontSize: '1.25rem', fontWeight: 550}} color='error'>Delete</Typography>\r\n            </Grid>,\r\n            okText: 'Delete',\r\n            onOk: () => onDelete(id, onDialogClose, {row}),\r\n            content: () => <DialogContentText\r\n                sx={{color: '#000'}}>{_.isFunction(deleteMessage) ? deleteMessage({row}) : deleteMessage || 'Are you sure you want to delete the record?'}</DialogContentText>\r\n        }\r\n        setDialog({...dialog, open: true, config});\r\n    }\r\n\r\n    function onDialogClose() {\r\n        setDialog({...dialog, open: false})\r\n    }\r\n\r\n    const getLoader = () => {\r\n        const innerHeight = window.innerHeight - 180,\r\n            height = (tableState.height ? tableState.height > innerHeight ? innerHeight : tableState.height : innerHeight) || innerHeight;\r\n        return <Grid container alignItems={'center'} justifyContent='center' sx={{height}}>\r\n            <Grid item alignItems='center' sx={{position: 'relative'}}>\r\n                <Spinner/>\r\n            </Grid>\r\n        </Grid>\r\n    }\r\n    const getTableContent = useMemo(() => {\r\n        if (!length) {\r\n            return (<tbody style={{height: 300}}>\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}><h4>{emptyMessage || 'No records found'}</h4></td>\r\n            </tr>\r\n            </tbody>)\r\n        }\r\n        return <Fragment>\r\n            <TableHead className={''} sx={{backgroundColor: '#fafafa', borderTop: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Headers columns={columns} config={config} role={role} handleRequestSort={handleRequestSort} hasSort={hasSort}/>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableData\r\n                    role={role}\r\n                    columns={columns}\r\n                    data={data}\r\n                    config={config}\r\n                    checkboxes={checkboxes}\r\n                    checkboxKey={checkboxKey}\r\n                    handleRowClick={handleRowClick}\r\n                    handleDelete={handleDelete}\r\n                    onCheckboxChange={onCheckboxChange}\r\n                    hasDeletePermission={hasDeletePermission}\r\n                />\r\n            </TableBody>\r\n        </Fragment>\r\n    }, [data, config, checkboxes])\r\n\r\n    useEffect(() => {\r\n        if (ref?.current?.table) {\r\n            const calculatedHeight = ref.current.table.offsetHeight;\r\n            setTableState({...tableState, height: calculatedHeight > 200 ? calculatedHeight : undefined})\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if((isPaginationLoading || isRefetching) && ref.current?.tableContainer){\r\n            ref.current.tableContainer.scrollTo(0, 0)\r\n        }\r\n    }, [isPaginationLoading, isRefetching])\r\n\r\n    return <Box className='enhanced-table' sx={{height: length && !loading ? (containerHeight || '95%') : 'auto'}}>\r\n        <Stack alignItems='flex-end' justifyContent='flex-end' direction='row' py={1} gap={.5}>\r\n            {Actions}\r\n            {showRefresh && <IconButton title='Refresh' onClick={onRefetch}>\r\n                <Refresh className={(isRefetching) ? 'rotateIcon' : undefined}/>\r\n            </IconButton>}\r\n        </Stack>\r\n        <TableContainer\r\n            component={Paper}\r\n            className={''}\r\n            ref={el => ref.current['tableContainer'] = el}\r\n            sx={{boxShadow: '0px 0px 32px #8898AA26', mb: 2, height: length && !loading ? 'calc(100% - 80px)' : 'auto', position: 'relative'}}\r\n        >\r\n            {loading\r\n                ? getLoader()\r\n                : <Table ref={el => ref.current['table'] = el} aria-label=\"caption table\" size={size} stickyHeader>\r\n                    {getTableContent}\r\n                </Table>}\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, position: 'absolute' }}\r\n                open={isPaginationLoading || isRefetching || false}\r\n            >\r\n                <Spinner sx={{color: 'inherit'}} />\r\n            </Backdrop>\r\n        </TableContainer>\r\n        {!loading && data.length > 0 &&\r\n            <TablePagination data={data} onPageChange={onPageChange} page={page} count={count} limit={limit} onLimitChange={onLimitChange || onPageSizeChange} isLoading={isRefetching || isPaginationLoading} />}\r\n        <Dialog className='enhancedTable_dialog' open={dialog.open} config={dialog.config} onClose={onDialogClose}/>\r\n    </Box>;\r\n};\r\n\r\nexport default withRouter(memo(EnhancedTable));\r\n","import React from \"react\";\r\nimport _ from 'lodash';\r\nimport {FormGroup, Input} from \"reactstrap\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nconst InputPure = (props) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        options = [],\r\n        labelKey = 'label',\r\n        valueKey = 'id',\r\n        onChangeSelect,\r\n        showFirstBlank = false,\r\n        onBlur\r\n    } = props;\r\n    props = _.cloneDeep(props);\r\n    delete props.showFirstBlank;\r\n\r\n    if (type.toLowerCase() === 'select') {\r\n        if (!Array.isArray(options) || !options.length) {\r\n            console.error('Options are mandatory in array format');\r\n        }\r\n        const opts = (options || []).map((opt) => {\r\n            return <option value={opt[valueKey]} key={opt[valueKey]}>{opt[labelKey]}</option>\r\n        })\r\n        if (showFirstBlank) opts.unshift(<option value=''>{'Select an option'}</option>)\r\n        return <Input\r\n            {...props}\r\n            onChange={onChangeSelect}\r\n            id={label}\r\n            type={type}\r\n        >{opts}</Input>\r\n    }\r\n    return <Input\r\n        id={label}\r\n        type={type}\r\n        {...props}\r\n        onBlur={onBlur}\r\n    />\r\n}\r\nconst InputField = (props = {}) => {\r\n    const {\r\n        label = '',\r\n        type = 'text',\r\n        multiple = false,\r\n        onChange,\r\n        labelStyle = {},\r\n        direction = 'column',\r\n        formGrpStyle = {},\r\n        errorText = '',\r\n        onBlur\r\n    } = props;\r\n\r\n    const onChangeSelect = (e) => {\r\n        if (type.toLowerCase() === 'select' && multiple) {\r\n            const {options, name} = e.target;\r\n            const values = [];\r\n            for (let i = 0, l = options.length; i < l; i++) {\r\n                if (options[i].selected) {\r\n                    values.push(options[i].value);\r\n                }\r\n            }\r\n            if (onChange) onChange(e, values, name)\r\n        } else if (onChange) onChange(e)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (onBlur) {\r\n            onBlur(e.target.name, e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormGroup\r\n            style={direction === 'row' ? {display: 'flex', alignItems: 'center', ...formGrpStyle} : {...formGrpStyle}}>\r\n            {label && <label\r\n                className=\"form-control-label\"\r\n                htmlFor={label}\r\n                style={{color: '#525F7F', marginRight: 8, ...labelStyle}}\r\n            >\r\n                {label}\r\n            </label>}\r\n            <InputPure {...props} onChangeSelect={onChangeSelect} onBlur={handleBlur}/>\r\n            {errorText &&\r\n                <Typography variant='subtitle2' sx={{color: 'red', fontSize: '0.75em'}}>{errorText}</Typography>}\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default InputField;","import {useEffect, useState} from \"react\";\r\nimport {requestGet} from \"../utils/request\";\r\nimport {serialize} from \"../utils/utils\";\r\n\r\nconst useFetch = (url, callback = null, options = {}) => {\r\n    const [data, setData] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null),\r\n        [isRefetching, setIsRefetching] = useState(false);\r\n\r\n    function requestCall() {\r\n        let uri = url\r\n        if (options.queryParams) {\r\n            uri = `${uri}?${serialize(options.queryParams)}`\r\n        }\r\n        requestGet({uri, callback, showTriggers: false})\r\n            .then(result => {\r\n                result.data && setData(result.data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsRefetching(false);\r\n            })\r\n    }\r\n\r\n    function onRefetch() {\r\n        setIsRefetching(true);\r\n        requestCall();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(null);\r\n        requestCall();\r\n    }, [url])\r\n\r\n    return {data, loading, error, refetch: onRefetch, isRefetching}\r\n}\r\n\r\nexport default useFetch;","import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport _ from 'lodash'\r\nimport {requestGet} from \"../utils/request\";\r\n\r\nconst useFetchWithSearchPagination = (url, options) => {\r\n    const {order = 'asc', orderBy, debounceTime = 500 } = options || {};\r\n    const [data, setData] = useState([]),\r\n        [loading, setLoading] = useState(false),\r\n        [page, setPage] = useState(1),\r\n        [limit, setLimit] = useState(100),\r\n        [searchQuery, setSearchQuery] = useState(''),\r\n        [isPaginationLoading, setIsPaginationLoading] = useState(false),\r\n        [isSearching, setIsSearching] = useState(false),\r\n        [isRefetching, setIsRefetching] = useState(false),\r\n        [sortField, setSortField] = useState(orderBy),\r\n        [sortOrder, setSortOrder] = useState(order),\r\n        isInitialLoad = useRef(true);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [url, page, limit, sortField, sortOrder]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const debouncedSearch = _.debounce(() => {\r\n            if (!isInitialLoad.current) {\r\n                setIsSearching(true);\r\n                fetchData();\r\n            }\r\n        }, debounceTime);\r\n\r\n        debouncedSearch();\r\n\r\n        return debouncedSearch.cancel;\r\n    }, [searchQuery, debounceTime]);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        requestGet({uri: `${url}?page=${page}&search=${searchQuery}&limit=${limit}&sortField=${sortField}&sortOrder=${sortOrder}`})\r\n            .then(res => {\r\n                const {data} = res;\r\n                setData(data);\r\n            })\r\n            .catch(e => {\r\n                console.error(e.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n                setIsPaginationLoading(false);\r\n                setIsSearching(false);\r\n                setIsRefetching(false);\r\n                if (isInitialLoad.current) {\r\n                    isInitialLoad.current = false;\r\n                }\r\n            })\r\n    }, [url, page, limit, searchQuery, sortField, sortOrder]);\r\n\r\n    const onPageChange = useCallback((e, pgNum) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(pgNum);\r\n    }, [])\r\n\r\n    const handleSearch = useCallback(({value}) => {\r\n        setSearchQuery(value);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const onLimitChange = useCallback(({value}) => {\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n        setLimit(value);\r\n    }, [])\r\n\r\n    const handleSortChange = useCallback(({ field, order }) => {\r\n        setSortField(field);\r\n        setSortOrder(order);\r\n        setIsPaginationLoading(true);\r\n        setPage(1);\r\n    }, []);\r\n\r\n    const refetch = () => {\r\n        setPage(1);\r\n        setIsRefetching(true);\r\n        fetchData();\r\n    };\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        page,\r\n        limit,\r\n        onPageChange,\r\n        handleSearch,\r\n        refetch,\r\n        onLimitChange,\r\n        searchQuery,\r\n        isPaginationLoading,\r\n        isSearching,\r\n        isRefetching,\r\n        sortField,\r\n        sortOrder,\r\n        handleSortChange,\r\n    };\r\n};\r\n\r\nexport default useFetchWithSearchPagination","import Modal from \"../Atoms/Modal\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Select from \"../Atoms/form/Select\";\r\nimport {LOAD_STATUSES} from \"../constants\";\r\nimport {useState} from \"react\";\r\nimport useMutation from \"../../hooks/useMutation\";\r\nimport {LoadingButton} from \"../Atoms\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst config = {\r\n    title: 'Move Invoice to My Loads',\r\n    preventBackdropClick: true\r\n}\r\n\r\nconst Container = styled(Grid)(({theme}) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 'auto'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: 300\r\n    }\r\n}))\r\n\r\nconst MoveToMyLoads = (props) => {\r\n    const {onCloseUrl, getInvoices, refetch, getLoadStatuses = undefined, modalConfig, match: {params: {id} = {}} = {}, history} = props,\r\n        [value, setValue] = useState(),\r\n        {mutation, loading} = useMutation('/api/invoice/moveToMyLoads'),\r\n        statuses = getLoadStatuses ? getLoadStatuses(LOAD_STATUSES) : LOAD_STATUSES.map(status => {\r\n            if(status.id.equalsIgnoreCase('delivered')){\r\n                return {...status, disabled: true}\r\n            }\r\n            return status;\r\n        });\r\n\r\n    const onChange = ({value}) => {\r\n        setValue(value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        mutation({id, status: value}, null, () => {\r\n            getInvoices && getInvoices();\r\n            refetch && refetch();\r\n            history.replace(onCloseUrl);\r\n        });\r\n    }\r\n\r\n    return <Modal config={modalConfig || config}>\r\n        <Container container component='form' spacing={2} onSubmit={onSubmit}>\r\n            <Grid item>\r\n                <Typography>Select a load status</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Select\r\n                    label='Status'\r\n                    name='status'\r\n                    options={statuses}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    showNone={true}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <LoadingButton type='submit' fullWidth disabled={!value} isLoading={loading} loadingText='Moving...'>\r\n                    Move\r\n                </LoadingButton>\r\n            </Grid>\r\n        </Container>\r\n    </Modal>\r\n}\r\n\r\nexport default MoveToMyLoads;"],"sourceRoot":""}